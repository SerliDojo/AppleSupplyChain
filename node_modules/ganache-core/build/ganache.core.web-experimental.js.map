{"version":3,"sources":["webpack://Ganache/webpack/universalModuleDefinition","webpack://Ganache/webpack/bootstrap","webpack://Ganache/./lib/utils/to.js","webpack://Ganache/external \"ethereumjs-util\"","webpack://Ganache/external \"util\"","webpack://Ganache/external \"async\"","webpack://Ganache/external \"source-map-support/register\"","webpack://Ganache/external \"web3-provider-engine/subproviders/subprovider.js\"","webpack://Ganache/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://Ganache/external \"lodash\"","webpack://Ganache/external \"ethereumjs-account\"","webpack://Ganache/external \"ethereumjs-tx/fake.js\"","webpack://Ganache/external \"ethereumjs-block\"","webpack://Ganache/external \"events\"","webpack://Ganache/./node_modules/timers-browserify/main.js","webpack://Ganache/(webpack)/buildin/global.js","webpack://Ganache/./lib/utils/runtimeerror.js","webpack://Ganache/./lib/utils/log.js","webpack://Ganache/./lib/utils/receipt.js","webpack://Ganache/external \"merkle-patricia-tree\"","webpack://Ganache/external \"level-sublevel\"","webpack://Ganache/./node_modules/web3/src/index.js","webpack://Ganache/./lib/utils/txhelper.js","webpack://Ganache/./lib/provider.js","webpack://Ganache/external \"web3-provider-engine\"","webpack://Ganache/external \"web3-provider-engine/subproviders/subscriptions\"","webpack://Ganache/external \"ethereumjs-abi\"","webpack://Ganache/external \"seedrandom\"","webpack://Ganache/external \"bip39\"","webpack://Ganache/./node_modules/ethereumjs-wallet/index.js","webpack://Ganache/external \"safe-buffer\"","webpack://Ganache/external \"crypto\"","webpack://Ganache/external \"scrypt.js\"","webpack://Ganache/external \"uuid/v4\"","webpack://Ganache/external \"bs58check\"","webpack://Ganache/external \"hdkey\"","webpack://Ganache/./lib/blockchain_double.js","webpack://Ganache/external \"ethereumjs-vm\"","webpack://Ganache/external \"heap\"","webpack://Ganache/external \"levelup\"","webpack://Ganache/external \"encoding-down\"","webpack://Ganache/external \"abstract-leveldown\"","webpack://Ganache/external \"fs\"","webpack://Ganache/external \"path\"","webpack://Ganache/external \"cachedown\"","webpack://Ganache/./lib/database/txserializer.js","webpack://Ganache/external \"tmp\"","webpack://Ganache/external \"web3-core\"","webpack://Ganache/external \"web3-eth\"","webpack://Ganache/external \"web3-net\"","webpack://Ganache/external \"web3-eth-personal\"","webpack://Ganache/external \"web3-shh\"","webpack://Ganache/external \"web3-bzz\"","webpack://Ganache/external \"web3-utils\"","webpack://Ganache/external \"bn.js\"","webpack://Ganache/external \"eth-sig-util\"","webpack://Ganache/./lib/utils/block_helper.js","webpack://Ganache/external \"websocket\"","webpack://Ganache/external \"http\"","webpack://Ganache/external \"core-js/fn/promise\"","webpack://Ganache/./index.js","webpack://Ganache/external \"debug\"","webpack://Ganache/./public-exports.js","webpack://Ganache/external \"setimmediate\"","webpack://Ganache/./lib/subproviders/requestfunnel.js","webpack://Ganache/./lib/subproviders/delayedblockfilter.js","webpack://Ganache/./lib/subproviders/gethdefaults.js","webpack://Ganache/./lib/subproviders/geth_api_double.js","webpack://Ganache/./lib/statemanager.js","webpack://Ganache/external \"base64-js\"","webpack://Ganache/external \"ieee754\"","webpack://Ganache/external \"isarray\"","webpack://Ganache/./node_modules/ethereumjs-wallet/hdkey.js","webpack://Ganache/./lib/database.js","webpack://Ganache/./lib/database/leveluparrayadapter.js","webpack://Ganache/./lib/database/levelupobjectadapter.js","webpack://Ganache/./lib/database/filedown.js","webpack://Ganache/./lib/database/blockserializer.js","webpack://Ganache/./lib/database/bufferserializer.js","webpack://Ganache/./lib/database/blocklogsserializer.js","webpack://Ganache/./lib/database/receiptserializer.js","webpack://Ganache/./lib/utils/forkedblockchain.js","webpack://Ganache/./lib/utils/forkedstoragetrie.js","webpack://Ganache/./lib/utils/random.js","webpack://Ganache/./lib/utils/txrejectederror.js","webpack://Ganache/./lib/block_tracker.js","webpack://Ganache/./lib/server.js","webpack://Ganache/./lib/webSocketServer.js","webpack://Ganache/./lib/httpServer.js","webpack://Ganache/./build/ganache.core.node.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","utils","hex","val","indexOf","trim","BN","intToHex","toString","addHexPrefix","rpcQuantityHexString","this","replace","rpcDataHexString","length","Array","fill","join","nullableRpcDataHexString","rpcDataHex","hexWithZeroPadding","digits","number","parseInt","bufVal","toBuffer","bufferToInt","require","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","isnan","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","scope","self","Function","Timeout","id","clearFn","_id","_clearFn","setTimeout","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","g","eval","inherits","to","abi","RuntimeError","transactions","vmOutput","captureStackTrace","constructor","results","hashes","combine","err","keys","tx","result","vm","exception","reason","hash","returnData","return","rawDecode","error","exceptionError","program_counter","runState","programCounter","exceptionResult","message","count","fromResults","Log","forEach","logIndex","transactionIndex","transactionHash","blockHash","block","blockNumber","header","address","topics","Receipt","logs","gasUsed","cumulativeGasUsed","contractAddress","status","logsBloom","map","log","v","version","core","Eth","Net","Personal","Shh","Bzz","Web3","_this","packageInit","eth","shh","bzz","setProvider","provider","net","addProviders","FakeTransaction","resultJSON","nonce","gas","gasLimit","gasPrice","input","fromJSON","json","setLengthLeft","ProviderEngine","SubscriptionSubprovider","RequestFunnel","DelayedBlockFilter","GethDefaults","GethApiDouble","BlockTracker","EventEmitter","_","Provider","options","_applyDefaultOptions","gethApiDouble","engine","blockTracker","blockchain","state","subscriptionSubprovider","manager","addProvider","setMaxListeners","sendAsync","send","_queueRequest","_processRequestQueue","on","notification","emit","defaultOptions","vmErrorsOnRPCResponse","verbose","asyncRequestProcessing","logger","merge","payload","callback","externalize","cloneDeep","intermediary","response","reportErrorInResponse","JSON","stringify","split","stop","_requestQueue","_requestInProgress","args","shift","cleanUpErrorObject","errorObject","stack","transactionMethods","_isTransactionRequest","request","method","_typeof","iterator","ethUtil","crypto","scryptsy","uuidv4","bs58check","assert","msg","decipherBuffer","decipher","update","final","Wallet","priv","pub","isValidPrivate","isValidPublic","_privKey","_pubKey","privateToPublic","privKey","generate","icapDirect","randomBytes","privateToAddress","lte","generateVanityAddress","pattern","RegExp","test","getPrivateKey","getPrivateKeyString","bufferToHex","getPublicKey","pubKey","getPublicKeyString","getAddress","publicToAddress","getAddressString","getChecksumAddressString","toChecksumAddress","toV3","password","opts","derivedKey","salt","iv","kdf","kdfparams","dklen","prf","pbkdf2Sync","cipher","createCipheriv","ciphertext","mac","sha3","random","uuid","cipherparams","getV3Filename","timestamp","Date","toV3String","fromPublicKey","nonStrict","importPublic","fromExtendedPublicKey","decode","fromPrivateKey","fromExtendedPrivateKey","tmp","fromV1","parse","Version","Crypto","KeyHeader","Kdf","KdfParams","Salt","N","R","P","DkLen","CipherText","MAC","seed","createDecipheriv","IV","fromV3","fromEthSale","encseed","wallet","ethaddr","Account","Block","VM","Trie","async","Heap","Database","BlockchainDouble","console","trie","db_path","pending_transactions","blockGasLimit","defaultTransactionGasLimit","timeAdjustment","time","debug","allowUnlimitedContractSize","assign","initialize","accounts","latestBlock","stateRoot","stateTrie","createStateTrie","trie_db","getBlock","done","enableHomestead","activatePrecompiles","info","opcode","argsNum","in","setTime","createGenesisBlock","eachSeries","accountData","finished","putAccount","account","putBlock","db","createBlock","blocks","last","getEffectiveBlockNumber","getHeight","blockHashes","blockIndex","first","receipts","requests","blockLogs","index","txHash","transactionReceipts","parallel","popBlock","del","pop","series","newLastBlock","clearPendingTransactions","stateManager","cache","flush","parent","getParent","parentNumber","currentTime","parentHash","getQueuedNonce","pendingNonce","queueTransaction","sortByPriceAndNonce","sortedByNonce","nonceSort","sort","heap","sortedTransactions","best","processCall","startingStateRoot","cleanUpAndReturn","changeRoot","revert","runCall","checkpoint","runArgs","skipBalance","skipNonce","runTx","vmerr","processBlock","commit","cleanup","runBlock","totalBlockGasUsage","receipt","txLogs","receiptLog","rcpt","toArrayLike","createdAddress","bloom","bitvector","cb","commmitIfNeeded","processNextBlock","currentTransactions","totalGasLimit","maxGasLimit","processTransactionTrace","params","targetHash","txHashCurrentlyProcessing","txCurrentlyProcessing","storageStack","currentDepth","returnVal","returnValue","structLogs","stepListener","event","next","gasLeft","gasUsedThisStep","memory","disableMemory","lastItem","disableStack","structLog","depth","gasCost","op","pc","storage","disableStorage","processStorageTrace","beforeTxListener","afterTxListener","removeListener","getTransactionReceipt","targetBlock","getContractStorage","getAccount","currentStateRoot","exists","getNonce","getBalance","balance","getStorage","position","getCode","getTransaction","notFound","getBlockLogs","effective","getTime","increaseTime","seconds","date","now","encode","encoded","txhelper","includeFullTransactions","mixHash","sha3Uncles","uncleHash","transactionsRoot","transactionsTrie","receiptsRoot","receiptTrie","miner","coinbase","difficulty","totalDifficulty","extraData","uncles","optionalDependencies","wrongWeb3","wrongEthereumJs","useBundled","_webpacked","nativeError","webpackError","Server","server","Subprovider","methods","eth_call","eth_getStorageAt","eth_sendTransaction","eth_sendRawTransaction","eth_newBlockFilter","eth_getFilterChanges","eth_getFilterLogs","queue","isWorking","handleRequest","external","processNext","watching","handleNewBlockFilter","handleGetFilterChanges","filterId","currentBlockHash","previousBlockHash","emitPayload","StateManager","blockHelper","pkg","initialized","initialization_error","post_initialization_callbacks","callbacks","waitForInitialization","addedBlockParam","requiresDefaultBlockParameter","minLength","errorMessage","getDelayedHandler","eth_getBalance","eth_getCode","eth_getTransactionCount","eth_estimateGas","eth_accounts","eth_blockNumber","eth_coinbase","eth_mining","is_mining","eth_hashrate","eth_gasPrice","eth_getBlockByNumber","eth_getBlockByHash","eth_getBlockTransactionCountByNumber","eth_getBlockTransactionCountByHash","eth_getTransactionReceipt","eth_getTransactionByHash","eth_getTransactionByBlockHashAndIndex","hashOrNumber","eth_getTransactionByBlockNumberAndIndex","getTransactionCount","eth_sign","dataToSign","sign","eth_signTypedData","typedDataToSign","signTypedData","txData","rawTx","queueRawTransaction","queueStorage","latestFilterId","mine","eth_getLogs","filter","getLogs","eth_uninstallFilter","eth_protocolVersion","bzz_hive","bzz_info","shh_version","eth_getCompilers","eth_syncing","net_listening","net_peerCount","web3_clientVersion","web3_sha3","net_version","miner_start","threads","startMining","miner_stop","stopMining","rpc_modules","rpc","web3","evm","personal","personal_listAccounts","personal_accounts","personal_newAccount","createAccount","account_passwords","personal_importRawKey","rawKey","secretKey","personal_lockAccount","unlocked_accounts","personal_unlockAccount","duration","storedPassword","personal_sendTransaction","evm_snapshot","snapshot","evm_revert","snapshotId","evm_increaseTime","evm_setTime","evm_mine","debug_traceTransaction","queueTransactionTrace","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_getUncleByBlockHashAndIndex","eth_getUncleByBlockNumberAndIndex","uncleIndex","eth_newPendingTransactionFilter","eth_getWork","eth_submitWork","powHash","digest","eth_submitHashrate","hashRate","clientID","db_putString","dbName","db_getString","db_putHex","db_getHex","shh_post","priority","ttl","shh_newIdentity","shh_hasIdentity","shh_newGroup","shh_addToGroup","shh_newFilter","shh_uninstallFilter","shh_getFilterChanges","shh_getMessages","seedrandom","bip39","hdkey","ForkedBlockchain","sigUtil","TXRejectedError","fork","secure","total_accounts","latest_filter_id","action_queue","action_processing","snapshots","network_id","mnemonic","fromMasterSeed","mnemonicToSeed","wallet_hdpath","hdPath","gasPriceVal","blockTime","is_mining_on_interval","mining_interval_timeout","_provider","default_balance_ether","randomAlphaNumericString","entropyToMnemonic","defaultBalanceWei","toWei","reduce","idx","fork_version","mineOnInterval","derivePath","getWallet","publicKey","stripHexPrefix","txParams","processNextAction","override","queued","rlp","processTransaction","processGasEstimate","msgHash","hashPersonalMessage","sgn","ecsign","toRpcSig","types","EIP712Domain","domain","primaryType","printTransactionReceipt","runtimeError","finishedPrinting","processBlocks","totalBlocks","amountProcessed","whilst","createFakeTransactionWithCorrectNonce","gasRefund","add","expectedAddress","expectedTopics","fromBlock","toBlock","current","filtered","keep","expectedTopic","logTopic","isMatch","nextSnapshot","during","doneWithTest","nextBlock","hasContractCode","getContractCode","isUnlocked","expectedNonce","expected","HDKey","EthereumHDKey","fromHDKey","_hdkey","seedBuffer","fromExtendedKey","base58key","privateExtendedKey","publicExtendedKey","path","derive","deriveChild","_privateKey","_publicKey","LevelUpArrayAdapter","LevelUpObjectAdapter","levelup","filedown","cachedown","txserializer","blockserializer","bufferserializer","BlockLogsSerializer","ReceiptSerializer","finishInitializing","getDir","directory","maxSize","valueEncoding","Sublevel","serializer","sublevel","_get","_put","put","newLength","valueserializer","keyserializer","encodedKey","decodedValue","batch","each","isOpen","util","AbstractLevelDOWN","fs","FileDown","location","_open","writeFile","readFile","_del","unlink","_batch","txJson","database","ForkedStorageTrie","forkBlockNumber","forkVersion","providers","HttpProvider","storageTrieCache","getId","_lookupStorageTrie","lookupStorageTrie","_lookupAccount","putContractCode","putCode","createForkedStorageTrie","isFallbackBlock","isBlockHash","isFallbackBlockHash","getFallbackBlock","numberOrHash","toBN","transactionTrie","getRelativeBlockNumber","getBlockReference","blockReference","keyExists","fetchCodeFromFallback","setCode","serialize","acc","fetchAccountFromFallback","receiptJson","fetchBalanceFromFallback","fetchNonceFromFallback","getSafeFallbackBlockNumber","safeBlockNumber","relative","currentProvider","jsonrpc","_checkpointTrie","customCheckpoint","_revertTrie","checkpoints","customRevert","MerklePatriciaTree","findPath","node","remainder","getStorageAt","rng","alphabet","text","charAt","GanacheBlockTracker","_blockchain","getTrackingBlock","awaitCurrentBlock","_setCurrentBlock","_currentBlock","getCurrentBlock","Promise","resolve","once","then","_isRunning","newBlock","oldBlock","webSocketServer","httpServer","keepAliveTimeout","connectionCounter","connections","conn","oldListen","listen","ws","oldClose","destroy","WebSocketServer","ConnectionManager","connectionsBySubscriptionId","_updateSubscriptions","manageConnection","_logPayload","_handleRequest","connectionManager","wsServer","autoAcceptConnections","connection","subscriptions","utf8Data","reject","subscriptionId","subscription","http","createServer","body","chunk","headers","Access-Control-Allow-Headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","writeHead","Content-Type","ganacheProvider","default","u","h","f","k","w","B","T","S","C","_args","_development","_from","_inBundle","_integrity","_location","_optional","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_spec","_where","author","authors","email","homepage","url","bugs","dependencies","web3-bzz","web3-core","web3-eth","web3-eth-personal","web3-net","web3-shh","web3-utils","description","keywords","license","main","namespace","repository","engines","directories","lib","prettier","printWidth","arrowParens","scripts","_mocha","_lint","build","build-web","format","prepublishOnly","test-build","test-web-experimental","abstract-leveldown","bn.js","clone","encoding-down","eth-sig-util","ethereumjs-abi","ethereumjs-account","ethereumjs-block","ethereumjs-tx","ethereumjs-util","ethereumjs-vm","intercept-require","level-sublevel","lodash","merkle-patricia-tree","web3-provider-engine","websocket","devDependencies","assert-match","eslint","eslint-config-standard","eslint-plugin-import","eslint-plugin-node","eslint-plugin-promise","eslint-plugin-standard","memdown","mocha","browserfs","cross-env","ethereumjs-wallet","pify","portfinder","solc","source-map-support","temp","webpack","webpack-bundle-size-analyzer","webpack-cli"],"mappings":"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","file":"ganache.core.web-experimental.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Ganache\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ganache\"] = factory();\n\telse\n\t\troot[\"Ganache\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","var utils = require(\"ethereumjs-util\");\r\n\r\nmodule.exports = {\r\n  // Note: Do not use to.hex() when you really mean utils.addHexPrefix().\r\n  hex: function(val) {\r\n    if (typeof val === \"string\") {\r\n      if (val.indexOf(\"0x\") === 0) {\r\n        return val.trim();\r\n      } else {\r\n        val = new utils.BN(val);\r\n      }\r\n    }\r\n\r\n    if (typeof val === \"boolean\") {\r\n      val = val ? 1 : 0;\r\n    }\r\n\r\n    if (typeof val === \"number\") {\r\n      val = utils.intToHex(val);\r\n    }\r\n\r\n    // Support Buffer, BigInteger and BN library\r\n    // Hint: BN is used in ethereumjs\r\n    if (typeof val === \"object\") {\r\n      val = val.toString(\"hex\");\r\n    }\r\n\r\n    return utils.addHexPrefix(val);\r\n  },\r\n\r\n  rpcQuantityHexString: function(val) {\r\n    val = this.hex(val);\r\n    val = \"0x\" + val.replace(\"0x\", \"\").replace(/^0+/, \"\");\r\n\r\n    // RPC Quantities must represent `0` as `0x0`\r\n    if (val === \"0x\") {\r\n      val = \"0x0\";\r\n    }\r\n\r\n    return val;\r\n  },\r\n\r\n  rpcDataHexString: function(val, length) {\r\n    if (typeof length === \"number\") {\r\n      val = this.hex(val).replace(\"0x\", \"\");\r\n\r\n      val = new Array(length - val.length).fill(\"0\").join(\"\") + val;\r\n    } else {\r\n      if (val.length === 0) {\r\n        return \"0x\";\r\n      }\r\n      val = this.hex(val).replace(\"0x\", \"\");\r\n\r\n      if (val.length % 2 !== 0) {\r\n        val = \"0\" + val;\r\n      }\r\n    }\r\n    return \"0x\" + val;\r\n  },\r\n\r\n  nullableRpcDataHexString: function(val, length) {\r\n    const rpcDataHex = this.rpcDataHexString(val, length);\r\n    return rpcDataHex === \"0x\" ? null : rpcDataHex;\r\n  },\r\n\r\n  hexWithZeroPadding: function(val) {\r\n    val = this.hex(val);\r\n    const digits = val.replace(\"0x\", \"\");\r\n    if (digits.length & 0x1) {\r\n      return \"0x0\" + digits;\r\n    }\r\n    return val;\r\n  },\r\n\r\n  number: function(val) {\r\n    if (typeof val === \"number\") {\r\n      return val;\r\n    }\r\n    if (typeof val === \"string\") {\r\n      if (val.indexOf(\"0x\") !== 0) {\r\n        return parseInt(val, 10);\r\n      }\r\n    }\r\n    var bufVal = utils.toBuffer(val);\r\n    return utils.bufferToInt(bufVal);\r\n  }\r\n};\r\n","module.exports = require(\"ethereumjs-util\");","module.exports = require(\"util\");","module.exports = require(\"async\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"web3-provider-engine/subproviders/subprovider.js\");","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","module.exports = require(\"lodash\");","module.exports = require(\"ethereumjs-account\");","module.exports = require(\"ethereumjs-tx/fake.js\");","module.exports = require(\"ethereumjs-block\");","module.exports = require(\"events\");","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var inherits = require(\"util\").inherits;\r\nvar to = require(\"./to\");\r\nvar abi = require(\"ethereumjs-abi\");\r\n\r\ninherits(RuntimeError, Error);\r\n\r\n// Note: ethereumjs-vm will return an object that has a \"results\" and \"receipts\" keys.\r\n// You should pass in the whole object.\r\nfunction RuntimeError(transactions, vmOutput) {\r\n  // Why not just Error.apply(this, [message])? See\r\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\r\n  Error.captureStackTrace(this, this.constructor);\r\n  this.name = this.constructor.name;\r\n\r\n  this.results = {};\r\n  this.hashes = [];\r\n\r\n  // handles creating this.message\r\n  this.combine(transactions, vmOutput);\r\n}\r\n\r\nRuntimeError.prototype.combine = function(transactions, vmOutput) {\r\n  // Can be combined with vmOutput or another RuntimeError.\r\n  if (transactions instanceof RuntimeError) {\r\n    var err = transactions;\r\n    var keys = Object.keys(err.results);\r\n\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n      this.results[key] = err.results[key];\r\n      Array.prototype.push.apply(this.hashes, err.hashes);\r\n    }\r\n  } else {\r\n    var results = vmOutput.results;\r\n\r\n    for (i = 0; i < transactions.length; i++) {\r\n      var tx = transactions[i];\r\n      var result = results[i];\r\n\r\n      // 1 means no error, oddly.\r\n      if (result.vm.exception !== 1) {\r\n        var hash = to.hex(tx.hash());\r\n\r\n        this.hashes.push(hash);\r\n        var reason;\r\n        var returnData = result.vm.return;\r\n        if (returnData && returnData.slice(0, 4).toString(\"hex\") === \"08c379a0\") {\r\n          reason = abi.rawDecode([\"string\"], returnData.slice(4))[0];\r\n        }\r\n\r\n        this.results[hash] = {\r\n          error: result.vm.exceptionError.error || result.vm.exceptionError,\r\n          program_counter: result.vm.runState.programCounter,\r\n          return: to.hex(result.vm.return),\r\n          reason: reason\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  // Once combined, set the message\r\n  if (this.hashes.length === 1) {\r\n    var exceptionResult = this.results[this.hashes[0]];\r\n    var message = \"VM Exception while processing transaction: \" + exceptionResult.error;\r\n    if (exceptionResult.reason) {\r\n      message += \" \" + exceptionResult.reason;\r\n    }\r\n    this.message = message;\r\n  } else {\r\n    message = \"Multiple VM Exceptions while processing transactions: \\n\\n\";\r\n\r\n    for (i = 0; i < this.hashes.length; i++) {\r\n      hash = this.hashes[i];\r\n      exceptionResult = this.results[hash];\r\n      message += hash + \": \" + exceptionResult.error;\r\n      if (exceptionResult.reason) {\r\n        message += \" \" + exceptionResult.reason;\r\n      }\r\n      message += \"\\n\";\r\n    }\r\n    this.message = message;\r\n  }\r\n};\r\n\r\nRuntimeError.prototype.count = function() {\r\n  return Object.keys(this.results).length;\r\n};\r\n\r\nRuntimeError.fromResults = function(transactions, vmOutput) {\r\n  var err = new RuntimeError(transactions, vmOutput);\r\n\r\n  if (err.count() === 0) {\r\n    return null;\r\n  }\r\n\r\n  return err;\r\n};\r\n\r\nmodule.exports = RuntimeError;\r\n","var to = require(\"./to.js\");\n\n// Expects:\n//\n// logIndex: ...\n// transactionIndex: ...\n// transactionHash: ...\n// block: ...\n// address: ...\n// data: ...\n// topics: ...\n// type: ...\n\nfunction Log(data) {\n  var self = this;\n  Object.keys(data).forEach(function(key) {\n    self[key] = data[key];\n  });\n}\n\nLog.prototype.toJSON = function() {\n  // RPC quantity values like this.transactionIndex can be set to \"0x00\",\n  // use the explicit rpcQuantityHexString to properly format the JSON, removing leading zeroes.\n  // See RPC log format spec: https://github.com/ethereum/wiki/wiki/JSON-RPC\n  return {\n    logIndex: to.rpcQuantityHexString(this.logIndex),\n    transactionIndex: to.rpcQuantityHexString(this.transactionIndex),\n    transactionHash: to.rpcDataHexString(this.transactionHash),\n    blockHash: to.rpcDataHexString(this.block.hash()),\n    blockNumber: to.rpcQuantityHexString(this.block.header.number),\n    address: to.rpcDataHexString(this.address),\n    data: to.rpcDataHexString(this.data),\n    topics: this.topics,\n    type: \"mined\"\n  };\n};\n\nmodule.exports = Log;\n","var to = require(\"./to\");\r\n\r\nfunction Receipt(tx, block, logs, gasUsed, cumulativeGasUsed, contractAddress, status, logsBloom) {\r\n  this.tx = tx;\r\n  this.block = block;\r\n  this.logs = logs;\r\n  this.gasUsed = gasUsed;\r\n  this.cumulativeGasUsed = cumulativeGasUsed;\r\n  this.contractAddress = contractAddress;\r\n  this.status = status;\r\n  this.logsBloom = logsBloom;\r\n\r\n  this.transactionIndex = 0;\r\n\r\n  for (var i = 0; i < block.transactions.length; i++) {\r\n    var current = block.transactions[i];\r\n    if (current.hash().equals(tx.hash())) {\r\n      this.transactionIndex = i;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nReceipt.prototype.toJSON = function() {\r\n  // Enforce Hex formatting as defined in the RPC spec.\r\n  return {\r\n    transactionHash: to.rpcDataHexString(this.tx.hash()),\r\n    transactionIndex: to.rpcQuantityHexString(this.transactionIndex),\r\n    blockHash: to.rpcDataHexString(this.block.hash()),\r\n    blockNumber: to.rpcQuantityHexString(this.block.header.number),\r\n    gasUsed: to.rpcQuantityHexString(this.gasUsed),\r\n    cumulativeGasUsed: to.rpcQuantityHexString(this.cumulativeGasUsed),\r\n    contractAddress: this.contractAddress != null ? to.rpcDataHexString(this.contractAddress) : null,\r\n    logs: this.logs.map(function(log) {\r\n      return log.toJSON();\r\n    }),\r\n    status: to.rpcQuantityHexString(this.status),\r\n    logsBloom: to.rpcDataHexString(this.logsBloom),\r\n    v: to.rpcDataHexString(this.tx.v),\r\n    r: to.rpcDataHexString(this.tx.r),\r\n    s: to.rpcDataHexString(this.tx.s)\r\n  };\r\n};\r\n\r\nmodule.exports = Receipt;\r\n","module.exports = require(\"merkle-patricia-tree\");","module.exports = require(\"level-sublevel\");","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n *   Gav Wood <gav@parity.io>\n *   Jeffrey Wilcke <jeffrey.wilcke@ethereum.org>\n *   Marek Kotewicz <marek@parity.io>\n *   Marian Oancea <marian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\n\nvar version = require('../package.json').version;\nvar core = require('web3-core');\nvar Eth = require('web3-eth');\nvar Net = require('web3-net');\nvar Personal = require('web3-eth-personal');\nvar Shh = require('web3-shh');\nvar Bzz = require('web3-bzz');\nvar utils = require('web3-utils');\n\nvar Web3 = function Web3() {\n    var _this = this;\n\n    // sets _requestmanager etc\n    core.packageInit(this, arguments);\n\n    this.version = version;\n    this.utils = utils;\n\n    this.eth = new Eth(this);\n    this.shh = new Shh(this);\n    this.bzz = new Bzz(this);\n\n    // overwrite package setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function (provider, net) {\n        setProvider.apply(_this, arguments);\n\n        this.eth.setProvider(provider, net);\n        this.shh.setProvider(provider, net);\n        this.bzz.setProvider(provider);\n\n        return true;\n    };\n};\n\nWeb3.version = version;\nWeb3.utils = utils;\nWeb3.modules = {\n    Eth: Eth,\n    Net: Net,\n    Personal: Personal,\n    Shh: Shh,\n    Bzz: Bzz\n};\n\ncore.addProviders(Web3);\n\nmodule.exports = Web3;\n\n","var to = require(\"./to\");\r\nvar FakeTransaction = require(\"ethereumjs-tx/fake.js\");\r\nvar utils = require(\"ethereumjs-util\");\r\n\r\nmodule.exports = {\r\n  toJSON: function(tx, block) {\r\n    var transactionIndex = 0;\r\n    for (var i = 0; i < block.transactions.length; i++) {\r\n      var current = block.transactions[i];\r\n      if (current.hash().equals(tx.hash())) {\r\n        transactionIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    var resultJSON = {\r\n      hash: to.nullableRpcDataHexString(tx.hash()),\r\n      nonce: to.rpcQuantityHexString(tx.nonce),\r\n      blockHash: to.nullableRpcDataHexString(block.hash()),\r\n      blockNumber: to.rpcQuantityHexString(block.header.number),\r\n      transactionIndex: to.rpcQuantityHexString(transactionIndex),\r\n      from: to.nullableRpcDataHexString(tx.from),\r\n      to: to.nullableRpcDataHexString(tx.to),\r\n      value: to.rpcQuantityHexString(tx.value),\r\n      gas: to.rpcQuantityHexString(tx.gasLimit),\r\n      gasPrice: to.rpcQuantityHexString(tx.gasPrice),\r\n      input: to.nullableRpcDataHexString(tx.data)\r\n    };\r\n\r\n    if (tx.v && tx.v.length > 0 && tx.r && tx.r.length > 0 && tx.s && tx.s.length > 0) {\r\n      resultJSON.v = to.hex(tx.v);\r\n      resultJSON.r = to.hex(tx.r);\r\n      resultJSON.s = to.hex(tx.s);\r\n    }\r\n\r\n    return resultJSON;\r\n  },\r\n\r\n  fromJSON: function(json) {\r\n    var tx = new FakeTransaction({\r\n      nonce: utils.toBuffer(to.hex(json.nonce)),\r\n      from: utils.toBuffer(to.hex(json.from)),\r\n      value: utils.toBuffer(to.hex(json.value)),\r\n      gasLimit: utils.toBuffer(to.hex(json.gas)),\r\n      gasPrice: utils.toBuffer(to.hex(json.gasPrice)),\r\n      data: utils.toBuffer(to.hex(json.input))\r\n    });\r\n\r\n    if (json.v && json.v.length > 0 && json.r && json.r.length > 0 && json.s && json.s.length > 0) {\r\n      tx.v = utils.toBuffer(to.hex(json.v));\r\n      tx.r = utils.toBuffer(to.hex(json.r));\r\n      tx.s = utils.toBuffer(to.hex(json.s));\r\n    }\r\n\r\n    if (json.to) {\r\n      // Remove all padding and make it easily comparible.\r\n      var buf = utils.toBuffer(to.hex(json.to));\r\n      if (!buf.equals(utils.toBuffer(\"0x0\"))) {\r\n        tx.to = utils.setLengthLeft(buf, 20);\r\n      }\r\n    }\r\n\r\n    return tx;\r\n  }\r\n};\r\n","// make sourcemaps work!\r\nrequire(\"source-map-support/register\");\r\n\r\nlet ProviderEngine = require(\"web3-provider-engine\");\r\nlet SubscriptionSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\r\n\r\nlet RequestFunnel = require(\"./subproviders/requestfunnel\");\r\nlet DelayedBlockFilter = require(\"./subproviders/delayedblockfilter\");\r\nlet GethDefaults = require(\"./subproviders/gethdefaults\");\r\nlet GethApiDouble = require(\"./subproviders/geth_api_double\");\r\n\r\nlet BlockTracker = require(\"./block_tracker\");\r\n\r\nlet RuntimeError = require(\"./utils/runtimeerror\");\r\nlet EventEmitter = require(\"events\");\r\n\r\nlet _ = require(\"lodash\");\r\n\r\nfunction Provider(options) {\r\n  const self = this;\r\n  EventEmitter.call(this);\r\n\r\n  this.options = options = self._applyDefaultOptions(options || {});\r\n\r\n  let gethApiDouble = new GethApiDouble(options, this);\r\n\r\n  this.engine = new ProviderEngine({\r\n    blockTracker: new BlockTracker({ blockchain: gethApiDouble.state.blockchain })\r\n  });\r\n\r\n  let subscriptionSubprovider = new SubscriptionSubprovider();\r\n\r\n  this.engine.manager = gethApiDouble;\r\n  this.engine.addProvider(new RequestFunnel());\r\n  this.engine.addProvider(new DelayedBlockFilter());\r\n  this.engine.addProvider(subscriptionSubprovider);\r\n  this.engine.addProvider(new GethDefaults());\r\n  this.engine.addProvider(gethApiDouble);\r\n\r\n  this.engine.setMaxListeners(100);\r\n  this.engine.start();\r\n\r\n  this.manager = gethApiDouble;\r\n  this.sendAsync = this.send.bind(this);\r\n  this.send = this.send.bind(this);\r\n  this.close = this.close.bind(this);\r\n  this._queueRequest = this._queueRequest.bind(this);\r\n  this._processRequestQueue = this._processRequestQueue.bind(this);\r\n\r\n  subscriptionSubprovider.on(\"data\", function(err, notification) {\r\n    self.emit(\"data\", err, notification);\r\n  });\r\n}\r\n\r\nconst defaultOptions = {\r\n  vmErrorsOnRPCResponse: true,\r\n  verbose: false,\r\n  asyncRequestProcessing: false,\r\n  logger: {\r\n    log: function() {}\r\n  }\r\n};\r\n\r\nProvider.prototype = Object.create(EventEmitter.prototype);\r\nProvider.prototype.constructor = Provider;\r\n\r\nProvider.prototype._applyDefaultOptions = function(options) {\r\n  return _.merge({}, defaultOptions, options);\r\n};\r\n\r\nProvider.prototype.send = function(payload, callback) {\r\n  if (typeof callback !== \"function\") {\r\n    throw new Error(\r\n      \"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\r\n        \"is no longer synchronous and must be passed a callback as its final argument.\"\r\n    );\r\n  }\r\n\r\n  let self = this;\r\n\r\n  let externalize = function(payload) {\r\n    return _.cloneDeep(payload);\r\n  };\r\n\r\n  if (Array.isArray(payload)) {\r\n    payload = payload.map(externalize);\r\n  } else {\r\n    payload = externalize(payload);\r\n  }\r\n\r\n  let intermediary = function(err, result) {\r\n    // clone result so that we can mutate the response without worrying about\r\n    // that messing up assumptions the calling logic might have about us\r\n    // mutating things\r\n    result = _.cloneDeep(result);\r\n    let response;\r\n    if (Array.isArray(result)) {\r\n      response = [];\r\n      for (let i = 0; i < result.length; i++) {\r\n        response.push(self.reportErrorInResponse(payload[i], err, result[i]));\r\n      }\r\n    } else {\r\n      response = self.reportErrorInResponse(payload, err, result);\r\n    }\r\n\r\n    if (self.options.verbose) {\r\n      self.options.logger.log(\r\n        \" <   \" +\r\n          JSON.stringify(response, null, 2)\r\n            .split(\"\\n\")\r\n            .join(\"\\n <   \")\r\n      );\r\n    }\r\n    callback(response.error ? err : null, response);\r\n  };\r\n\r\n  if (self.options.verbose) {\r\n    self.options.logger.log(\r\n      \"   > \" +\r\n        JSON.stringify(payload, null, 2)\r\n          .split(\"\\n\")\r\n          .join(\"\\n   > \")\r\n    );\r\n  }\r\n\r\n  if (self.options.asyncRequestProcessing) {\r\n    self.engine.sendAsync(payload, intermediary);\r\n  } else {\r\n    self._queueRequest(payload, intermediary);\r\n  }\r\n};\r\n\r\nProvider.prototype.close = function(callback) {\r\n  // This is a little gross reaching, but...\r\n  this.manager.state.blockchain.close(callback);\r\n  this.engine.stop();\r\n};\r\n\r\nProvider.prototype._queueRequest = function(payload, intermediary) {\r\n  if (!this._requestQueue) {\r\n    this._requestQueue = [];\r\n  }\r\n\r\n  this._requestQueue.push({\r\n    payload: payload,\r\n    callback: intermediary\r\n  });\r\n\r\n  setImmediate(this._processRequestQueue);\r\n};\r\n\r\nProvider.prototype._processRequestQueue = function() {\r\n  const self = this;\r\n\r\n  if (self._requestInProgress) {\r\n    return;\r\n  }\r\n\r\n  self._requestInProgress = true;\r\n\r\n  let args = self._requestQueue.shift();\r\n\r\n  if (args) {\r\n    self.engine.sendAsync(args.payload, (err, result) => {\r\n      if (self._requestQueue.length > 0) {\r\n        setImmediate(self._processRequestQueue);\r\n      }\r\n      args.callback(err, result);\r\n      self._requestInProgress = false;\r\n    });\r\n  } else {\r\n    // still need to free the lock\r\n    self._requestInProgress = false;\r\n\r\n    if (self._requestQueue.length > 0) {\r\n      setImmediate(self._processRequestQueue);\r\n    }\r\n  }\r\n};\r\n\r\nProvider.prototype.cleanUpErrorObject = function(err, response) {\r\n  // Our response should already have an error field at this point, if it\r\n  // doesn't, this was likely intentional. If not, this is the wrong place to\r\n  // fix that problem.\r\n  if (!err || !response.error) {\r\n    return response;\r\n  }\r\n\r\n  let errorObject = {\r\n    error: {\r\n      data: {}\r\n    }\r\n  };\r\n\r\n  if (err.message) {\r\n    // clean up the error reporting done by the provider engine so the error message isn't lost in the stack trace noise\r\n    errorObject.error.message = err.message;\r\n    errorObject.error.data.stack = err.stack;\r\n    errorObject.error.data.name = err.name;\r\n  } else if (!response.error) {\r\n    errorObject.error = {\r\n      message: err.toString()\r\n    };\r\n  }\r\n\r\n  return _.merge(response, errorObject);\r\n};\r\n\r\n// helper list of RPC methods which execute code and respond with a transaction hash as their result\r\nlet transactionMethods = [\"eth_sendTransaction\", \"eth_sendRawTransaction\", \"personal_sendTransaction\"];\r\n\r\nProvider.prototype._isTransactionRequest = function(request) {\r\n  return transactionMethods.indexOf(request.method) !== -1;\r\n};\r\n\r\nProvider.prototype.reportErrorInResponse = function(request, err, response) {\r\n  const self = this;\r\n\r\n  if (!err) {\r\n    return response;\r\n  }\r\n\r\n  // TODO: for next major release: move reporting of tx hash on error to error\r\n  // field to prevent poorly-written clients which assume that the existence of\r\n  // the \"result\" field implies no errors from breaking.\r\n  if (self._isTransactionRequest(request)) {\r\n    if (err instanceof RuntimeError) {\r\n      // Make sure we always return the transaction hash on failed transactions so\r\n      // the caller can get their tx receipt. This breaks JSONRPC 2.0, but it's how\r\n      // we've always done it.\r\n      response.result = err.hashes[0];\r\n\r\n      if (self.options.vmErrorsOnRPCResponse) {\r\n        if (!response.error.data) {\r\n          response.error.data = {};\r\n        }\r\n        response.error.data[err.hashes[0]] = err.results[err.hashes[0]];\r\n      } else {\r\n        delete response.error;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (request.method === \"eth_call\") {\r\n    if (err instanceof RuntimeError) {\r\n      if (self.options.vmErrorsOnRPCResponse) {\r\n        if (!response.error.data) {\r\n          response.error.data = {};\r\n        }\r\n        response.error.data[err.hashes[0]] = err.results[err.hashes[0]];\r\n      } else {\r\n        response.result = err.results[err.hashes[0]].return || \"0x\";\r\n        delete response.error;\r\n      }\r\n    }\r\n  }\r\n\r\n  return self.cleanUpErrorObject(err, response);\r\n};\r\n\r\nmodule.exports = Provider;\r\n","module.exports = require(\"web3-provider-engine\");","module.exports = require(\"web3-provider-engine/subproviders/subscriptions\");","module.exports = require(\"ethereumjs-abi\");","module.exports = require(\"seedrandom\");","module.exports = require(\"bip39\");","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Buffer = require('safe-buffer').Buffer;\nvar ethUtil = require('ethereumjs-util');\nvar crypto = require('crypto');\nvar scryptsy = require('scrypt.js');\nvar uuidv4 = require('uuid/v4');\nvar bs58check = require('bs58check');\n\nfunction assert(val, msg) {\n  if (!val) {\n    throw new Error(msg || 'Assertion failed');\n  }\n}\n\nfunction decipherBuffer(decipher, data) {\n  return Buffer.concat([decipher.update(data), decipher.final()]);\n}\n\nvar Wallet = function Wallet(priv, pub) {\n  if (priv && pub) {\n    throw new Error('Cannot supply both a private and a public key to the constructor');\n  }\n\n  if (priv && !ethUtil.isValidPrivate(priv)) {\n    throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n  }\n\n  if (pub && !ethUtil.isValidPublic(pub)) {\n    throw new Error('Invalid public key');\n  }\n\n  this._privKey = priv;\n  this._pubKey = pub;\n};\n\nObject.defineProperty(Wallet.prototype, 'privKey', {\n  get: function get() {\n    assert(this._privKey, 'This is a public key only wallet');\n    return this._privKey;\n  }\n});\n\nObject.defineProperty(Wallet.prototype, 'pubKey', {\n  get: function get() {\n    if (!this._pubKey) {\n      this._pubKey = ethUtil.privateToPublic(this.privKey);\n    }\n    return this._pubKey;\n  }\n});\n\nWallet.generate = function (icapDirect) {\n  if (icapDirect) {\n    var max = new ethUtil.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n    while (true) {\n      var privKey = crypto.randomBytes(32);\n      if (new ethUtil.BN(ethUtil.privateToAddress(privKey)).lte(max)) {\n        return new Wallet(privKey);\n      }\n    }\n  } else {\n    return new Wallet(crypto.randomBytes(32));\n  }\n};\n\nWallet.generateVanityAddress = function (pattern) {\n  if ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {\n    pattern = new RegExp(pattern);\n  }\n\n  while (true) {\n    var privKey = crypto.randomBytes(32);\n    var address = ethUtil.privateToAddress(privKey);\n\n    if (pattern.test(address.toString('hex'))) {\n      return new Wallet(privKey);\n    }\n  }\n};\n\nWallet.prototype.getPrivateKey = function () {\n  return this.privKey;\n};\n\nWallet.prototype.getPrivateKeyString = function () {\n  return ethUtil.bufferToHex(this.getPrivateKey());\n};\n\nWallet.prototype.getPublicKey = function () {\n  return this.pubKey;\n};\n\nWallet.prototype.getPublicKeyString = function () {\n  return ethUtil.bufferToHex(this.getPublicKey());\n};\n\nWallet.prototype.getAddress = function () {\n  return ethUtil.publicToAddress(this.pubKey);\n};\n\nWallet.prototype.getAddressString = function () {\n  return ethUtil.bufferToHex(this.getAddress());\n};\n\nWallet.prototype.getChecksumAddressString = function () {\n  return ethUtil.toChecksumAddress(this.getAddressString());\n};\n\n// https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\nWallet.prototype.toV3 = function (password, opts) {\n  assert(this._privKey, 'This is a public key only wallet');\n\n  opts = opts || {};\n  var salt = opts.salt || crypto.randomBytes(32);\n  var iv = opts.iv || crypto.randomBytes(16);\n\n  var derivedKey;\n  var kdf = opts.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: opts.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = opts.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = opts.n || 262144;\n    kdfparams.r = opts.r || 8;\n    kdfparams.p = opts.p || 1;\n    derivedKey = scryptsy(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = crypto.createCipheriv(opts.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = Buffer.concat([cipher.update(this.privKey), cipher.final()]);\n\n  var mac = ethUtil.sha3(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')]));\n\n  return {\n    version: 3,\n    id: uuidv4({ random: opts.uuid || crypto.randomBytes(16) }),\n    address: this.getAddress().toString('hex'),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: opts.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n\nWallet.prototype.getV3Filename = function (timestamp) {\n  /*\n   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n   * is a pain in Javascript, everbody knows that. We could use moment.js,\n   * but decide to do it manually in order to save space.\n   *\n   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n   * but does it really matter?\n   *\n   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n   *\n   */\n  var ts = timestamp ? new Date(timestamp) : new Date();\n\n  return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n};\n\nWallet.prototype.toV3String = function (password, opts) {\n  return JSON.stringify(this.toV3(password, opts));\n};\n\nWallet.fromPublicKey = function (pub, nonStrict) {\n  if (nonStrict) {\n    pub = ethUtil.importPublic(pub);\n  }\n  return new Wallet(null, pub);\n};\n\nWallet.fromExtendedPublicKey = function (pub) {\n  assert(pub.slice(0, 4) === 'xpub', 'Not an extended public key');\n  pub = bs58check.decode(pub).slice(45);\n  // Convert to an Ethereum public key\n  return Wallet.fromPublicKey(pub, true);\n};\n\nWallet.fromPrivateKey = function (priv) {\n  return new Wallet(priv);\n};\n\nWallet.fromExtendedPrivateKey = function (priv) {\n  assert(priv.slice(0, 4) === 'xprv', 'Not an extended private key');\n  var tmp = bs58check.decode(priv);\n  assert(tmp[45] === 0, 'Invalid extended private key');\n  return Wallet.fromPrivateKey(tmp.slice(46));\n};\n\n// https://github.com/ethereum/go-ethereum/wiki/Passphrase-protected-key-store-spec\nWallet.fromV1 = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  if (json.Version !== '1') {\n    throw new Error('Not a V1 wallet');\n  }\n\n  if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var kdfparams = json.Crypto.KeyHeader.KdfParams;\n  var derivedKey = scryptsy(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\n\n  var ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n\n  var mac = ethUtil.sha3(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString('hex') !== json.Crypto.MAC) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv('aes-128-cbc', ethUtil.sha3(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n  var seed = decipherBuffer(decipher, ciphertext);\n\n  return new Wallet(seed);\n};\n\nWallet.fromV3 = function (input, password, nonStrict) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n\n  if (json.version !== 3) {\n    throw new Error('Not a V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n\n    // FIXME: support progress reporting callback\n    derivedKey = scryptsy(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n\n  var mac = ethUtil.sha3(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n  if (mac.toString('hex') !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = decipherBuffer(decipher, ciphertext, 'hex');\n\n  return new Wallet(seed);\n};\n\n/*\n * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n * JSON fields: encseed, ethaddr, btcaddr, email\n */\nWallet.fromEthSale = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  var encseed = Buffer.from(json.encseed, 'hex');\n\n  // key derivation\n  var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n\n  // seed decoding (IV is first 16 bytes)\n  // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n  //       see also http://stackoverflow.com/a/31614770/4964819\n  var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n  var seed = decipherBuffer(decipher, encseed.slice(16));\n\n  var wallet = new Wallet(ethUtil.sha3(seed));\n  if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n    throw new Error('Decoded key mismatch - possibly wrong passphrase');\n  }\n  return wallet;\n};\n\nmodule.exports = Wallet;","module.exports = require(\"safe-buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"scrypt.js\");","module.exports = require(\"uuid/v4\");","module.exports = require(\"bs58check\");","module.exports = require(\"hdkey\");","var to = require(\"./utils/to.js\");\r\nvar Account = require(\"ethereumjs-account\");\r\nvar Block = require(\"ethereumjs-block\");\r\nvar Log = require(\"./utils/log\");\r\nvar Receipt = require(\"./utils/receipt\");\r\nvar VM = require(\"ethereumjs-vm\");\r\nvar RuntimeError = require(\"./utils/runtimeerror\");\r\nvar Trie = require(\"merkle-patricia-tree\");\r\nvar utils = require(\"ethereumjs-util\");\r\nvar async = require(\"async\");\r\nvar Heap = require(\"heap\");\r\nvar Database = require(\"./database\");\r\nvar EventEmitter = require(\"events\");\r\nvar _ = require(\"lodash\");\r\n\r\nfunction BlockchainDouble(options) {\r\n  var self = this;\r\n  EventEmitter.apply(self);\r\n\r\n  this.options = options = this._applyDefaultOptions(options || {});\r\n\r\n  this.logger = options.logger || console;\r\n\r\n  this.data = new Database(options);\r\n\r\n  if (options.trie != null && options.db_path != null) {\r\n    throw new Error(\"Can't initialize a TestRPC with a db and a custom trie.\");\r\n  }\r\n\r\n  this.pending_transactions = [];\r\n\r\n  // updated periodically to keep up with the times\r\n  this.blockGasLimit = options.gasLimit;\r\n  this.defaultTransactionGasLimit = options.defaultTransactionGasLimit;\r\n  this.timeAdjustment = 0;\r\n}\r\n\r\nconst defaultOptions = {\r\n  gasLimit: \"0x6691b7\",\r\n  defaultTransactionGasLimit: \"0x15f90\",\r\n  time: null,\r\n  debug: false,\r\n  allowUnlimitedContractSize: false\r\n};\r\n\r\n// inheritence w/ prototype chaining\r\nBlockchainDouble.prototype = Object.create(EventEmitter.prototype);\r\nBlockchainDouble.prototype.constructor = BlockchainDouble;\r\n\r\nBlockchainDouble.prototype._applyDefaultOptions = function(options) {\r\n  // We want this function to mutate the options object so that we can report\r\n  // our settings back to our consumer application (e.g., ganache)\r\n  return _.merge(options, defaultOptions, Object.assign({}, options));\r\n};\r\n\r\nBlockchainDouble.prototype.initialize = function(accounts, callback) {\r\n  var self = this;\r\n\r\n  this.data.initialize(function(err) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.latestBlock(function(err, block) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      var options = self.options;\r\n\r\n      var root = null;\r\n\r\n      if (block) {\r\n        root = block.header.stateRoot;\r\n      }\r\n\r\n      // I haven't yet found a good way to do this. Getting the trie from the\r\n      // forked blockchain without going through the other setup is a little gross.\r\n      self.stateTrie = self.createStateTrie(self.data.trie_db, root);\r\n\r\n      self.vm =\r\n        options.vm ||\r\n        new VM({\r\n          state: self.stateTrie,\r\n          blockchain: {\r\n            // EthereumJS VM needs a blockchain object in order to get block information.\r\n            // When calling getBlock() it will pass a number that's of a Buffer type.\r\n            // Unfortunately, it uses a 64-character buffer (when converted to hex) to\r\n            // represent block numbers as well as block hashes. Since it's very unlikely\r\n            // any block number will get higher than the maximum safe Javascript integer,\r\n            // we can convert this buffer to a number ahead of time before calling our\r\n            // own getBlock(). If the conversion succeeds, we have a block number.\r\n            // If it doesn't, we have a block hash. (Note: Our implementation accepts both.)\r\n            getBlock: function(number, done) {\r\n              try {\r\n                number = to.number(number);\r\n              } catch (e) {\r\n                // Do nothing; must be a block hash.\r\n              }\r\n\r\n              self.getBlock(number, done);\r\n            }\r\n          },\r\n          enableHomestead: true,\r\n          activatePrecompiles: true,\r\n          allowUnlimitedContractSize: options.allowUnlimitedContractSize\r\n        });\r\n\r\n      if (options.debug === true) {\r\n        // log executed opcodes, including args as hex\r\n        self.vm.on(\"step\", function(info) {\r\n          var name = info.opcode.name;\r\n          var argsNum = info.opcode.in;\r\n          if (argsNum) {\r\n            var args = info.stack\r\n              .slice(-argsNum)\r\n              .map((arg) => to.hex(arg))\r\n              .join(\" \");\r\n\r\n            self.logger.log(`${name} ${args}`);\r\n          } else {\r\n            self.logger.log(name);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (options.time) {\r\n        self.setTime(options.time);\r\n      }\r\n\r\n      // If we already have a block, then that means there's an existing chain.\r\n      // Don't create a genesis block.\r\n      if (block) {\r\n        self.emit(\"block\", block);\r\n        return callback();\r\n      }\r\n\r\n      self.createGenesisBlock(function(err, block) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        accounts = accounts || [];\r\n\r\n        async.eachSeries(\r\n          accounts,\r\n          function(accountData, finished) {\r\n            self.putAccount(accountData.account, accountData.address, finished);\r\n          },\r\n          function(err) {\r\n            if (err) {\r\n              return callback(err);\r\n            }\r\n\r\n            // Create first block\r\n            self.putBlock(block, [], [], callback);\r\n          }\r\n        );\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.createStateTrie = function(db, root) {\r\n  return new Trie(this.data.trie_db, root);\r\n};\r\n\r\n// Overrideable so other implementations (forking) can edit it.\r\nBlockchainDouble.prototype.createGenesisBlock = function(callback) {\r\n  this.createBlock(callback);\r\n};\r\n\r\nBlockchainDouble.prototype.latestBlock = function(callback) {\r\n  this.data.blocks.last(function(err, last) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(null, last);\r\n  });\r\n};\r\n\r\n// number accepts number (integer, hex) or tag (e.g., \"latest\")\r\nBlockchainDouble.prototype.getEffectiveBlockNumber = function(number, callback) {\r\n  if (typeof number !== \"string\") {\r\n    number = to.hex(number);\r\n  }\r\n\r\n  // If we have a hex number\r\n  if (number.indexOf(\"0x\") >= 0) {\r\n    return callback(null, to.number(number));\r\n  } else {\r\n    if (number === \"latest\" || number === \"pending\") {\r\n      return this.getHeight(callback);\r\n    } else if (number === \"earliest\") {\r\n      return callback(null, 0);\r\n    }\r\n  }\r\n};\r\n\r\n// number accepts number (integer, hex), tag (e.g., \"latest\") or block hash\r\n// This function is used by ethereumjs-vm\r\nBlockchainDouble.prototype.getBlock = function(number, callback) {\r\n  var self = this;\r\n\r\n  if (typeof number !== \"string\") {\r\n    number = to.hex(number);\r\n  }\r\n\r\n  // If we have a hex number or a block hash\r\n  if (number.indexOf(\"0x\") >= 0) {\r\n    var hash = number;\r\n\r\n    // block hash\r\n    if (hash.length > 40) {\r\n      this.data.blockHashes.get(to.hex(hash), function(err, blockIndex) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        return self.data.blocks.get(blockIndex, callback);\r\n      });\r\n    } else {\r\n      // Block number\r\n      return this.data.blocks.get(to.number(hash), callback);\r\n    }\r\n  } else {\r\n    if (number === \"latest\" || number === \"pending\") {\r\n      return this.latestBlock(callback);\r\n    } else if (number === \"earliest\") {\r\n      return this.data.blocks.first(callback);\r\n    }\r\n  }\r\n};\r\n\r\nBlockchainDouble.prototype.putBlock = function(block, logs, receipts, callback) {\r\n  var self = this;\r\n\r\n  // Lock in the state root for this block.\r\n  block.header.stateRoot = this.stateTrie.root;\r\n\r\n  this.data.blocks.length(function(err, length) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var requests = [\r\n      self.data.blocks.push.bind(self.data.blocks, block),\r\n      self.data.blockLogs.push.bind(self.data.blockLogs, logs),\r\n      self.data.blockHashes.set.bind(self.data.blockHashes, to.hex(block.hash()), length)\r\n    ];\r\n\r\n    block.transactions.forEach(function(tx, index) {\r\n      var txHash = to.hex(tx.hash());\r\n\r\n      requests.push(\r\n        self.data.transactions.set.bind(self.data.transactions, txHash, tx),\r\n        self.data.transactionReceipts.set.bind(self.data.transactionReceipts, txHash, receipts[index])\r\n      );\r\n    });\r\n\r\n    async.parallel(requests, (err, result) => {\r\n      if (!err) {\r\n        self.emit(\"block\", block);\r\n      }\r\n      callback(err, result);\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.popBlock = function(callback) {\r\n  var self = this;\r\n\r\n  this.data.blocks.last(function(err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    if (block == null) {\r\n      return callback(null, null);\r\n    }\r\n\r\n    var requests = [];\r\n    var blockHash = to.hex(block.hash());\r\n\r\n    block.transactions.forEach(function(tx) {\r\n      var txHash = to.hex(tx.hash());\r\n\r\n      requests.push(\r\n        self.data.transactions.del.bind(self.data.transactions, txHash),\r\n        self.data.transactionReceipts.del.bind(self.data.transactionReceipts, txHash)\r\n      );\r\n    });\r\n\r\n    requests.push(\r\n      self.data.blockLogs.pop.bind(self.data.blockLogs),\r\n      self.data.blockHashes.del.bind(self.data.blockHashes, blockHash),\r\n      self.data.blocks.pop.bind(self.data.blocks) // Do this one last in case anything relies on it.\r\n    );\r\n\r\n    async.series(requests, function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      // Set the root to the last available, which will \"roll back\" to the previous\r\n      // moment in time. Note that all the old data is still in the db, but it's now just junk data.\r\n      self.data.blocks.last(function(err, newLastBlock) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        self.stateTrie.root = newLastBlock.header.stateRoot;\r\n        // Remember: Return block we popped off.\r\n        callback(null, block);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.clearPendingTransactions = function() {\r\n  this.pending_transactions = [];\r\n};\r\n\r\nBlockchainDouble.prototype.putAccount = function(account, address, callback) {\r\n  var self = this;\r\n\r\n  address = utils.toBuffer(address);\r\n\r\n  this.vm.stateManager.putAccount(address, account, function(err) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.vm.stateManager.cache.flush(callback);\r\n  });\r\n};\r\n\r\n/**\r\n * createBlock\r\n *\r\n * Create a new block, where the parent's block is either the latest block\r\n * on the chain or the parent block passed in.\r\n *\r\n * @param  {Block}   parent   The block meant to be the parent block (optional)\r\n * @param  {Function} callback Callback function called after block is created\r\n * @return Block              The block created.\r\n */\r\nBlockchainDouble.prototype.createBlock = function(parent, callback) {\r\n  var self = this;\r\n\r\n  if (typeof parent === \"function\") {\r\n    callback = parent;\r\n    parent = null;\r\n  }\r\n\r\n  var block = new Block();\r\n\r\n  function getParent(callback) {\r\n    if (parent) {\r\n      return callback(null, parent);\r\n    } else {\r\n      self.latestBlock(callback);\r\n    }\r\n  }\r\n\r\n  getParent(function(err, parent) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var parentNumber = parent != null ? to.number(parent.header.number) : -1;\r\n\r\n    block.header.gasLimit = self.blockGasLimit;\r\n\r\n    // Ensure we have the right block number for the VM.\r\n    block.header.number = to.hex(parentNumber + 1);\r\n\r\n    // Set the timestamp before processing txs\r\n    block.header.timestamp = to.hex(self.currentTime());\r\n\r\n    if (parent != null) {\r\n      block.header.parentHash = to.hex(parent.hash());\r\n    }\r\n\r\n    callback(null, block);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getQueuedNonce = function(address, callback) {\r\n  var nonce = null;\r\n\r\n  this.pending_transactions.forEach(function(tx) {\r\n    // tx.from and address are buffers, so cannot simply do\r\n    // tx.from==address\r\n    if (to.hex(tx.from) !== to.hex(address)) {\r\n      return;\r\n    }\r\n\r\n    var pendingNonce = to.number(tx.nonce) || 0;\r\n    // If this is the first queued nonce for this address we found,\r\n    // or it's higher than the previous highest, note it.\r\n    if (nonce === null || pendingNonce > nonce) {\r\n      nonce = pendingNonce;\r\n    }\r\n  });\r\n\r\n  // If we found a queued transaction nonce, return one higher\r\n  // than the highest we found\r\n  if (nonce != null) {\r\n    return callback(null, Buffer.from([nonce + 1]));\r\n  }\r\n\r\n  this.stateTrie.get(address, function(err, val) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var account = new Account(val);\r\n    callback(null, account.nonce);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.queueTransaction = function(tx) {\r\n  this.pending_transactions.push(tx);\r\n};\r\n\r\nBlockchainDouble.prototype.sortByPriceAndNonce = function() {\r\n  // Sorts transactions like I believe geth does.\r\n  // See the description of 'SortByPriceAndNonce' at\r\n  // https://github.com/ethereum/go-ethereum/blob/290e851f57f5d27a1d5f0f7ad784c836e017c337/core/types/transaction.go\r\n  var self = this;\r\n  var sortedByNonce = {};\r\n\r\n  self.pending_transactions.forEach((tx) => {\r\n    const from = to.hex(tx.from);\r\n    if (sortedByNonce[from]) {\r\n      sortedByNonce[from].push(tx);\r\n    } else {\r\n      sortedByNonce[from] = [tx];\r\n    }\r\n  });\r\n\r\n  var priceSort = function(a, b) {\r\n    return parseInt(to.hex(b.gasPrice), 16) - parseInt(to.hex(a.gasPrice), 16);\r\n  };\r\n  var nonceSort = function(a, b) {\r\n    return parseInt(to.hex(a.nonce), 16) - parseInt(to.hex(b.nonce), 16);\r\n  };\r\n\r\n  // Now sort each address by nonce\r\n  Object.keys(sortedByNonce).forEach((address) => {\r\n    sortedByNonce[address].sort(nonceSort);\r\n  });\r\n\r\n  // Initialise a heap, sorted by price, for the head transaction from each account.\r\n  var heap = new Heap(priceSort);\r\n  Object.keys(sortedByNonce).forEach((address) => {\r\n    heap.push(sortedByNonce[address].shift());\r\n  });\r\n\r\n  // Now reorder our transactions. Compare the next transactions from each account, and choose\r\n  // the one with the highest gas price.\r\n  const sortedTransactions = [];\r\n  while (heap.size() > 0) {\r\n    const best = heap.pop();\r\n    let address = to.hex(best.from);\r\n    if (sortedByNonce[address].length > 0) {\r\n      // Push on the next transaction from this account\r\n      heap.push(sortedByNonce[address].shift());\r\n    }\r\n    sortedTransactions.push(best);\r\n  }\r\n  self.pending_transactions = sortedTransactions;\r\n};\r\n\r\nBlockchainDouble.prototype.processCall = function(tx, blockNumber, callback) {\r\n  var self = this;\r\n  var startingStateRoot;\r\n\r\n  var cleanUpAndReturn = function(err, result, changeRoot) {\r\n    self.vm.stateManager.revert(function(e) {\r\n      // For defaultBlock, undo state root changes\r\n      if (changeRoot) {\r\n        self.stateTrie.root = startingStateRoot;\r\n      }\r\n      callback(err || e, result);\r\n    });\r\n  };\r\n\r\n  var runCall = function(tx, changeRoot, err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    // For defaultBlock, use that block's root\r\n    if (changeRoot) {\r\n      startingStateRoot = self.stateTrie.root;\r\n      self.stateTrie.root = block.header.stateRoot;\r\n    }\r\n\r\n    // create a fake block with this fake transaction\r\n    self.createBlock(block, function(err, block) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      block.transactions.push(tx);\r\n\r\n      // We checkpoint here for speed. We want all state trie reads/writes to happen in memory,\r\n      // and the final output be flushed to the database at the end of transaction processing.\r\n      self.vm.stateManager.checkpoint();\r\n\r\n      var runArgs = {\r\n        tx: tx,\r\n        block: block,\r\n        skipBalance: true,\r\n        skipNonce: true\r\n      };\r\n\r\n      self.vm.runTx(runArgs, function(vmerr, result) {\r\n        // This is a check that has been in there for awhile. I'm unsure if it's required, but it can't hurt.\r\n        if (vmerr && vmerr instanceof Error === false) {\r\n          vmerr = new Error(\"VM error: \" + vmerr);\r\n        }\r\n\r\n        // If we're given an error back directly, it's worse than a runtime error. Expose it and get out.\r\n        if (vmerr) {\r\n          return cleanUpAndReturn(vmerr);\r\n        }\r\n\r\n        // If no error, check for a runtime error. This can return null if no runtime error.\r\n        vmerr = RuntimeError.fromResults([tx], { results: [result] });\r\n\r\n        cleanUpAndReturn(vmerr, result, changeRoot);\r\n      });\r\n    });\r\n  };\r\n\r\n  // Delegate block selection\r\n  blockNumber === \"latest\"\r\n    ? self.latestBlock(runCall.bind(null, tx, false))\r\n    : self.getBlock(blockNumber, runCall.bind(null, tx, true));\r\n};\r\n\r\n/**\r\n * processBlock\r\n *\r\n * Process the passed in block and included transactions\r\n *\r\n * @param  {Block} block       block to process\r\n * @param  {Boolean} commit    Whether or not changes should be committed to the state\r\n * trie and the block appended to the end of the chain.\r\n * @param  {Function} callback Callback function when transaction processing is completed.\r\n * @return [type]              [description]\r\n */\r\nBlockchainDouble.prototype.processBlock = function(block, commit, callback) {\r\n  var self = this;\r\n\r\n  if (typeof commit === \"function\") {\r\n    callback = commit;\r\n    commit = true;\r\n  }\r\n\r\n  // We checkpoint here for speed. We want all state trie reads/writes to happen in memory,\r\n  // and the final output be flushed to the database at the end of transaction processing.\r\n  self.vm.stateManager.checkpoint();\r\n\r\n  var cleanup = function(err) {\r\n    self.vm.stateManager.revert(function(e) {\r\n      callback(err || e);\r\n    });\r\n  };\r\n\r\n  self.vm.runBlock(\r\n    {\r\n      block: block,\r\n      generate: true\r\n    },\r\n    function(vmerr, results) {\r\n      // This is a check that has been in there for awhile. I'm unsure if it's required, but it can't hurt.\r\n      if (vmerr && vmerr instanceof Error === false) {\r\n        vmerr = new Error(\"VM error: \" + vmerr);\r\n      }\r\n\r\n      // If we're given an error back directly, it's worse than a runtime error. Expose it and get out.\r\n      if (vmerr) {\r\n        return cleanup(vmerr);\r\n      }\r\n\r\n      // If no error, check for a runtime error. This can return null if no runtime error.\r\n      vmerr = RuntimeError.fromResults(block.transactions, results);\r\n\r\n      // Note, even if we have an error, some transactions may still have succeeded.\r\n      // Process their logs if so, returning the error at the end.\r\n\r\n      var logs = [];\r\n      var receipts = [];\r\n\r\n      var totalBlockGasUsage = 0;\r\n\r\n      results.results.forEach(function(result) {\r\n        totalBlockGasUsage += to.number(result.gasUsed);\r\n      });\r\n\r\n      block.header.gasUsed = utils.toBuffer(to.hex(totalBlockGasUsage));\r\n\r\n      for (var v = 0; v < results.receipts.length; v++) {\r\n        var result = results.results[v];\r\n        var receipt = results.receipts[v];\r\n        var tx = block.transactions[v];\r\n        var txHash = tx.hash();\r\n        var txLogs = [];\r\n\r\n        // Only process the transaction's logs if it didn't error.\r\n        if (result.vm.exception === 1) {\r\n          for (var i = 0; i < receipt.logs.length; i++) {\r\n            var receiptLog = receipt.logs[i];\r\n            var address = to.hex(receiptLog[0]);\r\n            var topics = [];\r\n\r\n            for (var j = 0; j < receiptLog[1].length; j++) {\r\n              topics.push(to.hex(receiptLog[1][j]));\r\n            }\r\n\r\n            var data = to.hex(receiptLog[2]);\r\n\r\n            var log = new Log({\r\n              logIndex: to.hex(i),\r\n              transactionIndex: to.hex(v),\r\n              transactionHash: txHash,\r\n              block: block,\r\n              address: address,\r\n              data: data,\r\n              topics: topics,\r\n              type: \"mined\"\r\n            });\r\n\r\n            logs.push(log);\r\n            txLogs.push(log);\r\n          }\r\n        }\r\n\r\n        let rcpt = new Receipt(\r\n          tx,\r\n          block,\r\n          txLogs,\r\n          result.gasUsed.toArrayLike(Buffer),\r\n          receipt.gasUsed,\r\n          result.createdAddress,\r\n          receipt.status,\r\n          to.hex(result.bloom.bitvector)\r\n        );\r\n        receipts.push(rcpt);\r\n      }\r\n\r\n      function commmitIfNeeded(cb) {\r\n        if (commit === true) {\r\n          self.vm.stateManager.commit(function(e) {\r\n            if (e) {\r\n              return cleanup(e);\r\n            }\r\n\r\n            // Put that block on the end the chain\r\n            self.putBlock(block, logs, receipts, cb);\r\n          });\r\n        } else {\r\n          self.vm.stateManager.revert(cb);\r\n        }\r\n      }\r\n\r\n      commmitIfNeeded(function(e) {\r\n        if (e) {\r\n          return callback(e);\r\n        }\r\n        // Note we return the vm err here too, if it exists.\r\n        callback(vmerr, block.transactions, results);\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * processNextBlock\r\n *\r\n * Process the next block like a normal blockchain, pulling from the list of\r\n * pending transactions.\r\n *\r\n * @param  {number} timestamp at which the block is mined\r\n * @param  {Function} callback Callback when transaction processing is finished.\r\n * @return [type]              [description]\r\n */\r\nBlockchainDouble.prototype.processNextBlock = function(timestamp, callback) {\r\n  var self = this;\r\n\r\n  if (typeof timestamp === \"function\") {\r\n    callback = timestamp;\r\n    timestamp = undefined;\r\n  }\r\n\r\n  self.sortByPriceAndNonce();\r\n\r\n  // Grab only the transactions that can fit within the block\r\n  var currentTransactions = [];\r\n  var totalGasLimit = 0;\r\n  var maxGasLimit = to.number(self.blockGasLimit);\r\n\r\n  while (self.pending_transactions.length > 0) {\r\n    var tx = self.pending_transactions[0];\r\n    var gasLimit = to.number(tx.gasLimit);\r\n\r\n    if (totalGasLimit + gasLimit <= maxGasLimit) {\r\n      totalGasLimit += gasLimit;\r\n      self.pending_transactions.shift();\r\n      currentTransactions.push(tx);\r\n    } else {\r\n      // Next one won't fit. Break.\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remember, we ensured transactions had a valid gas limit when they were queued (in the state manager).\r\n  // If we run into a case where we can't process any because one is higher than the gas limit,\r\n  // then it's a serious issue. This should never happen, but let's check anyway.\r\n  if (currentTransactions.length === 0 && self.pending_transactions.length > 0) {\r\n    // Error like geth.\r\n    var error = \"Unexpected error condition: next transaction exceeds block gas limit\";\r\n    return callback(error);\r\n  }\r\n\r\n  // Create a new block meant to be the end of the chain\r\n  this.createBlock(function(err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    // Overwrite block timestamp\r\n    if (timestamp) {\r\n      self.data.blocks.last(function(err, last) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        if (last && to.number(last.header.timestamp) > timestamp) {\r\n          self.logger.log(\r\n            \"Waring: Setting the block timestamp (\" + timestamp + \") that is earlier than the parent block one.\"\r\n          );\r\n        }\r\n      });\r\n      block.header.timestamp = to.hex(timestamp);\r\n      self.setTime(new Date(timestamp * 1000));\r\n    }\r\n    // Add transactions to the block.\r\n    Array.prototype.push.apply(block.transactions, currentTransactions);\r\n\r\n    // Process the block, committing the block to the chain\r\n    self.processBlock(block, true, callback);\r\n  });\r\n};\r\n\r\n/**\r\n * processTransactionTrace\r\n *\r\n * Run a previously-run transaction in the same state in which it occurred at the time it was run.\r\n * This will return the vm-level trace output for debugging purposes.\r\n *\r\n * Strategy:\r\n *\r\n *  1. Find block where transaction occurred\r\n *  2. Set state root of that block\r\n *  3. Rerun every transaction in that block prior to and including the requested transaction\r\n *  4. Reset state root back to original\r\n *  5. Send trace results back.\r\n *\r\n * @param  {[type]}   tx       [description]\r\n * @param  {Function} callback [description]\r\n * @return [type]              [description]\r\n */\r\nBlockchainDouble.prototype.processTransactionTrace = function(hash, params, callback) {\r\n  var self = this;\r\n  var targetHash = to.hex(hash);\r\n  var txHashCurrentlyProcessing = \"\";\r\n  var txCurrentlyProcessing = null;\r\n\r\n  var storageStack = {\r\n    currentDepth: -1,\r\n    stack: []\r\n  };\r\n\r\n  var returnVal = {\r\n    gas: 0,\r\n    returnValue: \"\",\r\n    structLogs: []\r\n  };\r\n\r\n  function stepListener(event, next) {\r\n    // See these docs:\r\n    // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\r\n\r\n    var gasLeft = to.number(event.gasLeft);\r\n    var totalGasUsedAfterThisStep = to.number(txCurrentlyProcessing.gasLimit) - gasLeft;\r\n    var gasUsedThisStep = totalGasUsedAfterThisStep - returnVal.gas;\r\n    returnVal.gas += gasUsedThisStep;\r\n\r\n    var isMemoryEnabled = !params.disableMemory;\r\n    var memory = null;\r\n    if (isMemoryEnabled) {\r\n      // Get memory and break it up into 32-byte words.\r\n      // Note we may possibly have to pad the final word.\r\n      memory = Buffer.from(event.memory).toString(\"hex\");\r\n      memory = memory.match(/.{1,64}/g) || [];\r\n\r\n      if (memory.length > 0) {\r\n        var lastItem = memory[memory.length - 1];\r\n        if (lastItem.length < 64) {\r\n          memory[memory.length - 1] = lastItem + new Array(64 - lastItem.length + 1).join(\"0\");\r\n        }\r\n      }\r\n    }\r\n\r\n    var stack;\r\n    if (params.disableStack) {\r\n      stack = null;\r\n    } else {\r\n      stack = event.stack.map((item) => {\r\n        return to.rpcDataHexString(item, 64).replace(\"0x\", \"\"); // non-0x prefixed.\r\n      });\r\n    }\r\n\r\n    var structLog = {\r\n      depth: event.depth,\r\n      error: \"\",\r\n      gas: gasLeft,\r\n      gasCost: gasUsedThisStep,\r\n      memory,\r\n      op: event.opcode.name,\r\n      pc: event.pc,\r\n      stack,\r\n      storage: null\r\n    };\r\n\r\n    if (params.disableStorage) {\r\n      returnVal.structLogs.push(structLog);\r\n      next();\r\n    } else {\r\n      structLog = self.processStorageTrace(structLog, storageStack, event, function(err, structLog) {\r\n        if (err) {\r\n          return next(err);\r\n        }\r\n        returnVal.structLogs.push(structLog);\r\n        next();\r\n      });\r\n    }\r\n  }\r\n\r\n  function beforeTxListener(tx) {\r\n    txCurrentlyProcessing = tx;\r\n    txHashCurrentlyProcessing = to.hex(tx.hash());\r\n\r\n    if (txHashCurrentlyProcessing === targetHash) {\r\n      self.vm.on(\"step\", stepListener);\r\n    }\r\n  }\r\n\r\n  // afterTxListener cleans up everything.\r\n  function afterTxListener() {\r\n    if (txHashCurrentlyProcessing === targetHash) {\r\n      self.vm.removeListener(\"step\", stepListener);\r\n      self.vm.removeListener(\"beforeTx\", beforeTxListener);\r\n      self.vm.removeListener(\"afterTx\", afterTxListener);\r\n    }\r\n  }\r\n\r\n  // Listen to beforeTx and afterTx so we know when our target transaction\r\n  // is processing. These events will add the vent listener for getting the trace data.\r\n  self.vm.on(\"beforeTx\", beforeTxListener);\r\n  self.vm.on(\"afterTx\", afterTxListener);\r\n\r\n  // #1 - get block via transaction receipt\r\n  this.getTransactionReceipt(targetHash, function(err, receipt) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    if (!receipt) {\r\n      return callback(new Error(\"Unknown transaction \" + targetHash));\r\n    }\r\n\r\n    var targetBlock = receipt.block;\r\n\r\n    // Get the parent of the target block\r\n    self.getBlock(targetBlock.header.parentHash, function(err, parent) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      var startingStateRoot = self.stateTrie.root;\r\n\r\n      // #2 - Set state root of original block\r\n      self.stateTrie.root = parent.header.stateRoot;\r\n\r\n      // Prepare the \"next\" block with necessary transactions\r\n      self.createBlock(parent, function(err, block) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        for (var i = 0; i < targetBlock.transactions.length; i++) {\r\n          var tx = targetBlock.transactions[i];\r\n          block.transactions.push(tx);\r\n\r\n          // After including the target transaction, that's all we need to do.\r\n          if (to.hex(tx.hash()) === targetHash) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        // #3 - Process the block without committing the data.\r\n        self.processBlock(block, false, function(err) {\r\n          // Ignore runtime errors, or else erroneous transactions can't be traced.\r\n          if (err && err.message.indexOf(\"VM Exception\") === 0) {\r\n            err = null;\r\n          }\r\n\r\n          // #4 - reset the state root.\r\n          self.stateTrie.root = startingStateRoot;\r\n\r\n          // Just to be safe\r\n          self.vm.removeListener(\"beforeTx\", beforeTxListener);\r\n          self.vm.removeListener(\"afterTx\", afterTxListener);\r\n          self.vm.removeListener(\"step\", stepListener);\r\n\r\n          // #5 - send state results back\r\n          callback(err, returnVal);\r\n        });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.processStorageTrace = function(structLog, storageStack, event, callback) {\r\n  var self = this;\r\n  var name = event.opcode.name;\r\n\r\n  var argsNum = event.opcode.in;\r\n  var args = event.stack.slice(-argsNum).map((arg) => to.hex(arg));\r\n\r\n  if (storageStack.currentDepth > event.depth) {\r\n    storageStack.stack.pop();\r\n  }\r\n  if (storageStack.currentDepth < event.depth) {\r\n    storageStack.stack.push({});\r\n  }\r\n\r\n  storageStack.currentDepth = event.depth;\r\n\r\n  var key;\r\n  var value;\r\n  switch (name) {\r\n    case \"SSTORE\":\r\n      key = to.rpcDataHexString(args[1], 64).replace(\"0x\", \"\");\r\n      value = to.rpcDataHexString(args[0], 64).replace(\"0x\", \"\");\r\n      // use Object.assign to prevent future steps from overwriting this step's storage values\r\n      structLog.storage = Object.assign({}, storageStack.stack[storageStack.currentDepth]);\r\n\r\n      callback(null, structLog);\r\n      // assign after callback because this storage change actually takes\r\n      // effect _after_ this opcode executes\r\n      storageStack.stack[storageStack.currentDepth][key] = value;\r\n      break;\r\n    case \"SLOAD\":\r\n      // this one's more fun, we need to get the value the contract is loading from current storage\r\n      key = to.rpcDataHexString(args[0], 64).replace(\"0x\", \"\");\r\n\r\n      self.vm.stateManager.getContractStorage(event.address, \"0x\" + key, function(err, result) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        value = to.rpcDataHexString(result, 64).replace(\"0x\", \"\");\r\n        storageStack.stack[storageStack.currentDepth][key] = value;\r\n        // use Object.assign to prevent future steps from overwriting this step's storage values\r\n        structLog.storage = Object.assign({}, storageStack.stack[storageStack.currentDepth]);\r\n        callback(null, structLog);\r\n      });\r\n      break;\r\n    default:\r\n      // use Object.assign to prevent future steps from overwriting this step's storage values\r\n      structLog.storage = Object.assign({}, storageStack.stack[storageStack.currentDepth]);\r\n      callback(null, structLog);\r\n  }\r\n};\r\n\r\nBlockchainDouble.prototype.getAccount = function(address, number, callback) {\r\n  var self = this;\r\n\r\n  this.getBlock(number, function(err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var trie = self.stateTrie;\r\n\r\n    // Manipulate the state root in place to maintain checkpoints\r\n    var currentStateRoot = trie.root;\r\n    self.stateTrie.root = block.header.stateRoot;\r\n\r\n    trie.get(utils.toBuffer(address), function(err, data) {\r\n      // Finally, put the stateRoot back for good\r\n      trie.root = currentStateRoot;\r\n\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      var account = new Account(data);\r\n\r\n      account.exists = !!data;\r\n\r\n      callback(null, account);\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getNonce = function(address, number, callback) {\r\n  this.getAccount(address, number, function(err, account) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(null, account.nonce);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getBalance = function(address, number, callback) {\r\n  this.getAccount(address, number, function(err, account) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    callback(null, account.balance);\r\n  });\r\n};\r\n\r\n// Note! Storage values are returned RLP encoded!\r\nBlockchainDouble.prototype.getStorage = function(address, position, number, callback) {\r\n  var self = this;\r\n\r\n  this.getBlock(number, function(err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var trie = self.stateTrie;\r\n\r\n    // Manipulate the state root in place to maintain checkpoints\r\n    var currentStateRoot = trie.root;\r\n    self.stateTrie.root = block.header.stateRoot;\r\n\r\n    trie.get(utils.toBuffer(address), function(err, data) {\r\n      if (err != null) {\r\n        // Put the stateRoot back if there's an error\r\n        trie.root = currentStateRoot;\r\n        return callback(err);\r\n      }\r\n\r\n      var account = new Account(data);\r\n\r\n      trie.root = account.stateRoot;\r\n\r\n      trie.get(utils.setLengthLeft(utils.toBuffer(position), 32), function(err, value) {\r\n        // Finally, put the stateRoot back for good\r\n        trie.root = currentStateRoot;\r\n\r\n        if (err != null) {\r\n          return callback(err);\r\n        }\r\n\r\n        callback(null, value);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getCode = function(address, number, callback) {\r\n  var self = this;\r\n\r\n  this.getBlock(number, function(err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var trie = self.stateTrie;\r\n\r\n    // Manipulate the state root in place to maintain checkpoints\r\n    var currentStateRoot = trie.root;\r\n    self.stateTrie.root = block.header.stateRoot;\r\n\r\n    trie.get(utils.toBuffer(address), function(err, data) {\r\n      if (err != null) {\r\n        // Put the stateRoot back if there's an error\r\n        trie.root = currentStateRoot;\r\n        return callback(err);\r\n      }\r\n\r\n      var account = new Account(data);\r\n\r\n      account.getCode(trie, function(err, code) {\r\n        // Finally, put the stateRoot back for good\r\n        trie.root = currentStateRoot;\r\n\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        callback(null, code);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getTransaction = function(hash, callback) {\r\n  hash = to.hex(hash);\r\n\r\n  this.data.transactions.get(hash, function(err, tx) {\r\n    if (err) {\r\n      if (err.notFound) {\r\n        return callback(null, null);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n    callback(null, tx);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getTransactionReceipt = function(hash, callback) {\r\n  hash = to.hex(hash);\r\n\r\n  this.data.transactionReceipts.get(hash, function(err, receipt) {\r\n    if (err) {\r\n      if (err.notFound) {\r\n        return callback(null, null);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n\r\n    callback(err, receipt);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getBlockLogs = function(number, callback) {\r\n  var self = this;\r\n  this.getEffectiveBlockNumber(number, function(err, effective) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    self.data.blockLogs.get(effective, callback);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.getHeight = function(callback) {\r\n  this.data.blocks.length(function(err, length) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(null, length - 1);\r\n  });\r\n};\r\n\r\nBlockchainDouble.prototype.currentTime = function() {\r\n  return ((new Date().getTime() / 1000) | 0) + this.timeAdjustment;\r\n};\r\n\r\nBlockchainDouble.prototype.increaseTime = function(seconds) {\r\n  if (seconds < 0) {\r\n    seconds = 0;\r\n  }\r\n  this.timeAdjustment += seconds;\r\n  return this.timeAdjustment;\r\n};\r\n\r\nBlockchainDouble.prototype.setTime = function(date) {\r\n  var now = (new Date().getTime() / 1000) | 0;\r\n  var start = (date.getTime() / 1000) | 0;\r\n  this.timeAdjustment = start - now;\r\n};\r\n\r\nBlockchainDouble.prototype.close = function(callback) {\r\n  this.data.close(callback);\r\n};\r\n\r\nmodule.exports = BlockchainDouble;\r\n","module.exports = require(\"ethereumjs-vm\");","module.exports = require(\"heap\");","module.exports = require(\"levelup\");","module.exports = require(\"encoding-down\");","module.exports = require(\"abstract-leveldown\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"cachedown\");","var to = require(\"../utils/to\");\r\nvar utils = require(\"ethereumjs-util\");\r\nvar FakeTransaction = require(\"ethereumjs-tx/fake.js\");\r\n\r\nmodule.exports = {\r\n  encode: function(tx, done) {\r\n    var encoded = tx.toJSON(true);\r\n\r\n    encoded.from = to.hex(tx.from);\r\n    encoded.hash = to.hex(tx.hash());\r\n\r\n    done(null, encoded);\r\n  },\r\n  decode: function(json, done) {\r\n    // TODO: We can't use txhelper here because there are two\r\n    // JSON serialization types: ethereumjs-tx, and web3.\r\n    // Here we deserialize from ethereumjs-tx because it's\r\n    // closer to the metal, so to speak.\r\n    var tx = new FakeTransaction({\r\n      nonce: utils.toBuffer(json.nonce),\r\n      value: utils.toBuffer(json.value),\r\n      to: utils.toBuffer(json.to),\r\n      from: utils.toBuffer(json.from),\r\n      gasLimit: utils.toBuffer(json.gasLimit),\r\n      gasPrice: utils.toBuffer(json.gasPrice),\r\n      data: utils.toBuffer(json.data),\r\n      v: utils.toBuffer(json.v),\r\n      r: utils.toBuffer(json.r),\r\n      s: utils.toBuffer(json.s)\r\n    });\r\n\r\n    // if (to.hex(tx.hash()) != json.hash) {\r\n    //   return done(new Error(\"DB consistency check: Decoded transaction hash didn't match encoded hash.\r\n    //   Expected: \" + json.hash + \"; actual: \" + to.hex(tx.hash())));\r\n    // }\r\n\r\n    done(null, tx);\r\n  }\r\n};\r\n","module.exports = require(\"tmp\");","module.exports = require(\"web3-core\");","module.exports = require(\"web3-eth\");","module.exports = require(\"web3-net\");","module.exports = require(\"web3-eth-personal\");","module.exports = require(\"web3-shh\");","module.exports = require(\"web3-bzz\");","module.exports = require(\"web3-utils\");","module.exports = require(\"bn.js\");","module.exports = require(\"eth-sig-util\");","var to = require(\"./to\");\r\nvar txhelper = require(\"./txhelper\");\r\n\r\nmodule.exports = {\r\n  toJSON: function(block, includeFullTransactions) {\r\n    return {\r\n      number: to.rpcQuantityHexString(block.header.number),\r\n      hash: to.hex(block.hash()),\r\n      parentHash: to.hex(block.header.parentHash), // common.hash\r\n      mixHash: to.hex(block.header.mixHash),\r\n      nonce: to.rpcDataHexString(to.hex(block.header.nonce), 16),\r\n      sha3Uncles: to.hex(block.header.uncleHash),\r\n      logsBloom: to.hex(block.header.bloom),\r\n      transactionsRoot: to.hex(block.header.transactionsTrie),\r\n      stateRoot: to.hex(block.header.stateRoot),\r\n      receiptsRoot: to.hex(block.header.receiptTrie),\r\n      miner: to.hex(block.header.coinbase),\r\n      difficulty: to.rpcQuantityHexString(block.header.difficulty),\r\n      totalDifficulty: to.rpcQuantityHexString(block.header.difficulty), // TODO: Figure out what to do here.\r\n      extraData: to.rpcDataHexString(block.header.extraData),\r\n      size: to.hex(1000), // TODO: Do something better here\r\n      gasLimit: to.rpcQuantityHexString(block.header.gasLimit),\r\n      gasUsed: to.rpcQuantityHexString(block.header.gasUsed),\r\n      timestamp: to.rpcQuantityHexString(block.header.timestamp),\r\n      transactions: block.transactions.map(function(tx) {\r\n        if (includeFullTransactions) {\r\n          return txhelper.toJSON(tx, block);\r\n        } else {\r\n          return to.hex(tx.hash());\r\n        }\r\n      }),\r\n      uncles: [] // block.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\r\n    };\r\n  }\r\n};\r\n","module.exports = require(\"websocket\");","module.exports = require(\"http\");","module.exports = require(\"core-js/fn/promise\");","// make sourcemaps work!\r\nrequire(\"source-map-support/register\");\r\n\r\nconst debug = require(\"debug\")(\"ganache\");\r\n\r\n// we use optional dependencies which may, or may not exist, so try native first\r\ntry {\r\n  // make sure these exist before we try to load ganache with native modules\r\n  const optionalDependencies = require(\"./package.json\").optionalDependencies;\r\n  const wrongWeb3 = require(\"web3/package.json\").version !== optionalDependencies[\"web3\"];\r\n  const wrongEthereumJs = require(\r\n    \"ethereumjs-wallet/package.json\"\r\n  ).version !== optionalDependencies[\"ethereumjs-wallet\"];\r\n  if (wrongWeb3 || wrongEthereumJs) {\r\n    useBundled();\r\n  } else {\r\n    module.exports = require(\"./public-exports.js\");\r\n    module.exports._webpacked = false;\r\n    debug(\"Optional dependencies installed; exporting ganache-core with native optional dependencies.\");\r\n  }\r\n} catch (nativeError) {\r\n  debug(nativeError);\r\n\r\n  // grabbing the native/optional deps failed, try using our webpacked build.\r\n  useBundled();\r\n}\r\n\r\nfunction useBundled() {\r\n  try {\r\n    module.exports = require(\"./build/ganache.core.node.js\");\r\n    module.exports._webpacked = true;\r\n    debug(\"Optional dependencies not installed; exporting ganache-core from `./build` directory.\");\r\n  } catch (webpackError) {\r\n    debug(\"ganache-core could not be exported; optional dependencies nor webpack build available for export.\");\r\n    throw webpackError;\r\n  }\r\n}\r\n","module.exports = require(\"debug\");","// make sourcemaps work!\r\nrequire(\"source-map-support/register\");\r\n\r\nconst Provider = require(\"./lib/provider\");\r\nconst Server = require(\"./lib/server\");\r\n\r\n// This interface exists so as not to cause breaking changes.\r\nmodule.exports = {\r\n  server: function(options) {\r\n    return Server.create(options);\r\n  },\r\n  provider: function(options) {\r\n    return new Provider(options);\r\n  },\r\n  _webpacked: true\r\n};\r\n","module.exports = require(\"setimmediate\");","var Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\r\nvar inherits = require(\"util\").inherits;\r\n\r\ninherits(RequestFunnel, Subprovider);\r\n\r\nmodule.exports = RequestFunnel;\r\n\r\n// See if any payloads for the specified methods are marked as external.\r\n// If they are external, and match the method list, process them one at\r\n// a time.\r\nfunction RequestFunnel() {\r\n  // We use an object here for O(1) lookups (speed).\r\n  this.methods = {\r\n    eth_call: true,\r\n    eth_getStorageAt: true,\r\n    eth_sendTransaction: true,\r\n    eth_sendRawTransaction: true,\r\n\r\n    // Ensure block filter and filter changes are process one at a time\r\n    // as well so filter requests that come in after a transaction get\r\n    // processed once that transaction has finished processing.\r\n    eth_newBlockFilter: true,\r\n    eth_getFilterChanges: true,\r\n    eth_getFilterLogs: true\r\n  };\r\n  this.queue = [];\r\n  this.isWorking = false;\r\n}\r\n\r\nRequestFunnel.prototype.handleRequest = function(payload, next, end) {\r\n  if (payload.external !== true || this.methods[payload.method] !== true) {\r\n    return next();\r\n  }\r\n\r\n  this.queue.push([payload, next]);\r\n\r\n  if (this.isWorking === false) {\r\n    this.processNext();\r\n  }\r\n};\r\n\r\nRequestFunnel.prototype.processNext = function() {\r\n  var self = this;\r\n\r\n  if (this.queue.length === 0) {\r\n    this.isWorking = false;\r\n    return;\r\n  }\r\n\r\n  this.isWorking = true;\r\n\r\n  var item = this.queue.shift();\r\n  var next = item[1];\r\n\r\n  next(function(error, request, cb) {\r\n    if (error) {\r\n      return cb(error);\r\n    }\r\n    cb();\r\n    self.processNext();\r\n  });\r\n};\r\n","// It's unforutnate we have to have this subprovider, but it's because\r\n// we instamine, and web3 isn't written in a way that supports instamining\r\n// (i.e., it sets up the filter after the transaction has been processed).\r\n// This block filter will ensure that each block filter will always see\r\n// the change from the last block to the current block.\r\n//\r\n// Note: An added benefit of this is that it shaves off a signifcant\r\n// amount of time from tests that use web3 and block filters.\r\n\r\nvar Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\r\nvar inherits = require(\"util\").inherits;\r\nvar async = require(\"async\");\r\nvar to = require(\"../utils/to\");\r\n\r\ninherits(DelayedBlockFilter, Subprovider);\r\n\r\nmodule.exports = DelayedBlockFilter;\r\n\r\nfunction DelayedBlockFilter() {\r\n  this.watching = {};\r\n}\r\n\r\nDelayedBlockFilter.prototype.handleRequest = function(payload, next, end) {\r\n  if (payload.method === \"eth_newBlockFilter\") {\r\n    return this.handleNewBlockFilter(payload, next, end);\r\n  }\r\n  if (payload.method === \"eth_getFilterChanges\") {\r\n    return this.handleGetFilterChanges(payload, next, end);\r\n  }\r\n\r\n  next();\r\n};\r\n\r\nDelayedBlockFilter.prototype.handleNewBlockFilter = function(payload, next, end) {\r\n  var self = this;\r\n\r\n  // Let this filter process and add it to our watch list.\r\n  next(function(err, result, cb) {\r\n    if (err) {\r\n      return cb();\r\n    }\r\n    self.watching[result] = true;\r\n    cb();\r\n  });\r\n};\r\n\r\nDelayedBlockFilter.prototype.handleGetFilterChanges = function(payload, next, end) {\r\n  var self = this;\r\n  var filterId = payload.params[0];\r\n\r\n  if (!this.watching[filterId]) {\r\n    return next();\r\n  }\r\n\r\n  // Get the changes, and then alter the result.\r\n  next(function(err, result, cb) {\r\n    if (err) {\r\n      return cb();\r\n    }\r\n\r\n    var currentBlockHash;\r\n    var previousBlockHash;\r\n    var blockNumber;\r\n\r\n    async.series(\r\n      [\r\n        function(c) {\r\n          // If we have a result, use it.\r\n          if (result.length !== 0) {\r\n            currentBlockHash = result[0];\r\n            c();\r\n          } else {\r\n            // Otherwise, get the current block number.\r\n            self.emitPayload(\r\n              {\r\n                method: \"eth_blockNumber\"\r\n              },\r\n              function(err, res) {\r\n                if (err) {\r\n                  return c(err);\r\n                }\r\n                blockNumber = to.number(res.result);\r\n                c();\r\n              }\r\n            );\r\n          }\r\n        },\r\n        function(c) {\r\n          // If we got a block number above, meaning, we didn't get a block hash,\r\n          // skip this step.\r\n          if (blockNumber) {\r\n            return c();\r\n          }\r\n\r\n          // If not skipped, then we got a block hash, and we need to get a block number from it.\r\n          self.emitPayload(\r\n            {\r\n              method: \"eth_getBlockByHash\",\r\n              params: [currentBlockHash, false]\r\n            },\r\n            function(err, res) {\r\n              if (err) {\r\n                return c(err);\r\n              }\r\n              blockNumber = to.number(res.result.number);\r\n              c();\r\n            }\r\n          );\r\n        },\r\n        function(c) {\r\n          // If we're at block 0, return no changes. See final function below.\r\n          blockNumber = to.number(blockNumber);\r\n          if (blockNumber === 0) {\r\n            previousBlockHash = undefined;\r\n            return c();\r\n          }\r\n\r\n          // If at this point, we do have a block number, so let's subtract one\r\n          // from it and get the block hash of the block before it.\r\n          blockNumber = blockNumber - 1;\r\n          self.emitPayload(\r\n            {\r\n              method: \"eth_getBlockByNumber\",\r\n              params: [blockNumber, false]\r\n            },\r\n            function(err, res) {\r\n              if (err) {\r\n                return c(err);\r\n              }\r\n              previousBlockHash = res.result.hash;\r\n              c();\r\n            }\r\n          );\r\n        }\r\n      ],\r\n      function(err) {\r\n        if (err) {\r\n          // Unfortunately the subprovider code doesn't let us return an error\r\n          // through the callback cb(). So we'll just ignore it.... (famous last words).\r\n        }\r\n\r\n        // If we got the previous block, use it. Otherwise do nothing.\r\n        // Then stop watching because we only want on getFilterChanges to react this way.\r\n        if (previousBlockHash) {\r\n          result[0] = previousBlockHash;\r\n        }\r\n\r\n        delete self.watching[filterId];\r\n        cb();\r\n      }\r\n    );\r\n  });\r\n};\r\n","var Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\r\nvar inherits = require(\"util\").inherits;\r\n\r\ninherits(GethDefaults, Subprovider);\r\n\r\nmodule.exports = GethDefaults;\r\n\r\nfunction GethDefaults() {}\r\n\r\n// Massage eth_estimateGas requests, setting default data (e.g., from) if\r\n// not specified. This is here specifically to make the testrpc\r\n// react like Geth.\r\nGethDefaults.prototype.handleRequest = function(payload, next, end) {\r\n  if (payload.method !== \"eth_estimateGas\" && payload.method !== \"eth_call\") {\r\n    return next();\r\n  }\r\n\r\n  var params = payload.params[0];\r\n\r\n  if (params.from == null) {\r\n    this.emitPayload(\r\n      {\r\n        method: \"eth_coinbase\"\r\n      },\r\n      function(err, result) {\r\n        if (err) {\r\n          return end(err);\r\n        }\r\n\r\n        var coinbase = result.result;\r\n\r\n        params.from = coinbase;\r\n        next();\r\n      }\r\n    );\r\n  } else {\r\n    next();\r\n  }\r\n};\r\n","var utils = require(\"ethereumjs-util\");\r\nvar inherits = require(\"util\").inherits;\r\nvar StateManager = require(\"../statemanager.js\");\r\nvar to = require(\"../utils/to\");\r\nvar txhelper = require(\"../utils/txhelper\");\r\nvar blockHelper = require(\"../utils/block_helper\");\r\nvar pkg = require(\"../../package.json\");\r\n\r\nvar Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\r\n\r\ninherits(GethApiDouble, Subprovider);\r\n\r\nfunction GethApiDouble(options, provider) {\r\n  var self = this;\r\n\r\n  this.state = options.state || new StateManager(options, provider);\r\n  this.options = options;\r\n  this.initialized = false;\r\n\r\n  this.initialization_error = null;\r\n  this.post_initialization_callbacks = [];\r\n\r\n  this.state.initialize(function(err) {\r\n    if (err) {\r\n      self.initialization_error = err;\r\n    }\r\n    self.initialized = true;\r\n\r\n    var callbacks = self.post_initialization_callbacks;\r\n    self.post_initialization_callbacks = [];\r\n\r\n    callbacks.forEach(function(callback) {\r\n      setImmediate(function() {\r\n        callback(self.initialization_error, self.state);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nGethApiDouble.prototype.waitForInitialization = function(callback) {\r\n  var self = this;\r\n  if (self.initialized === false) {\r\n    self.post_initialization_callbacks.push(callback);\r\n  } else {\r\n    callback(self.initialization_error, self.state);\r\n  }\r\n};\r\n\r\n// Function to not pass methods through until initialization is finished\r\nGethApiDouble.prototype.handleRequest = function(payload, next, end) {\r\n  var self = this;\r\n\r\n  if (self.initialization_error != null) {\r\n    return end(self.initialization_error);\r\n  }\r\n\r\n  if (self.initialized === false) {\r\n    self.waitForInitialization(self.getDelayedHandler(payload, next, end));\r\n    return;\r\n  }\r\n\r\n  var method = self[payload.method];\r\n\r\n  if (method == null) {\r\n    return end(new Error(\"Method \" + payload.method + \" not supported.\"));\r\n  }\r\n\r\n  var params = payload.params || [];\r\n  var args = [].concat(params);\r\n\r\n  var addedBlockParam = false;\r\n\r\n  if (self.requiresDefaultBlockParameter(payload.method) && args.length < method.length - 1) {\r\n    args.push(\"latest\");\r\n    addedBlockParam = true;\r\n  }\r\n\r\n  args.push(end);\r\n\r\n  // avoid crash by checking to make sure that we haven't specified too many arguments\r\n  if (\r\n    args.length > method.length ||\r\n    (method.minLength !== undefined && args.length < method.minLength) ||\r\n    (method.minLength === undefined && args.length < method.length)\r\n  ) {\r\n    var errorMessage = `Incorrect number of arguments. Method '${payload.method}' requires `;\r\n    if (method.minLength) {\r\n      errorMessage += `between ${method.minLength - 1} and ${method.length - 1} arguments. `;\r\n    } else {\r\n      errorMessage += `exactly ${method.length - 1} arguments. `;\r\n    }\r\n\r\n    if (addedBlockParam) {\r\n      errorMessage += \"Including the implicit block argument, r\";\r\n    } else {\r\n      // new sentence, capitalize it.\r\n      errorMessage += \"R\";\r\n    }\r\n    errorMessage += `equest specified ${args.length - 1} arguments: ${JSON.stringify(args)}.`;\r\n\r\n    return end(new Error(errorMessage));\r\n  }\r\n\r\n  method.apply(self, args);\r\n};\r\n\r\nGethApiDouble.prototype.getDelayedHandler = function(payload, next, end) {\r\n  var self = this;\r\n  return function(err, state) {\r\n    if (err) {\r\n      end(err);\r\n    }\r\n    self.handleRequest(payload, next, end);\r\n  };\r\n};\r\n\r\nGethApiDouble.prototype.requiresDefaultBlockParameter = function(method) {\r\n  // object for O(1) lookup.\r\n  var methods = {\r\n    eth_getBalance: true,\r\n    eth_getCode: true,\r\n    eth_getTransactionCount: true,\r\n    eth_getStorageAt: true,\r\n    eth_call: true,\r\n    eth_estimateGas: true\r\n  };\r\n\r\n  return methods[method] === true;\r\n};\r\n\r\n// Handle individual requests.\r\n\r\nGethApiDouble.prototype.eth_accounts = function(callback) {\r\n  callback(null, Object.keys(this.state.accounts));\r\n};\r\n\r\nGethApiDouble.prototype.eth_blockNumber = function(callback) {\r\n  this.state.blockNumber(function(err, result) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(null, to.hex(result));\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_coinbase = function(callback) {\r\n  callback(null, this.state.coinbase);\r\n};\r\n\r\nGethApiDouble.prototype.eth_mining = function(callback) {\r\n  callback(null, this.state.is_mining);\r\n};\r\n\r\nGethApiDouble.prototype.eth_hashrate = function(callback) {\r\n  callback(null, \"0x0\");\r\n};\r\n\r\nGethApiDouble.prototype.eth_gasPrice = function(callback) {\r\n  callback(null, utils.addHexPrefix(this.state.gasPrice()));\r\n};\r\n\r\nGethApiDouble.prototype.eth_getBalance = function(address, blockNumber, callback) {\r\n  this.state.getBalance(address, blockNumber, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getCode = function(address, blockNumber, callback) {\r\n  this.state.getCode(address, blockNumber, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getBlockByNumber = function(blockNumber, includeFullTransactions, callback) {\r\n  this.state.blockchain.getBlock(blockNumber, function(err, block) {\r\n    if (err) {\r\n      if (err.message && err.message.indexOf(\"index out of range\") >= 0) {\r\n        return callback(null, null);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n\r\n    callback(null, blockHelper.toJSON(block, includeFullTransactions));\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_getBlockByHash = function(txHash, includeFullTransactions, callback) {\r\n  this.eth_getBlockByNumber.apply(this, arguments);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getBlockTransactionCountByNumber = function(blockNumber, callback) {\r\n  this.state.blockchain.getBlock(blockNumber, function(err, block) {\r\n    if (err) {\r\n      if (err.message.indexOf(\"index out of range\")) {\r\n        // block doesn't exist\r\n        return callback(null, 0);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n    callback(null, block.transactions.length);\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_getBlockTransactionCountByHash = function(blockHash, callback) {\r\n  this.eth_getBlockTransactionCountByNumber.apply(this, arguments);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getTransactionReceipt = function(hash, callback) {\r\n  this.state.getTransactionReceipt(hash, function(err, receipt) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var result = null;\r\n\r\n    if (receipt) {\r\n      result = receipt.toJSON();\r\n    }\r\n    callback(null, result);\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_getTransactionByHash = function(hash, callback) {\r\n  this.state.getTransactionReceipt(hash, function(err, receipt) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var result = null;\r\n\r\n    if (receipt) {\r\n      result = txhelper.toJSON(receipt.tx, receipt.block);\r\n    }\r\n\r\n    callback(null, result);\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_getTransactionByBlockHashAndIndex = function(hashOrNumber, index, callback) {\r\n  index = to.number(index);\r\n\r\n  this.state.getBlock(hashOrNumber, function(err, block) {\r\n    if (err) {\r\n      // block doesn't exist by that hash\r\n      if (err.notFound) {\r\n        return callback(null, null);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n\r\n    if (index >= block.transactions.length) {\r\n      return callback(new Error(\"Transaction at index \" + to.hex(index) + \" does not exist in block.\"));\r\n    }\r\n\r\n    var tx = block.transactions[index];\r\n    var result = txhelper.toJSON(tx, block);\r\n\r\n    callback(null, result);\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_getTransactionByBlockNumberAndIndex = function(hashOrNumber, index, callback) {\r\n  this.eth_getTransactionByBlockHashAndIndex(hashOrNumber, index, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getTransactionCount = function(address, blockNumber, callback) {\r\n  this.state.getTransactionCount(address, blockNumber, (err, count) => {\r\n    if (err && err.message && err.message.indexOf(\"index out of range\") >= 0) {\r\n      err = new Error(\"Unknown block number\");\r\n    }\r\n    return callback(err, count);\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.eth_sign = function(address, dataToSign, callback) {\r\n  var result;\r\n  var error;\r\n\r\n  try {\r\n    result = this.state.sign(address, dataToSign);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  callback(error, result);\r\n};\r\n\r\nGethApiDouble.prototype.eth_signTypedData = function(address, typedDataToSign, callback) {\r\n  var result;\r\n  var error;\r\n\r\n  try {\r\n    result = this.state.signTypedData(address, typedDataToSign);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  callback(error, result);\r\n};\r\n\r\nGethApiDouble.prototype.eth_sendTransaction = function(txData, callback) {\r\n  this.state.queueTransaction(\"eth_sendTransaction\", txData, null, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_sendRawTransaction = function(rawTx, callback) {\r\n  this.state.queueRawTransaction(rawTx, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_call = function(txData, blockNumber, callback) {\r\n  if (!txData.gas) {\r\n    txData.gas = this.state.blockchain.blockGasLimit;\r\n  }\r\n\r\n  this.state.queueTransaction(\"eth_call\", txData, blockNumber, callback); // :(\r\n};\r\n\r\nGethApiDouble.prototype.eth_estimateGas = function(txData, blockNumber, callback) {\r\n  if (!txData.gas) {\r\n    txData.gas = this.state.blockchain.blockGasLimit;\r\n  }\r\n  this.state.queueTransaction(\"eth_estimateGas\", txData, blockNumber, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getStorageAt = function(address, position, blockNumber, callback) {\r\n  this.state.queueStorage(address, position, blockNumber, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_newBlockFilter = function(callback) {\r\n  var filterId = utils.addHexPrefix(utils.intToHex(this.state.latestFilterId));\r\n  this.state.latestFilterId += 1;\r\n  callback(null, filterId);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getFilterChanges = function(filterId, callback) {\r\n  var blockHash = this.state\r\n    .latestBlock()\r\n    .hash()\r\n    .toString(\"hex\");\r\n  // Mine a block after each request to getFilterChanges so block filters work.\r\n  this.state.mine();\r\n  callback(null, [blockHash]);\r\n};\r\n\r\nGethApiDouble.prototype.eth_getLogs = function(filter, callback) {\r\n  this.state.getLogs(filter, callback);\r\n};\r\n\r\nGethApiDouble.prototype.eth_uninstallFilter = function(filterId, callback) {\r\n  callback(null, true);\r\n};\r\n\r\nGethApiDouble.prototype.eth_protocolVersion = function(callback) {\r\n  callback(null, \"63\");\r\n};\r\n\r\nGethApiDouble.prototype.bzz_hive = function(callback) {\r\n  callback(null, []);\r\n};\r\n\r\nGethApiDouble.prototype.bzz_info = function(callback) {\r\n  callback(null, []);\r\n};\r\n\r\nGethApiDouble.prototype.shh_version = function(callback) {\r\n  callback(null, \"2\");\r\n};\r\n\r\nGethApiDouble.prototype.eth_getCompilers = function(callback) {\r\n  callback(null, []);\r\n};\r\n\r\nGethApiDouble.prototype.eth_syncing = function(callback) {\r\n  callback(null, false);\r\n};\r\n\r\nGethApiDouble.prototype.net_listening = function(callback) {\r\n  callback(null, true);\r\n};\r\n\r\nGethApiDouble.prototype.net_peerCount = function(callback) {\r\n  callback(null, 0);\r\n};\r\n\r\nGethApiDouble.prototype.web3_clientVersion = function(callback) {\r\n  callback(null, \"EthereumJS TestRPC/v\" + pkg.version + \"/ethereum-js\");\r\n};\r\n\r\nGethApiDouble.prototype.web3_sha3 = function(string, callback) {\r\n  callback(null, to.hex(utils.sha3(string)));\r\n};\r\n\r\nGethApiDouble.prototype.net_version = function(callback) {\r\n  // net_version returns a string containing a base 10 integer.\r\n  callback(null, this.state.net_version + \"\");\r\n};\r\n\r\nGethApiDouble.prototype.miner_start = function(threads, callback) {\r\n  if (!callback && typeof threads === \"function\") {\r\n    callback = threads;\r\n    threads = null;\r\n  }\r\n\r\n  this.state.startMining(function(err) {\r\n    callback(err, true);\r\n  });\r\n};\r\n\r\n// indicate that `miner_start` only requires one argument (the callback)\r\nGethApiDouble.prototype.miner_start.minLength = 1;\r\n\r\nGethApiDouble.prototype.miner_stop = function(callback) {\r\n  this.state.stopMining(function(err) {\r\n    callback(err, true);\r\n  });\r\n};\r\n\r\nGethApiDouble.prototype.rpc_modules = function(callback) {\r\n  // returns the availible api modules and versions\r\n  callback(null, { eth: \"1.0\", net: \"1.0\", rpc: \"1.0\", web3: \"1.0\", evm: \"1.0\", personal: \"1.0\" });\r\n};\r\n\r\nGethApiDouble.prototype.personal_listAccounts = function(callback) {\r\n  callback(null, Object.keys(this.state.personal_accounts));\r\n};\r\n\r\nGethApiDouble.prototype.personal_newAccount = function(password, callback) {\r\n  var account = this.state.createAccount({ generate: true });\r\n  this.state.accounts[account.address.toLowerCase()] = account;\r\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\r\n  this.state.account_passwords[account.address.toLowerCase()] = password;\r\n  callback(null, account.address);\r\n};\r\n\r\nGethApiDouble.prototype.personal_importRawKey = function(rawKey, password, callback) {\r\n  var account = this.state.createAccount({ secretKey: rawKey });\r\n  this.state.accounts[account.address.toLowerCase()] = account;\r\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\r\n  this.state.account_passwords[account.address.toLowerCase()] = password;\r\n  callback(null, account.address);\r\n};\r\n\r\nGethApiDouble.prototype.personal_lockAccount = function(address, callback) {\r\n  var account = this.state.personal_accounts[address.toLowerCase()];\r\n  if (account !== true) {\r\n    var error = \"Account not found\";\r\n    return callback(error);\r\n  }\r\n  delete this.state.unlocked_accounts[address.toLowerCase()];\r\n  callback(null, true);\r\n};\r\n\r\nGethApiDouble.prototype.personal_unlockAccount = function(address, password, duration, callback) {\r\n  // FIXME handle duration\r\n  var account = this.state.personal_accounts[address.toLowerCase()];\r\n  if (account !== true) {\r\n    var accountError = \"Account not found\";\r\n    return callback(accountError);\r\n  }\r\n\r\n  var storedPassword = this.state.account_passwords[address.toLowerCase()];\r\n  if (storedPassword !== undefined && storedPassword !== password) {\r\n    var passwordError = \"Invalid password\";\r\n    return callback(passwordError);\r\n  }\r\n\r\n  this.state.unlocked_accounts[address.toLowerCase()] = true;\r\n  callback(null, true);\r\n};\r\n\r\nGethApiDouble.prototype.personal_sendTransaction = function(txData, password, callback) {\r\n  if (txData.from == null) {\r\n    var error = \"Sender not found\";\r\n    callback(error);\r\n    return;\r\n  }\r\n\r\n  var from = utils.addHexPrefix(txData.from).toLowerCase();\r\n\r\n  var self = this;\r\n  self.personal_unlockAccount(from, password, null, function(err) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.state.queueTransaction(\"eth_sendTransaction\", txData, null, function(err, ret) {\r\n      self.state.unlocked_accounts[from.toLowerCase()] = false;\r\n      callback(err, ret);\r\n    });\r\n  });\r\n};\r\n\r\n/* Functions for testing purposes only. */\r\n\r\nGethApiDouble.prototype.evm_snapshot = function(callback) {\r\n  this.state.snapshot(callback);\r\n};\r\n\r\nGethApiDouble.prototype.evm_revert = function(snapshotId, callback) {\r\n  this.state.revert(snapshotId, callback);\r\n};\r\n\r\nGethApiDouble.prototype.evm_increaseTime = function(seconds, callback) {\r\n  callback(null, this.state.blockchain.increaseTime(seconds));\r\n};\r\n\r\nGethApiDouble.prototype.evm_setTime = function(date, callback) {\r\n  callback(null, this.state.blockchain.setTime(date));\r\n};\r\n\r\nGethApiDouble.prototype.evm_mine = function(timestamp, callback) {\r\n  if (typeof timestamp === \"function\") {\r\n    callback = timestamp;\r\n    timestamp = undefined;\r\n  }\r\n  this.state.processBlock(timestamp, function(err) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(err, \"0x0\");\r\n  });\r\n};\r\n\r\n// indicate that `evm_mine` only requires one argument (the callback)\r\nGethApiDouble.prototype.evm_mine.minLength = 1;\r\n\r\nGethApiDouble.prototype.debug_traceTransaction = function(txHash, params, callback) {\r\n  if (typeof params === \"function\") {\r\n    callback = params;\r\n    params = [];\r\n  }\r\n\r\n  this.state.queueTransactionTrace(txHash, params, callback);\r\n};\r\n\r\n/*\r\n  RPC AUDIT:\r\n  TODO ETH: eth_getUncleCountByBlockHash, eth_getUncleCountByBlockNumber, eth_getUncleByBlockHashAndIndex,\r\n        eth_getUncleByBlockNumberAndIndex, eth_getWork, eth_submitWork, eth_submitHashrate\r\n\r\n  TODO DB: db_putString, db_getString, db_putHex, db_getHex\r\n\r\n  TODO WHISPER: shh_post, shh_newIdentity, shh_hasIdentity, shh_newGroup, shh_addToGroup,\r\n        shh_newFilter, shh_uninstallFilter, shh_getFilterChanges, shh_getMessages\r\n*/\r\n\r\n/**\r\n * Returns the number of uncles in a block from a block matching the given block hash.\r\n *\r\n * @param {DATA, 32 Bytes} hash - hash of a block.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {QUANTITY} result - integer of the number of uncles in this block.\r\n */\r\nGethApiDouble.prototype.eth_getUncleCountByBlockHash = function(hash, callback) {\r\n  callback(null, \"0x0\");\r\n};\r\n\r\n/**\r\n * Returns the number of uncles in a block from a block matching the given block number.\r\n *\r\n * @param {QUANTITY} blockNumber -\r\n *  ^integer of a block number, or the string \"latest\", \"earliest\" or \"pending\". Ex: '0xe8', // 232\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {QUANTITY} result - integer of the number of uncles in this block.\r\n */\r\nGethApiDouble.prototype.eth_getUncleCountByBlockNumber = function(blockNumber, callback) {\r\n  callback(null, \"0x0\");\r\n};\r\n\r\n/**\r\n * Returns information about a uncle of a block by hash and uncle index position.\r\n *\r\n * @param {DATA, 32 Bytes} hash - hash of a block\r\n * @param {QUANTITY} index - the uncle's index position.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Object} result - A block object,\r\n */\r\nGethApiDouble.prototype.eth_getUncleByBlockHashAndIndex = function(hash, index, callback) {\r\n  callback(null, {});\r\n};\r\n\r\n/**\r\n * Returns information about a uncle of a block by number and uncle index position.\r\n *\r\n * @param {QUANTITY} blockNumber -\r\n * ^a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default block parameter.\r\n * @param {QUANTITY} uncleIndex - the uncle's index position.\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {Object} resutl - A block object,\r\n */\r\nGethApiDouble.prototype.eth_getUncleByBlockNumberAndIndex = function(blockNumber, uncleIndex, callback) {\r\n  callback(null, {});\r\n};\r\n\r\n/**\r\n * Creates a filter in the node, to notify when new pending transactions arrive.\r\n *\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {QUANTITY} result - A filter id\r\n */\r\nGethApiDouble.prototype.eth_newPendingTransactionFilter = function(callback) {\r\n  callback(null, \"0x00\");\r\n};\r\n\r\n/**\r\n * Returns an array of all logs matching filter with given id.\r\n *\r\n * @param {QUANTITY} filterId - A filter id\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {Array of Log Objects} result - More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getfilterlogs\r\n */\r\nGethApiDouble.prototype.eth_getFilterLogs = function(filterId, callback) {\r\n  callback(null, []);\r\n};\r\n\r\n/**\r\n * Returns: An Array with the following elements\r\n * 1: DATA, 32 Bytes - current block header pow-hash\r\n * 2: DATA, 32 Bytes - the seed hash used for the DAG.\r\n * 3: DATA, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\r\n *\r\n * @param {QUANTITY} filterId - A filter id\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {Array} result - the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\r\n */\r\nGethApiDouble.prototype.eth_getWork = function(filterId, callback) {\r\n  callback(null, []);\r\n};\r\n\r\n/**\r\n * Used for submitting a proof-of-work solution\r\n *\r\n * @param {DATA, 8 Bytes} nonce - The nonce found (64 bits)\r\n * @param {DATA, 32 Bytes} powHash - The header's pow-hash (256 bits)\r\n * @param {DATA, 32 Bytes} digest - The mix digest (256 bits)\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {Boolean} result - returns true if the provided solution is valid, otherwise false.\r\n */\r\nGethApiDouble.prototype.eth_submitWork = function(nonce, powHash, digest, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Used for submitting mining hashrate.\r\n *\r\n * @param {String} hashRate - a hexadecimal string representation (32 bytes) of the hash rate\r\n * @param {String} clientID - A random hexadecimal(32 bytes) ID identifying the client\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {Boolean} result - returns true if submitting went through succesfully and false otherwise.\r\n */\r\nGethApiDouble.prototype.eth_submitHashrate = function(hashRate, clientID, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Stores a string in the local database.\r\n *\r\n * @param {String} dbName - Database name.\r\n * @param {String} key - Key name.\r\n * @param {String} value - String to store.\r\n * @callback callback\r\n * @param {error} err - Error object\r\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\r\n */\r\nGethApiDouble.prototype.db_putString = function(dbName, key, value, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Returns string from the local database\r\n *\r\n * @param {String} dbName - Database name.\r\n * @param {String} key - Key name.\r\n * @callback callback\r\n * @param {error} - Error Object\r\n * @param {String} result - The previously stored string.\r\n */\r\nGethApiDouble.prototype.db_getString = function(dbName, key, callback) {\r\n  callback(null, \"\");\r\n};\r\n\r\n/**\r\n * Stores binary data in the local database.\r\n *\r\n * @param {String} dbName - Database name.\r\n * @param {String} key - Key name.\r\n * @param {DATA} data - Data to store.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\r\n */\r\nGethApiDouble.prototype.db_putHex = function(dbName, key, data, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Returns binary data from the local database\r\n *\r\n * @param {String} dbName - Database name.\r\n * @param {String} key - Key name.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {DATA} result - The previously stored data.\r\n */\r\nGethApiDouble.prototype.db_getHex = function(dbName, key, callback) {\r\n  callback(null, \"0x00\");\r\n};\r\n\r\n/**\r\n * Sends a whisper message.\r\n *\r\n * @param {DATA, 60 Bytes} from - (optional) The identity of the sender.\r\n * @param {DATA, 60 Bytes} to -\r\n *  ^(optional) The identity of the receiver. When present whisper will encrypt the message so that\r\n *  only the receiver can decrypt it.\r\n * @param {Array of DATA} topics - Array of DATA topics, for the receiver to identify messages.\r\n * @param {DATA} payload - The payload of the message.\r\n * @param {QUANTITY} priority - The integer of the priority in a range from ... (?).\r\n * @param {QUANTITY} ttl - integer of the time to live in seconds.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Boolean} result - returns true if the message was sent, otherwise false.\r\n */\r\nGethApiDouble.prototype.shh_post = function(from, to, topics, payload, priority, ttl, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Creates new whisper identity in the client.\r\n *\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {DATA, 60 Bytes} result - the address of the new identiy.\r\n */\r\nGethApiDouble.prototype.shh_newIdentity = function(callback) {\r\n  callback(null, \"0x00\");\r\n};\r\n\r\n/**\r\n * Checks if the client hold the private keys for a given identity.\r\n *\r\n * @param {DATA, 60 Bytes} address - The identity address to check.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Boolean} result - returns true if the client holds the privatekey for that identity, otherwise false.\r\n */\r\nGethApiDouble.prototype.shh_hasIdentity = function(address, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Creates a new group.\r\n *\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {DATA, 60 Bytes} result - the address of the new group.\r\n */\r\nGethApiDouble.prototype.shh_newGroup = function(callback) {\r\n  callback(null, \"0x00\");\r\n};\r\n\r\n/**\r\n * Adds a whisper identity to the group\r\n *\r\n * @param {DATA, 60 Bytes} - The identity address to add to a group.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\r\n */\r\nGethApiDouble.prototype.shh_addToGroup = function(address, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Creates filter to notify, when client receives whisper message matching the filter options.\r\n *\r\n * @param {DATA, 60 Bytes} to -\r\n * ^(optional) Identity of the receiver. When present it will try to decrypt any incoming message\r\n *  if the client holds the private key to this identity.\r\n * @param {Array of DATA} topics - Array of DATA topics which the incoming message's topics should match.\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\r\n */\r\nGethApiDouble.prototype.shh_newFilter = function(to, topics, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\r\n * Additonally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time.\r\n *\r\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Boolean} result - true if the filter was successfully uninstalled, otherwise false.\r\n */\r\nGethApiDouble.prototype.shh_uninstallFilter = function(id, callback) {\r\n  callback(null, false);\r\n};\r\n\r\n/**\r\n * Polling method for whisper filters. Returns new messages since the last call of this method.\r\n *\r\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Array} result - More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\r\n */\r\nGethApiDouble.prototype.shh_getFilterChanges = function(id, callback) {\r\n  callback(null, []);\r\n};\r\n\r\n/**\r\n * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\r\n *\r\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\r\n * @callback callback\r\n * @param {error} err - Error Object\r\n * @param {Array} result - See: shh_getFilterChanges\r\n */\r\nGethApiDouble.prototype.shh_getMessages = function(id, callback) {\r\n  callback(null, false);\r\n};\r\n\r\nmodule.exports = GethApiDouble;\r\n","var Account = require(\"ethereumjs-account\");\r\nvar RuntimeError = require(\"./utils/runtimeerror\");\r\nvar FakeTransaction = require(\"ethereumjs-tx/fake.js\");\r\nvar utils = require(\"ethereumjs-util\");\r\nvar seedrandom = require(\"seedrandom\");\r\nvar bip39 = require(\"bip39\");\r\nvar wallet = require(\"ethereumjs-wallet\");\r\nvar hdkey = require(\"ethereumjs-wallet/hdkey\");\r\nvar async = require(\"async\");\r\nvar BlockchainDouble = require(\"./blockchain_double.js\");\r\nvar ForkedBlockchain = require(\"./utils/forkedblockchain.js\");\r\nvar Web3 = require(\"web3\");\r\nvar sigUtil = require(\"eth-sig-util\");\r\nvar _ = require(\"lodash\");\r\n\r\nvar to = require(\"./utils/to\");\r\nvar random = require(\"./utils/random\");\r\nvar TXRejectedError = require(\"./utils/txrejectederror\");\r\n\r\nfunction StateManager(options, provider) {\r\n  this.options = options = this._applyDefaultOptions(options || {});\r\n\r\n  if (options.fork) {\r\n    this.blockchain = new ForkedBlockchain(options);\r\n  } else {\r\n    this.blockchain = new BlockchainDouble(options);\r\n  }\r\n\r\n  this.vm = this.blockchain.vm;\r\n  this.stateTrie = this.blockchain.stateTrie;\r\n\r\n  this.accounts = {};\r\n  this.secure = !!options.secure;\r\n  this.account_passwords = {};\r\n  this.personal_accounts = {};\r\n  this.total_accounts = options.total_accounts;\r\n  this.coinbase = null;\r\n\r\n  this.latest_filter_id = 1;\r\n\r\n  // This queue manages actions that shouldn't be run in parallel.\r\n  // The action_processing flag ensures new actions are queued instead of\r\n  // run immediately.\r\n  this.action_queue = [];\r\n  this.action_processing = false;\r\n\r\n  this.snapshots = [];\r\n  this.logger = options.logger;\r\n  this.net_version = options.network_id;\r\n  this.mnemonic = options.mnemonic;\r\n  this.wallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(this.mnemonic));\r\n  this.wallet_hdpath = options.hdPath;\r\n\r\n  this.gasPriceVal = to.rpcQuantityHexString(options.gasPrice);\r\n\r\n  this.is_mining = true;\r\n  this.blockTime = options.blockTime;\r\n  this.is_mining_on_interval = !!options.blockTime;\r\n  this.mining_interval_timeout = null;\r\n\r\n  this._provider = provider;\r\n}\r\n\r\nconst defaultOptions = {\r\n  total_accounts: 10,\r\n  gasPrice: \"0x77359400\", // 2 gwei\r\n  default_balance_ether: 100,\r\n  unlocked_accounts: [],\r\n  hdPath: \"m/44'/60'/0'/0/\"\r\n};\r\n\r\nStateManager.prototype._applyDefaultOptions = function(options) {\r\n  // do this so that we can use the same seed on our next run and get the same\r\n  // results without explicitly setting a seed up front\r\n  if (!options.seed) {\r\n    options.seed = random.randomAlphaNumericString(10, seedrandom());\r\n  }\r\n\r\n  // generate a randomized default mnemonic\r\n  if (!options.mnemonic) {\r\n    let randomBytes = random.randomBytes(16, seedrandom(options.seed));\r\n    options.mnemonic = bip39.entropyToMnemonic(randomBytes.toString(\"hex\"));\r\n  }\r\n\r\n  if (!options.fork && !options.network_id) {\r\n    options.network_id = new Date().getTime();\r\n  }\r\n\r\n  // We want this function to mutate the options object so that we can report\r\n  // our settings back to our consumer application (e.g., ganache)\r\n  return _.merge(options, defaultOptions, Object.assign({}, options));\r\n};\r\n\r\nStateManager.prototype.initialize = function(callback) {\r\n  var self = this;\r\n\r\n  var accounts = [];\r\n\r\n  let defaultBalanceWei = to.hex(Web3.utils.toWei(self.options.default_balance_ether.toString(), \"ether\"));\r\n\r\n  if (self.options.accounts) {\r\n    accounts = self.options.accounts.map(self.createAccount.bind(self));\r\n  } else {\r\n    if (!self.total_accounts) {\r\n      return callback(\r\n        new Error(\"Cannot initialize chain: either options.accounts or options.total_accounts must be specified\")\r\n      );\r\n    }\r\n\r\n    for (var i = 0; i < self.total_accounts; i++) {\r\n      accounts.push(\r\n        self.createAccount({\r\n          index: i,\r\n          balance: defaultBalanceWei\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  self.coinbase = to.hex(accounts[0].address);\r\n  self.accounts = {};\r\n\r\n  accounts.forEach(function(data) {\r\n    self.accounts[data.address] = data;\r\n    self.personal_accounts[data.address.toLowerCase()] = true;\r\n  });\r\n\r\n  // Turn array into object, mostly for speed purposes.\r\n  // No need for caller to specify private keys.\r\n  self.unlocked_accounts = self.options.unlocked_accounts.reduce(function(obj, address) {\r\n    // If it doesn't have a hex prefix, must be a number (either a string or number type).\r\n    if ((address + \"\").indexOf(\"0x\") !== 0) {\r\n      let idx = parseInt(address);\r\n      let account = accounts[idx];\r\n      if (!account) {\r\n        throw new Error(`Account at index ${idx} not found. Max index available is ${accounts.length - 1}.`);\r\n      }\r\n      address = account.address.toLowerCase();\r\n    }\r\n\r\n    obj[address.toLowerCase()] = true; // can be any value\r\n    return obj;\r\n  }, {});\r\n\r\n  if (!self.secure) {\r\n    accounts.forEach(function(data) {\r\n      self.unlocked_accounts[data.address.toLowerCase()] = data;\r\n    });\r\n  }\r\n\r\n  self.blockchain.initialize(accounts, function(err) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    // If the user didn't pass a specific version id in, then use the\r\n    // forked blockchain's version (if it exists) or create our own.\r\n    if (!self.net_version) {\r\n      self.net_version = self.blockchain.fork_version;\r\n    }\r\n\r\n    if (self.is_mining_on_interval) {\r\n      self.mineOnInterval();\r\n    }\r\n\r\n    callback();\r\n  });\r\n};\r\n\r\nStateManager.prototype.mineOnInterval = function() {\r\n  var self = this;\r\n\r\n  // For good measure.\r\n  clearTimeout(self.mining_interval_timeout);\r\n  self.mining_interval_timeout = null;\r\n\r\n  self.mining_interval_timeout = setTimeout(function() {\r\n    self._provider.send(\r\n      {\r\n        method: \"evm_mine\"\r\n      },\r\n      self.mineOnInterval.bind(self)\r\n    );\r\n  }, this.blockTime * 1000);\r\n\r\n  // Ensure this won't keep a node process open.\r\n  if (this.mining_interval_timeout && this.mining_interval_timeout.unref) {\r\n    this.mining_interval_timeout.unref();\r\n  }\r\n};\r\n\r\nStateManager.prototype.createAccount = function(opts, i) {\r\n  var secretKey;\r\n\r\n  if (opts.generate) {\r\n    secretKey = wallet.generate().getPrivateKey();\r\n  } else if (opts.secretKey) {\r\n    secretKey = utils.toBuffer(to.hex(opts.secretKey));\r\n  } else {\r\n    var index = typeof opts.index === \"undefined\" ? i : opts.index;\r\n    var acct = this.wallet.derivePath(this.wallet_hdpath + index); // index is a number\r\n    secretKey = acct.getWallet().getPrivateKey(); // Buffer\r\n  }\r\n\r\n  var publicKey = utils.privateToPublic(secretKey);\r\n  var address = utils.publicToAddress(publicKey);\r\n\r\n  var account = new Account();\r\n\r\n  account.balance = to.hex(opts.balance);\r\n\r\n  var data = {\r\n    secretKey: secretKey,\r\n    publicKey: publicKey,\r\n    address: to.hex(address).toLowerCase(),\r\n    account: account\r\n  };\r\n\r\n  return data;\r\n};\r\n\r\nStateManager.prototype.blockNumber = function(callback) {\r\n  return this.blockchain.getHeight(callback);\r\n};\r\n\r\nStateManager.prototype.gasPrice = function() {\r\n  return this.gasPriceVal;\r\n};\r\n\r\nStateManager.prototype.getBalance = function(address, number, callback) {\r\n  this.blockchain.getBalance(address, number, function(err, balance) {\r\n    if (balance) {\r\n      balance = to.rpcQuantityHexString(balance);\r\n    }\r\n    callback(err, balance);\r\n  });\r\n};\r\n\r\nStateManager.prototype.getTransactionCount = function(address, number, callback) {\r\n  this.blockchain.getNonce(address, number, function(err, nonce) {\r\n    if (nonce) {\r\n      nonce = to.rpcQuantityHexString(nonce);\r\n    }\r\n    callback(err, nonce);\r\n  });\r\n};\r\n\r\nStateManager.prototype.getCode = function(address, number, callback) {\r\n  this.blockchain.getCode(address, number, function(err, code) {\r\n    if (code) {\r\n      code = to.hex(code);\r\n    }\r\n    callback(err, code);\r\n  });\r\n};\r\n\r\nStateManager.prototype.queueRawTransaction = function(rawTx, callback) {\r\n  var data = Buffer.from(utils.stripHexPrefix(rawTx), \"hex\");\r\n\r\n  var tx = new FakeTransaction(data);\r\n  var txParams = {\r\n    from: tx.from.toString(\"hex\"),\r\n    to: tx.to.toString(\"hex\"),\r\n    gas: tx.gasLimit.toString(\"hex\"),\r\n    gasPrice: tx.gasPrice.toString(\"hex\"),\r\n    value: tx.value.toString(\"hex\"),\r\n    data: tx.data.toString(\"hex\"),\r\n    nonce: tx.nonce.toString(\"hex\")\r\n  };\r\n\r\n  if (tx.v && tx.v.length > 0 && tx.r && tx.r.length > 0 && tx.s && tx.s.length > 0) {\r\n    txParams.v = tx.v.toString(\"hex\");\r\n    txParams.r = tx.r.toString(\"hex\");\r\n    txParams.s = tx.s.toString(\"hex\");\r\n  }\r\n\r\n  this.queueTransaction(\"eth_sendRawTransaction\", txParams, null, callback);\r\n};\r\n\r\nStateManager.prototype.queueStorage = function(address, position, block, callback) {\r\n  this.action_queue.push({\r\n    method: \"eth_getStorageAt\",\r\n    address: utils.addHexPrefix(address),\r\n    position: utils.addHexPrefix(position),\r\n    block: block,\r\n    callback: callback\r\n  });\r\n\r\n  // We know there's work, so get started.\r\n  this.processNextAction();\r\n};\r\n\r\nStateManager.prototype.queueTransaction = function(method, txParams, blockNumber, callback) {\r\n  if (txParams.from == null) {\r\n    callback(new TXRejectedError(\"from not found; is required\"));\r\n    return;\r\n  }\r\n\r\n  // use toLowerCase() to properly handle from addresses meant to be validated.\r\n  txParams.from = utils.addHexPrefix(txParams.from).toLowerCase();\r\n\r\n  if (\r\n    method === \"eth_sendTransaction\" &&\r\n    this.accounts[txParams.from] == null &&\r\n    this.unlocked_accounts[txParams.from] == null\r\n  ) {\r\n    return callback(new TXRejectedError(\"sender account not recognized\"));\r\n  }\r\n\r\n  if (method === \"eth_sendTransaction\" && this.unlocked_accounts[txParams.from] == null) {\r\n    return callback(new TXRejectedError(\"signer account is locked\"));\r\n  }\r\n\r\n  var rawTx = {\r\n    gasPrice: \"0x1\",\r\n    gasLimit: to.hex(this.blockchain.defaultTransactionGasLimit),\r\n    value: \"0x0\"\r\n  };\r\n\r\n  if (txParams.gas != null) {\r\n    rawTx.gasLimit = utils.addHexPrefix(txParams.gas);\r\n  }\r\n\r\n  if (txParams.gasPrice != null) {\r\n    rawTx.gasPrice = utils.addHexPrefix(txParams.gasPrice);\r\n  } else {\r\n    rawTx.gasPrice = this.gasPriceVal;\r\n  }\r\n\r\n  if (txParams.to != null) {\r\n    rawTx.to = utils.addHexPrefix(txParams.to);\r\n  }\r\n\r\n  if (txParams.value != null) {\r\n    rawTx.value = utils.addHexPrefix(txParams.value);\r\n  }\r\n\r\n  if (txParams.data != null) {\r\n    rawTx.data = utils.addHexPrefix(txParams.data);\r\n  }\r\n\r\n  if (txParams.nonce != null) {\r\n    rawTx.nonce = utils.addHexPrefix(txParams.nonce);\r\n  }\r\n\r\n  if (txParams.v != null && txParams.s != null && txParams.v != null) {\r\n    rawTx.v = utils.addHexPrefix(txParams.v);\r\n    rawTx.r = utils.addHexPrefix(txParams.r);\r\n    rawTx.s = utils.addHexPrefix(txParams.s);\r\n  }\r\n\r\n  // some tools use a null or empty `to` field when doing contract deployments\r\n  if (rawTx.to === \"0x0\" || rawTx.to === \"\") {\r\n    delete rawTx.to;\r\n  }\r\n\r\n  // Error checks\r\n  if (rawTx.to && typeof rawTx.to !== \"string\") {\r\n    return callback(new TXRejectedError(\"Invalid to address\"));\r\n  }\r\n\r\n  // If the transaction has a higher gas limit than the block gas limit, error.\r\n  if (to.number(rawTx.gasLimit) > to.number(this.blockchain.blockGasLimit)) {\r\n    return callback(new TXRejectedError(\"Exceeds block gas limit\"));\r\n  }\r\n\r\n  // Get the nonce for this address, taking account any transactions already queued.\r\n  var self = this;\r\n  var address = utils.toBuffer(txParams.from);\r\n\r\n  // we don't call createFakeTransactionWithCorrectNonce here because then we'd need to worry\r\n  // about nonce calculation for the items pending in the action_queue.\r\n  // Instead, we simply create a `FakeTransaction` and bail on validation\r\n  // errors so that we fail fast when we have bad tx input\r\n\r\n  try {\r\n    let tx = new FakeTransaction(rawTx);\r\n    tx.from = address;\r\n  } catch (err) {\r\n    return callback(err);\r\n  }\r\n\r\n  self.action_queue.push({\r\n    method: method,\r\n    from: txParams.from,\r\n    tx: rawTx,\r\n    callback: callback,\r\n    blockNumber: blockNumber\r\n  });\r\n\r\n  // We know there's work, so get started.\r\n  self.processNextAction();\r\n};\r\n\r\nStateManager.prototype.queueTransactionTrace = function(txHash, params, callback) {\r\n  this.action_queue.push({\r\n    method: \"debug_traceTransaction\",\r\n    hash: to.hex(txHash),\r\n    params: params,\r\n    callback: callback\r\n  });\r\n\r\n  // We know there's work, so get started.\r\n  this.processNextAction();\r\n};\r\n\r\nStateManager.prototype.processNextAction = function(override) {\r\n  var self = this;\r\n\r\n  if (override !== true) {\r\n    if (this.action_processing === true || this.action_queue.length === 0) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  var queued = this.action_queue.shift();\r\n\r\n  // Set the flag that we're currently processing something.\r\n  this.action_processing = true;\r\n\r\n  var intermediary = function(err, result) {\r\n    queued.callback(err, result);\r\n\r\n    if (self.action_queue.length > 0) {\r\n      self.processNextAction(true);\r\n    } else {\r\n      self.action_processing = false;\r\n    }\r\n  };\r\n\r\n  if (typeof queued.method === \"function\") {\r\n    var result = queued.method();\r\n    return intermediary(null, result);\r\n  } else if (queued.method === \"eth_getStorageAt\") {\r\n    this.blockchain.getStorage(queued.address, queued.position, queued.block, function(err, result) {\r\n      if (err) {\r\n        return intermediary(err);\r\n      }\r\n\r\n      if (result) {\r\n        result = utils.rlp.decode(result);\r\n      }\r\n\r\n      result = to.hex(result || 0);\r\n      intermediary(null, result);\r\n    });\r\n  } else if (queued.method === \"debug_traceTransaction\") {\r\n    this.blockchain.processTransactionTrace(queued.hash, queued.params, intermediary);\r\n  } else if (queued.method === \"eth_sendTransaction\" || queued.method === \"eth_sendRawTransaction\") {\r\n    this.processTransaction(queued.from, queued.tx, intermediary);\r\n  } else if (queued.method === \"eth_call\") {\r\n    this.processCall(queued.from, queued.tx, queued.blockNumber, intermediary);\r\n  } else if (queued.method === \"eth_estimateGas\") {\r\n    this.processGasEstimate(queued.from, queued.tx, queued.blockNumber, intermediary);\r\n  }\r\n};\r\n\r\nStateManager.prototype.sign = function(address, dataToSign) {\r\n  var account = this.accounts[to.hex(address).toLowerCase()];\r\n\r\n  if (!account) {\r\n    throw new Error(\"cannot sign data; no private key\");\r\n  }\r\n\r\n  var secretKey = account.secretKey;\r\n  var msg = Buffer.from(dataToSign.replace(\"0x\", \"\"), \"hex\");\r\n  var msgHash = utils.hashPersonalMessage(msg);\r\n  var sgn = utils.ecsign(msgHash, Buffer.from(secretKey));\r\n  return utils.toRpcSig(sgn.v, sgn.r, sgn.s);\r\n};\r\n\r\nStateManager.prototype.signTypedData = function(address, typedDataToSign) {\r\n  var account = this.accounts[to.hex(address).toLowerCase()];\r\n  if (!account) {\r\n    throw new Error(\"cannot sign data; no private key\");\r\n  }\r\n\r\n  if (!typedDataToSign.types) {\r\n    throw new Error(\"cannot sign data; types missing\");\r\n  }\r\n\r\n  if (!typedDataToSign.types.EIP712Domain) {\r\n    throw new Error(\"cannot sign data; EIP712Domain definition missing\");\r\n  }\r\n\r\n  if (!typedDataToSign.domain) {\r\n    throw new Error(\"cannot sign data; domain missing\");\r\n  }\r\n\r\n  if (!typedDataToSign.primaryType) {\r\n    throw new Error(\"cannot sign data; primaryType missing\");\r\n  }\r\n\r\n  if (!typedDataToSign.message) {\r\n    throw new Error(\"cannot sign data; message missing\");\r\n  }\r\n\r\n  return sigUtil.signTypedData(account.secretKey, { data: typedDataToSign });\r\n};\r\n\r\nStateManager.prototype.printTransactionReceipt = function(txHash, error, callback) {\r\n  var self = this;\r\n\r\n  self.blockchain.getTransactionReceipt(txHash, function(err, receipt) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.blockchain.latestBlock(function(err, block) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      receipt = receipt.toJSON();\r\n\r\n      self.logger.log(\"\");\r\n      self.logger.log(\"  Transaction: \" + txHash);\r\n\r\n      if (receipt.contractAddress != null) {\r\n        self.logger.log(\"  Contract created: \" + receipt.contractAddress);\r\n      }\r\n\r\n      self.logger.log(\"  Gas usage: \" + parseInt(receipt.gasUsed, 16));\r\n      self.logger.log(\"  Block Number: \" + parseInt(receipt.blockNumber, 16));\r\n      self.logger.log(\"  Block Time: \" + new Date(to.number(block.header.timestamp) * 1000).toString());\r\n\r\n      if (error) {\r\n        self.logger.log(\"  Runtime Error: \" + error.error);\r\n        if (error.reason) {\r\n          self.logger.log(\"  Revert reason: \" + error.reason);\r\n        }\r\n      }\r\n\r\n      self.logger.log(\"\");\r\n\r\n      callback(null, txHash);\r\n    });\r\n  });\r\n};\r\n\r\nStateManager.prototype.processBlock = function(timestamp, callback) {\r\n  var self = this;\r\n\r\n  if (typeof timestamp === \"function\") {\r\n    callback = timestamp;\r\n    timestamp = null;\r\n  }\r\n\r\n  self.blockchain.processNextBlock(timestamp, function(runtimeError, transactions, vmOutput) {\r\n    if (runtimeError && runtimeError instanceof RuntimeError === false) {\r\n      // This is bad. Get out.\r\n      return callback(runtimeError, transactions, vmOutput);\r\n    }\r\n\r\n    // TODO: Can we refactor printTransactionReceipt so it's synchronous?\r\n    // We technically have the raw vm receipts (though they're not full receipts here...).\r\n    async.eachSeries(\r\n      transactions,\r\n      function(tx, finishedPrinting) {\r\n        var hash = to.hex(tx.hash());\r\n        var error = runtimeError == null ? { results: {} } : runtimeError;\r\n        self.printTransactionReceipt(hash, error.results[hash], finishedPrinting);\r\n      },\r\n      callback(runtimeError, transactions, vmOutput)\r\n    );\r\n  });\r\n};\r\n\r\nStateManager.prototype.processBlocks = function(totalBlocks, callback) {\r\n  var self = this;\r\n\r\n  if (typeof totalBlocks === \"function\") {\r\n    callback = totalBlocks;\r\n    totalBlocks = null;\r\n  }\r\n\r\n  // Note: VM errors (errors that the VM directly returns) trump all runtime errors.\r\n  var runtimeError = null;\r\n  var amountProcessed = 0;\r\n\r\n  async.whilst(\r\n    function() {\r\n      var shouldContinue;\r\n\r\n      if (totalBlocks == null) {\r\n        shouldContinue = self.blockchain.pending_transactions.length > 0;\r\n      } else {\r\n        shouldContinue = amountProcessed < totalBlocks;\r\n      }\r\n\r\n      return shouldContinue;\r\n    },\r\n    function(done) {\r\n      self.processBlock(function(err, transactions, vmOutput) {\r\n        amountProcessed += 1;\r\n\r\n        if (err) {\r\n          if (err instanceof RuntimeError === false) {\r\n            // This is bad. Get out.\r\n            return done(err);\r\n          }\r\n\r\n          // We must have a RuntimeError. Merge results if we've found\r\n          // other runtime errors during this execution.\r\n          if (runtimeError == null) {\r\n            runtimeError = err;\r\n          } else {\r\n            runtimeError.combine(err);\r\n          }\r\n        }\r\n\r\n        // Note we don't quit on runtime errors. We keep processing transactions.\r\n        done();\r\n      });\r\n    },\r\n    function(err) {\r\n      // Remember: vm errors trump runtime errors\r\n      callback(err || runtimeError);\r\n    }\r\n  );\r\n};\r\n\r\nStateManager.prototype.processCall = function(from, rawTx, blockNumber, callback) {\r\n  var self = this;\r\n\r\n  self.createFakeTransactionWithCorrectNonce(rawTx, from, function(err, tx) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.blockchain.processCall(tx, blockNumber, function(err, results) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      var result = \"0x\";\r\n      if (!results.error && results.vm.return) {\r\n        result = to.hex(results.vm.return);\r\n      } else if (results.error) {\r\n        self.logger.log(`Error processing call: ${results.error}`);\r\n      }\r\n\r\n      return callback(null, result);\r\n    });\r\n  });\r\n};\r\n\r\nStateManager.prototype.processGasEstimate = function(from, rawTx, blockNumber, callback) {\r\n  var self = this;\r\n\r\n  self.createFakeTransactionWithCorrectNonce(rawTx, from, function(err, tx) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.blockchain.processCall(tx, blockNumber, function(err, results) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      var result = \"0x\";\r\n      if (!results.error) {\r\n        result = results.gasRefund ? to.hex(results.gasUsed.add(results.gasRefund)) : to.hex(results.gasUsed);\r\n      } else {\r\n        self.logger.log(`Error calculating gas estimate: ${results.error}`);\r\n      }\r\n      return callback(null, result);\r\n    });\r\n  });\r\n};\r\n\r\nStateManager.prototype.processTransaction = function(from, rawTx, callback) {\r\n  var self = this;\r\n\r\n  self.createFakeTransactionWithCorrectNonce(rawTx, from, function(err, tx) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.blockchain.queueTransaction(tx);\r\n\r\n    var txHash = to.hex(tx.hash());\r\n\r\n    // If we're not currently mining or we're mining on an interval,\r\n    // only queue the transaction, don't process it.\r\n    if (self.is_mining === false || self.is_mining_on_interval) {\r\n      return callback(null, txHash);\r\n    }\r\n\r\n    self.processBlocks(function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      callback(null, txHash);\r\n    });\r\n  });\r\n};\r\n\r\nStateManager.prototype.getTransactionReceipt = function(hash, callback) {\r\n  this.blockchain.getTransactionReceipt(hash, function(err, receipt) {\r\n    if (err && err.notFound) {\r\n      // Return null if the receipt's not found.\r\n      return callback(null, null);\r\n    }\r\n    callback(err, receipt);\r\n  });\r\n};\r\n\r\nStateManager.prototype.getBlock = function(hashOrNumber, callback) {\r\n  this.blockchain.getBlock(hashOrNumber, callback);\r\n};\r\n\r\nStateManager.prototype.getLogs = function(filter, callback) {\r\n  var self = this;\r\n\r\n  // filter.address may be a single address or an array\r\n  // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getlogs\r\n  var expectedAddress = filter.address && (Array.isArray(filter.address) ? filter.address : [filter.address]);\r\n  expectedAddress =\r\n    expectedAddress &&\r\n    expectedAddress.map(function(a) {\r\n      return a.toLowerCase();\r\n    });\r\n  var expectedTopics = filter.topics || [];\r\n\r\n  async.parallel(\r\n    {\r\n      fromBlock: this.blockchain.getEffectiveBlockNumber.bind(this.blockchain, filter.fromBlock || \"latest\"),\r\n      toBlock: this.blockchain.getEffectiveBlockNumber.bind(this.blockchain, filter.toBlock || \"latest\"),\r\n      latestBlock: this.blockchain.getEffectiveBlockNumber.bind(this.blockchain, \"latest\")\r\n    },\r\n    function(err, results) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      var fromBlock = results.fromBlock;\r\n      var toBlock = results.toBlock;\r\n      var latestBlock = results.latestBlock;\r\n\r\n      if (toBlock > latestBlock) {\r\n        toBlock = latestBlock;\r\n      }\r\n\r\n      var logs = [];\r\n      var current = fromBlock;\r\n\r\n      async.whilst(\r\n        function() {\r\n          return current <= toBlock;\r\n        },\r\n        function(finished) {\r\n          self.blockchain.getBlockLogs(current, function(err, blockLogs) {\r\n            if (err) {\r\n              return finished(err);\r\n            }\r\n\r\n            // Filter logs that match the address\r\n            var filtered = !expectedAddress\r\n              ? blockLogs\r\n              : blockLogs.filter(function(log) {\r\n                return expectedAddress.indexOf(log.address.toLowerCase()) > -1;\r\n              });\r\n\r\n            // Now filter based on topics.\r\n            filtered = filtered.filter(function(log) {\r\n              var keep = true;\r\n              for (var i = 0; i < expectedTopics.length; i++) {\r\n                var expectedTopic = expectedTopics[i];\r\n                var logTopic = log.topics[i];\r\n                if (expectedTopic == null) {\r\n                  continue;\r\n                }\r\n                var isMatch = Array.isArray(expectedTopic)\r\n                  ? expectedTopic.includes(logTopic)\r\n                  : expectedTopic === logTopic;\r\n                if (i >= log.topics.length || !isMatch) {\r\n                  keep = false;\r\n                  break;\r\n                }\r\n              }\r\n              return keep;\r\n            });\r\n\r\n            logs.push.apply(logs, filtered);\r\n\r\n            current += 1;\r\n            finished();\r\n          });\r\n        },\r\n        function(err) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          logs = logs.map(function(log) {\r\n            return log.toJSON();\r\n          });\r\n\r\n          callback(err, logs);\r\n        }\r\n      );\r\n    }\r\n  );\r\n};\r\n\r\n// Note: Snapshots have 1-based ids.\r\nStateManager.prototype.snapshot = function(callback) {\r\n  var self = this;\r\n\r\n  this.blockchain.getHeight(function(err, blockNumber) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.snapshots.push({\r\n      blockNumber: blockNumber,\r\n      timeAdjustment: self.blockchain.timeAdjustment\r\n    });\r\n\r\n    self.logger.log(\"Saved snapshot #\" + self.snapshots.length);\r\n\r\n    callback(null, to.hex(self.snapshots.length));\r\n  });\r\n};\r\n\r\nStateManager.prototype.revert = function(snapshotId, callback) {\r\n  var self = this;\r\n\r\n  // Convert from hex.\r\n  snapshotId = utils.bufferToInt(snapshotId);\r\n\r\n  this.logger.log(\"Reverting to snapshot #\" + snapshotId);\r\n\r\n  if (snapshotId > this.snapshots.length) {\r\n    return false;\r\n  }\r\n\r\n  // Convert to zero based.\r\n  snapshotId = snapshotId - 1;\r\n  var timeAdjustment = this.snapshots[snapshotId].timeAdjustment;\r\n\r\n  // Loop through each snapshot with a higher id than the current one.\r\n  async.whilst(\r\n    function() {\r\n      return self.snapshots.length > snapshotId;\r\n    },\r\n    function(nextSnapshot) {\r\n      var snapshot = self.snapshots.pop();\r\n\r\n      // For each snapshot, asynchronously pop off the blocks it represents.\r\n      async.during(\r\n        function(doneWithTest) {\r\n          self.blockchain.getHeight(function(err, blockNumber) {\r\n            if (err) {\r\n              return doneWithTest(err);\r\n            }\r\n\r\n            doneWithTest(null, blockNumber > snapshot.blockNumber);\r\n          });\r\n        },\r\n        function(nextBlock) {\r\n          self.blockchain.popBlock(function(err) {\r\n            if (err) {\r\n              return nextBlock(err);\r\n            }\r\n            nextBlock();\r\n          });\r\n        },\r\n        nextSnapshot\r\n      );\r\n    },\r\n    function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      // Pending transactions are removed when you revert.\r\n      self.blockchain.clearPendingTransactions();\r\n      // The time adjustment is restored to its prior state\r\n      self.blockchain.timeAdjustment = timeAdjustment;\r\n\r\n      callback(null, true);\r\n    }\r\n  );\r\n};\r\n\r\nStateManager.prototype.hasContractCode = function(address, callback) {\r\n  this.vm.stateManager.getContractCode(address, function(err, result) {\r\n    if (err != null) {\r\n      callback(err, false);\r\n    } else {\r\n      callback(null, true);\r\n    }\r\n  });\r\n};\r\n\r\nStateManager.prototype.startMining = function(callback) {\r\n  this.is_mining = true;\r\n\r\n  if (this.is_mining_on_interval) {\r\n    this.mineOnInterval();\r\n    callback();\r\n  } else {\r\n    this.processBlocks(callback);\r\n  }\r\n};\r\n\r\nStateManager.prototype.stopMining = function(callback) {\r\n  this.is_mining = false;\r\n  clearTimeout(this.mining_interval_timeout);\r\n  this.mining_interval_timeout = null;\r\n  callback();\r\n};\r\n\r\nStateManager.prototype.isUnlocked = function(address) {\r\n  return this.unlocked_accounts[address.toLowerCase()] != null;\r\n};\r\n\r\nStateManager.prototype.createFakeTransactionWithCorrectNonce = function(rawTx, from, callback) {\r\n  const self = this;\r\n  self.blockchain.getQueuedNonce(from, (err, expectedNonce) => {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var tx = new FakeTransaction(rawTx);\r\n    tx.from = from;\r\n\r\n    // If the user specified a nonce, use that instead.\r\n    if (rawTx.nonce == null) {\r\n      // account for transactions waiting in the tx queue\r\n      tx.nonce = to.hex(expectedNonce);\r\n    } else {\r\n      if (!tx.nonce.equals(expectedNonce)) {\r\n        const expected = to.number(expectedNonce);\r\n        const actual = to.number(tx.nonce);\r\n        return callback(\r\n          new TXRejectedError(\r\n            `the tx doesn't have the correct nonce. account has nonce of: ${expected} tx has nonce of: ${actual}`\r\n          )\r\n        );\r\n      }\r\n    }\r\n    callback(null, tx);\r\n  });\r\n};\r\nmodule.exports = StateManager;\r\n","module.exports = require(\"base64-js\");","module.exports = require(\"ieee754\");","module.exports = require(\"isarray\");","'use strict';\n\nvar HDKey = require('hdkey');\nvar Wallet = require('./index.js');\n\nfunction EthereumHDKey() {}\n\n/*\n * Horrible wrapping.\n */\nfunction fromHDKey(hdkey) {\n  var ret = new EthereumHDKey();\n  ret._hdkey = hdkey;\n  return ret;\n}\n\nEthereumHDKey.fromMasterSeed = function (seedBuffer) {\n  return fromHDKey(HDKey.fromMasterSeed(seedBuffer));\n};\n\nEthereumHDKey.fromExtendedKey = function (base58key) {\n  return fromHDKey(HDKey.fromExtendedKey(base58key));\n};\n\nEthereumHDKey.prototype.privateExtendedKey = function () {\n  if (!this._hdkey.privateExtendedKey) {\n    throw new Error('This is a public key only wallet');\n  }\n  return this._hdkey.privateExtendedKey;\n};\n\nEthereumHDKey.prototype.publicExtendedKey = function () {\n  return this._hdkey.publicExtendedKey;\n};\n\nEthereumHDKey.prototype.derivePath = function (path) {\n  return fromHDKey(this._hdkey.derive(path));\n};\n\nEthereumHDKey.prototype.deriveChild = function (index) {\n  return fromHDKey(this._hdkey.deriveChild(index));\n};\n\nEthereumHDKey.prototype.getWallet = function () {\n  if (this._hdkey._privateKey) {\n    return Wallet.fromPrivateKey(this._hdkey._privateKey);\n  } else {\n    return Wallet.fromPublicKey(this._hdkey._publicKey, true);\n  }\n};\n\nmodule.exports = EthereumHDKey;","var LevelUpArrayAdapter = require(\"./database/leveluparrayadapter\");\r\nvar LevelUpObjectAdapter = require(\"./database/levelupobjectadapter\");\r\nvar levelup = require(\"levelup\");\r\nvar encode = require(\"encoding-down\");\r\nvar filedown = require(\"./database/filedown\");\r\nvar cachedown = require(\"cachedown\");\r\nvar txserializer = require(\"./database/txserializer\");\r\nvar blockserializer = require(\"./database/blockserializer\");\r\nvar bufferserializer = require(\"./database/bufferserializer\");\r\nvar BlockLogsSerializer = require(\"./database/blocklogsserializer\");\r\nvar ReceiptSerializer = require(\"./database/receiptserializer\");\r\nvar tmp = require(\"tmp\");\r\n\r\nfunction Database(options) {\r\n  this.options = options;\r\n}\r\n\r\nDatabase.prototype.initialize = function(callback) {\r\n  var self = this;\r\n\r\n  function getDir(cb) {\r\n    if (self.options.db_path) {\r\n      cb(null, self.options.db_path);\r\n    } else {\r\n      tmp.dir(cb);\r\n    }\r\n  }\r\n\r\n  getDir(function(err, directory) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    levelup(\r\n      self.options.db || encode(cachedown(directory, filedown).maxSize(100)),\r\n      { valueEncoding: \"json\" },\r\n      finishInitializing\r\n    );\r\n  });\r\n\r\n  function finishInitializing(err, db) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.db = db;\r\n\r\n    // Blocks, keyed by array index (not necessarily by block number) (0-based)\r\n    self.blocks = new LevelUpArrayAdapter(\"blocks\", self.db, blockserializer);\r\n\r\n    // Logs triggered in each block, keyed by block id (ids in the blocks array; not necessarily block number) (0-based)\r\n    self.blockLogs = new LevelUpArrayAdapter(\"blockLogs\", self.db, new BlockLogsSerializer(self));\r\n\r\n    // Block hashes -> block ids (ids in the blocks array; not necessarily block number) for quick lookup\r\n    self.blockHashes = new LevelUpObjectAdapter(\"blockHashes\", self.db);\r\n\r\n    // Transaction hash -> transaction objects\r\n    self.transactions = new LevelUpObjectAdapter(\"transactions\", self.db, txserializer);\r\n\r\n    // Transaction hash -> transaction receipts\r\n    self.transactionReceipts = new LevelUpObjectAdapter(\"transactionReceipts\", self.db, new ReceiptSerializer(self));\r\n\r\n    self.trie_db = new LevelUpObjectAdapter(\"trie_db\", self.db, bufferserializer, bufferserializer);\r\n\r\n    callback();\r\n  }\r\n};\r\n\r\nDatabase.prototype.close = function(callback) {\r\n  callback();\r\n};\r\n\r\nmodule.exports = Database;\r\n","var Sublevel = require(\"level-sublevel\");\r\n\r\n// Level up adapter that looks like an array. Doesn't support inserts.\r\n\r\nfunction LevelUpArrayAdapter(name, db, serializer) {\r\n  this.db = Sublevel(db);\r\n  this.db = this.db.sublevel(name);\r\n  this.name = name;\r\n  this.serializer = serializer || {\r\n    encode: function(val, callback) {\r\n      callback(null, val);\r\n    },\r\n    decode: function(val, callback) {\r\n      callback(null, val);\r\n    }\r\n  };\r\n}\r\n\r\nLevelUpArrayAdapter.prototype.length = function(callback) {\r\n  this.db.get(\"length\", function(err, result) {\r\n    if (err) {\r\n      if (err.notFound) {\r\n        return callback(null, 0);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n\r\n    callback(null, result);\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype._get = function(key, callback) {\r\n  var self = this;\r\n  this.db.get(key, function(err, val) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    self.serializer.decode(val, callback);\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype._put = function(key, value, callback) {\r\n  var self = this;\r\n  this.serializer.encode(value, function(err, encoded) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    self.db.put(key, encoded, callback);\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype.get = function(index, callback) {\r\n  var self = this;\r\n\r\n  this.length(function(err, length) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    if (index >= length) {\r\n      return callback(\r\n        new Error(\r\n          \"LevelUpArrayAdapter named '\" + self.name + \"' index out of range: index \" + index + \"; length: \" + length\r\n        )\r\n      );\r\n    }\r\n    self._get(index, callback);\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype.push = function(val, callback) {\r\n  var self = this;\r\n  this.length(function(err, length) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    // TODO: Do this in atomic batch.\r\n    self._put(length + \"\", val, function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      self.db.put(\"length\", length + 1, callback);\r\n    });\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype.pop = function(callback) {\r\n  var self = this;\r\n\r\n  this.length(function(err, length) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    var newLength = length - 1;\r\n\r\n    // TODO: Do this in atomic batch.\r\n    self._get(newLength + \"\", function(err, val) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      self.db.del(newLength + \"\", function(err) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        self.db.put(\"length\", newLength, function(err) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          callback(null, val);\r\n        });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype.last = function(callback) {\r\n  var self = this;\r\n  this.length(function(err, length) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    if (length === 0) {\r\n      return callback(null, null);\r\n    }\r\n\r\n    self._get(length - 1 + \"\", callback);\r\n  });\r\n};\r\n\r\nLevelUpArrayAdapter.prototype.first = function(callback) {\r\n  this._get(\"0\", callback);\r\n};\r\n\r\nmodule.exports = LevelUpArrayAdapter;\r\n","var Sublevel = require(\"level-sublevel\");\r\nvar async = require(\"async\");\r\n\r\nfunction LevelUpObjectAdapter(name, db, valueserializer, keyserializer, options) {\r\n  this.db = Sublevel(db, options);\r\n  this.db = this.db.sublevel(name);\r\n  this.name = name;\r\n  this.valueserializer = valueserializer || {\r\n    encode: function(val, callback) {\r\n      callback(null, val);\r\n    },\r\n    decode: function(val, callback) {\r\n      callback(null, val);\r\n    }\r\n  };\r\n  this.keyserializer = keyserializer || {\r\n    encode: function(val, callback) {\r\n      callback(null, val);\r\n    },\r\n    decode: function(val, callback) {\r\n      callback(null, val);\r\n    }\r\n  };\r\n}\r\n\r\nLevelUpObjectAdapter.prototype.get = function(key, options, callback) {\r\n  var self = this;\r\n\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n\r\n  this.keyserializer.encode(key, function(err, encodedKey) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.db.get(encodedKey, function(err, val) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      self.valueserializer.decode(val, function(err, decodedValue) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        callback(null, decodedValue);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nLevelUpObjectAdapter.prototype.put = function(key, value, options, callback) {\r\n  var self = this;\r\n\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  }\r\n\r\n  this.keyserializer.encode(key, function(err, encodedKey) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.valueserializer.encode(value, function(err, encoded) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      self.db.put(encodedKey, encoded, callback);\r\n    });\r\n  });\r\n};\r\n\r\nLevelUpObjectAdapter.prototype.set = LevelUpObjectAdapter.prototype.put;\r\n\r\nLevelUpObjectAdapter.prototype.del = function(key, callback) {\r\n  var self = this;\r\n\r\n  this.keyserializer.encode(key, function(err, encodedKey) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.db.del(encodedKey, callback);\r\n  });\r\n};\r\n\r\nLevelUpObjectAdapter.prototype.batch = function(array, options, callback) {\r\n  var self = this;\r\n\r\n  async.each(\r\n    array,\r\n    function(item, finished) {\r\n      if (item.type === \"put\") {\r\n        self.put(item.key, item.value, options, finished);\r\n      } else if (item.type === \"del\") {\r\n        self.del(item.key, finished);\r\n      } else {\r\n        finished(new Error(\"Unknown batch type\", item.type));\r\n      }\r\n    },\r\n    function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      callback();\r\n    }\r\n  );\r\n};\r\n\r\nLevelUpObjectAdapter.prototype.isOpen = function() {\r\n  return true;\r\n};\r\n\r\nmodule.exports = LevelUpObjectAdapter;\r\n","var util = require(\"util\");\r\nvar AbstractLevelDOWN = require(\"abstract-leveldown\").AbstractLevelDOWN;\r\nvar async = require(\"async\");\r\nvar fs = require(\"fs\");\r\nvar path = require(\"path\");\r\n\r\nutil.inherits(FileDown, AbstractLevelDOWN);\r\n\r\nfunction FileDown(location) {\r\n  this.location = location;\r\n  AbstractLevelDOWN.call(this, location);\r\n}\r\n\r\nFileDown.prototype._open = function(options, callback) {\r\n  var self = this;\r\n  callback(null, self);\r\n};\r\n\r\nFileDown.prototype._put = function(key, value, options, callback) {\r\n  fs.writeFile(path.join(this.location, key), value, \"utf8\", callback);\r\n};\r\n\r\nFileDown.prototype._get = function(key, options, callback) {\r\n  fs.readFile(path.join(this.location, key), \"utf8\", function(err, data) {\r\n    if (err) {\r\n      return callback(new Error(\"NotFound\"));\r\n    }\r\n    callback(null, data);\r\n  });\r\n};\r\n\r\nFileDown.prototype._del = function(key, options, callback) {\r\n  fs.unlink(path.join(this.location, key), function(err) {\r\n    // Ignore when we try to delete a file that doesn't exist.\r\n    // I'm not sure why this happens. Worth looking into.\r\n    if (err) {\r\n      if (err.message.indexOf(\"ENOENT\") >= 0) {\r\n        return callback();\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n    callback();\r\n  });\r\n};\r\n\r\nFileDown.prototype._batch = function(array, options, callback) {\r\n  var self = this;\r\n  async.each(\r\n    array,\r\n    function(item, finished) {\r\n      if (item.type === \"put\") {\r\n        self.put(item.key, item.value, options, finished);\r\n      } else if (item.type === \"del\") {\r\n        self.del(item.key, options, finished);\r\n      } else {\r\n        finished(new Error(\"Unknown batch type\", item.type));\r\n      }\r\n    },\r\n    function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      callback();\r\n    }\r\n  );\r\n};\r\n\r\nmodule.exports = function(location) {\r\n  return new FileDown(location);\r\n};\r\n","var txserializer = require(\"./txserializer\");\r\nvar async = require(\"async\");\r\nvar Block = require(\"ethereumjs-block\");\r\n\r\nmodule.exports = {\r\n  encode: function(block, done) {\r\n    var encoded = block.toJSON(true);\r\n\r\n    async.map(\r\n      block.transactions,\r\n      function(tx, finished) {\r\n        txserializer.encode(tx, finished);\r\n      },\r\n      function(err, transactions) {\r\n        if (err) {\r\n          return done(err);\r\n        }\r\n        encoded.transactions = transactions;\r\n        done(null, encoded);\r\n      }\r\n    );\r\n  },\r\n  decode: function(json, done) {\r\n    var transactions = json.transactions;\r\n    json.transactions = [];\r\n\r\n    var block = new Block(json);\r\n\r\n    async.eachSeries(\r\n      transactions,\r\n      function(txJson, finished) {\r\n        txserializer.decode(txJson, function(err, tx) {\r\n          if (err) {\r\n            return finished(err);\r\n          }\r\n          block.transactions.push(tx);\r\n          finished();\r\n        });\r\n      },\r\n      function(err) {\r\n        if (err) {\r\n          return done(err);\r\n        }\r\n\r\n        done(null, block);\r\n      }\r\n    );\r\n  }\r\n};\r\n","var utils = require(\"ethereumjs-util\");\r\nvar to = require(\"../utils/to\");\r\n\r\nmodule.exports = {\r\n  encode: function(val, cb) {\r\n    var hex = to.hex(val);\r\n    cb(null, hex);\r\n  },\r\n  decode: function(json, cb) {\r\n    cb(null, utils.toBuffer(json));\r\n  }\r\n};\r\n","var Log = require(\"../utils/log\");\r\nvar async = require(\"async\");\r\n\r\nfunction BlockLogsSerializer(database) {\r\n  this.database = database;\r\n}\r\n\r\nBlockLogsSerializer.prototype.encode = function(logs, done) {\r\n  logs = logs.map(function(log) {\r\n    return log.toJSON();\r\n  });\r\n\r\n  done(null, logs);\r\n};\r\n\r\nBlockLogsSerializer.prototype.decode = function(json, done) {\r\n  var self = this;\r\n\r\n  if (json.length === 0) {\r\n    return done(null, []);\r\n  }\r\n\r\n  this.database.blockHashes.get(json[0].blockHash, function(err, blockIndex) {\r\n    if (err) {\r\n      return done(err);\r\n    }\r\n\r\n    self.database.blocks.get(blockIndex, function(err, block) {\r\n      if (err) {\r\n        return done(err);\r\n      }\r\n\r\n      async.map(\r\n        json,\r\n        function(log, finished) {\r\n          finished(\r\n            null,\r\n            new Log({\r\n              block: block,\r\n              logIndex: log.logIndex,\r\n              transactionIndex: log.transactionIndex,\r\n              transactionHash: log.transactionHash,\r\n              address: log.address,\r\n              data: log.data,\r\n              topics: log.topics,\r\n              type: log.type\r\n            })\r\n          );\r\n        },\r\n        function(err, logs) {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done(null, logs);\r\n        }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = BlockLogsSerializer;\r\n","var Receipt = require(\"../utils/receipt\");\r\nvar async = require(\"async\");\r\n\r\nfunction ReceiptSerializer(database) {\r\n  this.database = database;\r\n}\r\n\r\nReceiptSerializer.prototype.encode = function(receipt, done) {\r\n  done(null, receipt.toJSON());\r\n};\r\n\r\nReceiptSerializer.prototype.decode = function(json, done) {\r\n  var self = this;\r\n\r\n  this.database.transactions.get(json.transactionHash, function(err, tx) {\r\n    if (err) {\r\n      return done(err);\r\n    }\r\n\r\n    self.database.blockHashes.get(json.blockHash, function(err, blockIndex) {\r\n      if (err) {\r\n        return done(err);\r\n      }\r\n\r\n      async.parallel(\r\n        {\r\n          block: self.database.blocks.get.bind(self.database.blocks, blockIndex),\r\n          logs: self.database.blockLogs.get.bind(self.database.blockLogs, blockIndex)\r\n        },\r\n        function(err, result) {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n\r\n          done(\r\n            null,\r\n            new Receipt(\r\n              tx,\r\n              result.block,\r\n              result.logs,\r\n              json.gasUsed,\r\n              json.cumulativeGasUsed,\r\n              json.contractAddress,\r\n              json.status,\r\n              json.logsBloom\r\n            )\r\n          );\r\n        }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = ReceiptSerializer;\r\n","var BlockchainDouble = require(\"../blockchain_double.js\");\r\nvar Account = require(\"ethereumjs-account\");\r\nvar Block = require(\"ethereumjs-block\");\r\nvar Log = require(\"./log.js\");\r\nvar Receipt = require(\"./receipt.js\");\r\nvar utils = require(\"ethereumjs-util\");\r\nvar ForkedStorageTrie = require(\"./forkedstoragetrie.js\");\r\nvar Web3 = require(\"web3\");\r\nvar to = require(\"./to.js\");\r\nvar async = require(\"async\");\r\nvar txhelper = require(\"./txhelper.js\");\r\nvar BN = require(\"bn.js\");\r\n\r\nvar inherits = require(\"util\").inherits;\r\n\r\ninherits(ForkedBlockchain, BlockchainDouble);\r\n\r\nfunction ForkedBlockchain(options) {\r\n  this.options = options || {};\r\n\r\n  if (options.fork == null) {\r\n    throw new Error(\"ForkedBlockchain must be passed a fork parameter.\");\r\n  }\r\n\r\n  this.fork = options.fork;\r\n  this.forkBlockNumber = options.forkBlockNumber;\r\n  this.forkVersion = null;\r\n\r\n  if (typeof this.fork === \"string\") {\r\n    if (this.fork.indexOf(\"@\") >= 0) {\r\n      var split = this.fork.split(\"@\");\r\n      this.fork = split[0];\r\n      this.forkBlockNumber = parseInt(split[1]);\r\n    }\r\n\r\n    this.fork = new Web3.providers.HttpProvider(this.fork);\r\n  }\r\n\r\n  this.time = options.time;\r\n  this.storageTrieCache = {};\r\n\r\n  BlockchainDouble.call(this, options);\r\n\r\n  this.web3 = new Web3(this.fork);\r\n}\r\n\r\nForkedBlockchain.prototype.initialize = function(accounts, callback) {\r\n  var self = this;\r\n\r\n  this.web3.eth.net.getId(function(err, version) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.forkVersion = version;\r\n\r\n    BlockchainDouble.prototype.initialize.call(self, accounts, function(err) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      // Unfortunately forking requires a bit of monkey patching, but it gets the job done.\r\n      self.vm.stateManager._lookupStorageTrie = self.lookupStorageTrie.bind(self);\r\n      self.vm.stateManager.cache._lookupAccount = self.getAccount.bind(self);\r\n      self.vm.stateManager.getContractCode = self.getCode.bind(self);\r\n      self.vm.stateManager.putContractCode = self.putCode.bind(self);\r\n\r\n      callback();\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.createStateTrie = function(db, root) {\r\n  return new ForkedStorageTrie(db, root, {\r\n    fork: this.fork,\r\n    forkBlockNumber: this.forkBlockNumber,\r\n    blockchain: this\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.createGenesisBlock = function(callback) {\r\n  var self = this;\r\n  var blockNumber = this.forkBlockNumber || \"latest\";\r\n\r\n  self.web3.eth.getBlock(blockNumber, function(err, json) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    // If no start time was passed, set the time to where we forked from.\r\n    // We only want to do this if a block was explicitly passed. If a block\r\n    // number wasn't passed, then we're using the last block and the current time.\r\n    if (!self.time && self.forkBlockNumber) {\r\n      self.time = self.options.time = new Date(to.number(json.timestamp) * 1000);\r\n      self.setTime(self.time);\r\n    }\r\n\r\n    blockNumber = to.hex(json.number);\r\n\r\n    // Update the relevant block numbers\r\n    self.forkBlockNumber = self.options.forkBlockNumber = blockNumber;\r\n    self.stateTrie.forkBlockNumber = blockNumber;\r\n\r\n    self.createBlock(function(err, block) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      block.header.number = utils.toBuffer(to.number(json.number) + 1);\r\n      block.header.parentHash = utils.toBuffer(json.hash);\r\n\r\n      callback(null, block);\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.createForkedStorageTrie = function(address) {\r\n  address = to.hex(address);\r\n\r\n  var trie = new ForkedStorageTrie(this.data.trie_db, null, {\r\n    address: address,\r\n    stateTrie: this.stateTrie,\r\n    blockchain: this,\r\n    fork: this.fork,\r\n    forkBlockNumber: this.forkBlockNumber\r\n  });\r\n\r\n  this.storageTrieCache[address] = trie;\r\n\r\n  return trie;\r\n};\r\n\r\nForkedBlockchain.prototype.lookupStorageTrie = function(address, callback) {\r\n  address = to.hex(address);\r\n\r\n  if (this.storageTrieCache[address] != null) {\r\n    return callback(null, this.storageTrieCache[address]);\r\n  }\r\n\r\n  callback(null, this.createForkedStorageTrie(address));\r\n};\r\n\r\nForkedBlockchain.prototype.isFallbackBlock = function(value, callback) {\r\n  var self = this;\r\n\r\n  self.getEffectiveBlockNumber(value, function(err, number) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    callback(null, number <= to.number(self.forkBlockNumber));\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.isBlockHash = function(value) {\r\n  return typeof value === \"string\" && value.indexOf(\"0x\") === 0 && value.length > 42;\r\n};\r\n\r\nForkedBlockchain.prototype.isFallbackBlockHash = function(value, callback) {\r\n  var self = this;\r\n\r\n  if (!this.isBlockHash(value)) {\r\n    return callback(null, false);\r\n  }\r\n\r\n  self.data.blockHashes.get(value, function(err, blockIndex) {\r\n    if (err) {\r\n      if (err.notFound) {\r\n        // If the block isn't found in our database, then it must be a fallback block.\r\n        return callback(null, true);\r\n      } else {\r\n        return callback(err);\r\n      }\r\n    }\r\n    callback(null, false);\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getFallbackBlock = function(numberOrHash, cb) {\r\n  var self = this;\r\n\r\n  // This function sometimes gets passed hex values that aren't long enough to\r\n  // be a block hash. In that case, let's convert them to a big number so Web3\r\n  // doesn't get stopped up.\r\n  if (typeof numberOrHash === \"string\" && numberOrHash.length < 66) {\r\n    numberOrHash = self.web3.utils.toBN(numberOrHash);\r\n  }\r\n\r\n  self.web3.eth.getBlock(numberOrHash, true, function(err, json) {\r\n    if (err) {\r\n      return cb(err);\r\n    }\r\n\r\n    if (json == null) {\r\n      return cb();\r\n    }\r\n\r\n    var block = new Block();\r\n\r\n    block.header.parentHash = utils.toBuffer(json.parentHash);\r\n    block.header.uncleHash = utils.toBuffer(json.sha3Uncles);\r\n    block.header.coinbase = utils.toBuffer(json.miner);\r\n    block.header.stateRoot = utils.toBuffer(json.stateRoot); // Should we include the following three?\r\n    block.header.transactionTrie = utils.toBuffer(json.transactionsRoot);\r\n    block.header.receiptTrie = utils.toBuffer(json.receiptsRoot);\r\n    block.header.bloom = utils.toBuffer(json.logsBloom);\r\n    block.header.difficulty = utils.toBuffer(\"0x\" + json.totalDifficulty.toString(16)); // BigNumber\r\n    block.header.number = utils.toBuffer(json.number);\r\n    block.header.gasLimit = utils.toBuffer(json.gasLimit);\r\n    block.header.gasUsed = utils.toBuffer(json.gasUsed);\r\n    block.header.timestamp = utils.toBuffer(json.timestamp);\r\n    block.header.extraData = utils.toBuffer(json.extraData);\r\n\r\n    (json.transactions || []).forEach(function(txJson, index) {\r\n      block.transactions.push(txhelper.fromJSON(txJson));\r\n    });\r\n\r\n    // Fake block. Let's do the worst.\r\n    // TODO: Attempt to fill out all block data so as to produce the same hash! (can we?)\r\n    block.hash = function() {\r\n      return utils.toBuffer(json.hash);\r\n    };\r\n\r\n    cb(null, block);\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getBlock = function(number, callback) {\r\n  var self = this;\r\n\r\n  this.isFallbackBlockHash(number, function(err, isFallbackBlockHash) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    if (isFallbackBlockHash) {\r\n      return self.getFallbackBlock(number, callback);\r\n    }\r\n\r\n    self.isFallbackBlock(number, function(err, isFallbackBlock) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      if (isFallbackBlock) {\r\n        return self.getFallbackBlock(number, callback);\r\n      }\r\n\r\n      // If we don't have string-based a block hash, turn what we do have into a number\r\n      // before sending it to getBlock.\r\n      function getBlockReference(value, callback) {\r\n        if (!self.isBlockHash(value)) {\r\n          self.getRelativeBlockNumber(value, callback);\r\n        } else {\r\n          callback(null, value);\r\n        }\r\n      }\r\n\r\n      getBlockReference(number, function(err, blockReference) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        BlockchainDouble.prototype.getBlock.call(self, blockReference, callback);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getStorage = function(address, key, number, callback) {\r\n  this.lookupStorageTrie(address, function(err, trie) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    trie.get(key, callback);\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getCode = function(address, number, callback) {\r\n  var self = this;\r\n\r\n  if (typeof number === \"function\") {\r\n    callback = number;\r\n    number = \"latest\";\r\n  }\r\n\r\n  if (!number) {\r\n    number = \"latest\";\r\n  }\r\n\r\n  this.getEffectiveBlockNumber(number, function(err, effective) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    number = effective;\r\n\r\n    self.stateTrie.keyExists(address, function(err, exists) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      // If we've stored the value and we're looking at one of our stored blocks,\r\n      // get it from our stored data.\r\n      if (exists && number > to.number(self.forkBlockNumber)) {\r\n        BlockchainDouble.prototype.getCode.call(self, address, number, callback);\r\n      } else {\r\n        // Else, we need to fetch it from web3. If our number is greater than\r\n        // the fork, let's just use \"latest\".\r\n        if (number > to.number(self.forkBlockNumber)) {\r\n          number = \"latest\";\r\n        }\r\n\r\n        self.fetchCodeFromFallback(address, number, function(err, code) {\r\n          if (code) {\r\n            code = utils.toBuffer(code);\r\n          }\r\n          callback(err, code);\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.putCode = function(address, value, callback) {\r\n  // This is a bit of a hack. We need to bypass the vm's\r\n  // _lookupAccount call that vm.stateManager.putContractCode() uses.\r\n  // This means we have to do some things ourself. The last call\r\n  // to self.stateTrie.put() at the bottom is important because\r\n  // we can't just be satisfied putting it in the cache.\r\n\r\n  var self = this;\r\n  self.vm.stateManager.cache.flush(() => {\r\n    address = utils.toBuffer(address);\r\n    this.stateTrie.get(address, function(err, data) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      var account = new Account(data);\r\n      account.setCode(self.stateTrie, value, function(err, result) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n\r\n        self.stateTrie.put(address, account.serialize(), function(err) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          // Ensure the cache updates as well.\r\n          self.vm.stateManager.putAccount(address, account, callback);\r\n        });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getAccount = function(address, number, callback) {\r\n  var self = this;\r\n\r\n  if (typeof number === \"function\") {\r\n    callback = number;\r\n    number = \"latest\";\r\n  }\r\n\r\n  this.getEffectiveBlockNumber(number, function(err, effective) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    number = effective;\r\n\r\n    // If the account doesn't exist in our state trie, get it off the wire.\r\n    self.stateTrie.keyExists(address, function(err, exists) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      if (exists && number > to.number(self.forkBlockNumber)) {\r\n        BlockchainDouble.prototype.getAccount.call(self, address, number, function(err, acc) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n          callback(null, acc);\r\n        });\r\n      } else {\r\n        self.fetchAccountFromFallback(address, number, callback);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getTransaction = function(hash, callback) {\r\n  var self = this;\r\n  BlockchainDouble.prototype.getTransaction.call(this, hash, function(err, tx) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    if (tx != null) {\r\n      return callback(null, tx);\r\n    }\r\n\r\n    self.web3.eth.getTransaction(hash, function(err, result) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      if (result) {\r\n        result = txhelper.fromJSON(result);\r\n      }\r\n\r\n      callback(null, result);\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getTransactionReceipt = function(hash, callback) {\r\n  var self = this;\r\n  BlockchainDouble.prototype.getTransactionReceipt.call(this, hash, function(err, receipt) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    if (receipt) {\r\n      return callback(null, receipt);\r\n    }\r\n\r\n    self.web3.eth.getTransactionReceipt(hash, function(err, receiptJson) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n      if (!receiptJson) {\r\n        return callback();\r\n      }\r\n\r\n      async.parallel(\r\n        {\r\n          tx: self.getTransaction.bind(self, hash),\r\n          block: self.getBlock.bind(self, receiptJson.blockNumber)\r\n        },\r\n        function(err, result) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          var logs = receiptJson.logs.map(function(log) {\r\n            return new Log(log);\r\n          });\r\n\r\n          var receipt = new Receipt(\r\n            result.tx,\r\n            result.block,\r\n            logs,\r\n            receiptJson.gasUsed,\r\n            receiptJson.cumulativeGasUsed,\r\n            receiptJson.contractAddress,\r\n            receiptJson.status,\r\n            to.hex(receiptJson.logsBloom)\r\n          );\r\n\r\n          callback(null, receipt);\r\n        }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.fetchAccountFromFallback = function(address, blockNumber, callback) {\r\n  var self = this;\r\n  address = to.hex(address);\r\n\r\n  async.parallel(\r\n    {\r\n      code: this.fetchCodeFromFallback.bind(this, address, blockNumber),\r\n      balance: this.fetchBalanceFromFallback.bind(this, address, blockNumber),\r\n      nonce: this.fetchNonceFromFallback.bind(this, address, blockNumber)\r\n    },\r\n    function(err, results) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      var code = results.code;\r\n      var balance = results.balance;\r\n      var nonce = results.nonce;\r\n\r\n      var account = new Account({\r\n        nonce: nonce,\r\n        balance: balance\r\n      });\r\n\r\n      account.exists = code !== \"0x\" || balance !== \"0x0\" || nonce !== \"0x0\";\r\n\r\n      // This puts the code on the trie, keyed by the hash of the code.\r\n      // It does not actually link an account to code in the trie.\r\n      account.setCode(self.stateTrie, utils.toBuffer(code), function(err) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        callback(null, account);\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\nForkedBlockchain.prototype.fetchCodeFromFallback = function(address, blockNumber, callback) {\r\n  var self = this;\r\n  address = to.hex(address);\r\n\r\n  // Allow an optional blockNumber\r\n  if (typeof blockNumber === \"function\") {\r\n    callback = blockNumber;\r\n    blockNumber = this.forkBlockNumber;\r\n  }\r\n\r\n  this.getSafeFallbackBlockNumber(blockNumber, function(err, safeBlockNumber) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.web3.eth.getCode(address, safeBlockNumber, function(err, code) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      code = \"0x\" + utils.toBuffer(code).toString(\"hex\");\r\n      callback(null, code);\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.fetchBalanceFromFallback = function(address, blockNumber, callback) {\r\n  var self = this;\r\n  address = to.hex(address);\r\n\r\n  // Allow an optional blockNumber\r\n  if (typeof blockNumber === \"function\") {\r\n    callback = blockNumber;\r\n    blockNumber = this.forkBlockNumber;\r\n  }\r\n\r\n  this.getSafeFallbackBlockNumber(blockNumber, function(err, safeBlockNumber) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.web3.eth.getBalance(address, safeBlockNumber, function(err, balance) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      balance = \"0x\" + new BN(balance).toString(16);\r\n      callback(null, balance);\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.fetchNonceFromFallback = function(address, blockNumber, callback) {\r\n  var self = this;\r\n  address = to.hex(address);\r\n\r\n  // Allow an optional blockNumber\r\n  if (typeof blockNumber === \"function\") {\r\n    callback = blockNumber;\r\n    blockNumber = this.forkBlockNumber;\r\n  }\r\n\r\n  this.getSafeFallbackBlockNumber(blockNumber, function(err, safeBlockNumber) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.web3.eth.getTransactionCount(address, safeBlockNumber, function(err, nonce) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      nonce = \"0x\" + self.web3.utils.toBN(nonce).toString(16);\r\n      callback(null, nonce);\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getHeight = function(callback) {\r\n  this.latestBlock(function(err, block) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(null, to.number(block.header.number));\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getRelativeBlockNumber = function(number, callback) {\r\n  var self = this;\r\n  this.getEffectiveBlockNumber(number, function(err, effective) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    callback(null, effective - to.number(self.forkBlockNumber) - 1);\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getSafeFallbackBlockNumber = function(blockNumber, callback) {\r\n  var forkBlockNumber = to.number(this.forkBlockNumber);\r\n\r\n  if (blockNumber == null) {\r\n    return callback(null, forkBlockNumber);\r\n  }\r\n\r\n  this.getEffectiveBlockNumber(blockNumber, function(err, effective) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n    if (effective > forkBlockNumber) {\r\n      effective = forkBlockNumber;\r\n    }\r\n\r\n    callback(null, effective);\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype.getBlockLogs = function(number, callback) {\r\n  var self = this;\r\n\r\n  this.getEffectiveBlockNumber(number, function(err, effective) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    self.getRelativeBlockNumber(effective, function(err, relative) {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      if (relative < 0) {\r\n        self.getBlock(number, function(err, block) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          self.web3.currentProvider.send(\r\n            {\r\n              jsonrpc: \"2.0\",\r\n              method: \"eth_getLogs\",\r\n              params: [\r\n                {\r\n                  fromBlock: to.hex(number),\r\n                  toBlock: to.hex(number)\r\n                }\r\n              ],\r\n              id: new Date().getTime()\r\n            },\r\n            function(err, res) {\r\n              if (err) {\r\n                return callback(err);\r\n              }\r\n\r\n              var logs = res.result.map(function(log) {\r\n                // To make this result masquerade as the right information.\r\n                log.block = block;\r\n                return new Log(log);\r\n              });\r\n\r\n              callback(null, logs);\r\n            }\r\n          );\r\n        });\r\n      } else {\r\n        BlockchainDouble.prototype.getBlockLogs.call(self, relative, callback);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype._checkpointTrie = function() {\r\n  var self = this;\r\n\r\n  BlockchainDouble.prototype._checkpointTrie.call(this);\r\n\r\n  Object.keys(this.storageTrieCache).forEach(function(address) {\r\n    var trie = self.storageTrieCache[address];\r\n    trie.customCheckpoint();\r\n  });\r\n};\r\n\r\nForkedBlockchain.prototype._revertTrie = function() {\r\n  var self = this;\r\n\r\n  BlockchainDouble.prototype._revertTrie.call(this);\r\n\r\n  Object.keys(this.storageTrieCache).forEach(function(address) {\r\n    var trie = self.storageTrieCache[address];\r\n\r\n    // We're trying to revert to a point before this trie was created.\r\n    // Let's just remove the trie.\r\n    if (trie.checkpoints.length === 0) {\r\n      delete self.storageTrieCache[address];\r\n    } else {\r\n      trie.customRevert();\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = ForkedBlockchain;\r\n","var MerklePatriciaTree = require(\"merkle-patricia-tree\");\r\nvar utils = require(\"ethereumjs-util\");\r\nvar inherits = require(\"util\").inherits;\r\nvar Web3 = require(\"web3\");\r\nvar to = require(\"./to.js\");\r\n\r\ninherits(ForkedStorageTrie, MerklePatriciaTree);\r\n\r\nfunction ForkedStorageTrie(db, root, options) {\r\n  MerklePatriciaTree.call(this, db, root);\r\n\r\n  this.address = options.address;\r\n\r\n  this.fork = options.fork;\r\n  this.forkBlockNumber = options.forkBlockNumber;\r\n\r\n  this.blockchain = options.blockchain;\r\n\r\n  this.web3 = new Web3();\r\n  this.web3.setProvider(this.fork);\r\n\r\n  this.checkpoints = [];\r\n}\r\n\r\nForkedStorageTrie.prototype.keyExists = function(key, callback) {\r\n  key = utils.toBuffer(key);\r\n\r\n  this.findPath(key, function(err, node, remainder, stack) {\r\n    var exists = false;\r\n    if (node && remainder.length === 0) {\r\n      exists = true;\r\n    }\r\n    callback(err, exists);\r\n  });\r\n};\r\n\r\n// Note: This overrides a standard method whereas the other methods do not.\r\nForkedStorageTrie.prototype.get = function(key, blockNumber, callback) {\r\n  var self = this;\r\n\r\n  // Allow an optional blockNumber\r\n  if (typeof blockNumber === \"function\") {\r\n    callback = blockNumber;\r\n    blockNumber = self.forkBlockNumber;\r\n  }\r\n\r\n  // For geth; https://github.com/ethereumjs/ethereumjs-util/issues/79\r\n  blockNumber = to.rpcQuantityHexString(blockNumber);\r\n\r\n  key = utils.toBuffer(key);\r\n\r\n  // If the account doesn't exist in our state trie, get it off the wire.\r\n  this.keyExists(key, function(err, exists) {\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    if (exists) {\r\n      MerklePatriciaTree.prototype.get.call(self, key, function(err, r) {\r\n        callback(err, r);\r\n      });\r\n    } else {\r\n      // If this is the main trie, get the whole account.\r\n      if (self.address == null) {\r\n        self.blockchain.fetchAccountFromFallback(key, blockNumber, function(err, account) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          callback(null, account.serialize());\r\n        });\r\n      } else {\r\n        self.web3.eth.getStorageAt(to.hex(self.address), to.hex(key), blockNumber, function(err, value) {\r\n          if (err) {\r\n            return callback(err);\r\n          }\r\n\r\n          value = utils.toBuffer(value);\r\n          value = utils.rlp.encode(value);\r\n\r\n          callback(null, value);\r\n        });\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n// I don't want checkpoints to be removed by commits.\r\n// Note: For some reason, naming this function checkpoint()\r\n// -- overriding the default function -- prevents it from\r\n// being called.\r\nForkedStorageTrie.prototype.customCheckpoint = function() {\r\n  this.checkpoints.push(this.root);\r\n};\r\n\r\nForkedStorageTrie.prototype.customRevert = function() {\r\n  this.root = this.checkpoints.pop();\r\n};\r\n\r\nmodule.exports = ForkedStorageTrie;\r\n","module.exports = {\r\n  // Mimics crypto.random bytes, but takes in a random number generator\r\n  // as its second parameter. rng is expected to be a function that takes\r\n  // no parameters and returns a result like Math.random().\r\n  // This is important because it allows for a seeded random number generator.\r\n  // Since this is a mock RPC library, the rng doesn't need to be cryptographically secure.\r\n  randomBytes: function(length, rng) {\r\n    var buf = [];\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      buf.push(rng() * 255);\r\n    }\r\n\r\n    return Buffer.from(buf);\r\n  },\r\n\r\n  randomAlphaNumericString: function(length, rng) {\r\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    let text = \"\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      text += alphabet.charAt(Math.floor((rng || Math.random)() * alphabet.length));\r\n    }\r\n\r\n    return text;\r\n  }\r\n};\r\n","var inherits = require(\"util\").inherits;\r\n\r\n// raised when the transaction is rejected prior to running it in the EVM.\r\nfunction TXRejectedError(message) {\r\n  // Why not just Error.apply(this, [message])? See\r\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\r\n  Error.captureStackTrace(this, this.constructor);\r\n  this.name = this.constructor.name;\r\n  this.message = message;\r\n}\r\n\r\ninherits(TXRejectedError, Error);\r\n\r\nmodule.exports = TXRejectedError;\r\n","// this replaces `eth-block-tracker` in the provider-engine, as that block tracker is meant to work with\r\n// an external provider instance\r\n\r\nconst EventEmitter = require(\"events\");\r\nvar blockHelper = require(\"./utils/block_helper\");\r\n\r\nfunction GanacheBlockTracker(opts) {\r\n  opts = opts || {};\r\n  EventEmitter.apply(this);\r\n  if (!opts.blockchain) {\r\n    throw new Error(\"RpcBlockTracker - no blockchain specified.\");\r\n  }\r\n  if (!opts.blockchain.on) {\r\n    throw new Error(\"RpcBlockTracker - blockchain is not an EventEmitter.\");\r\n  }\r\n  this._blockchain = opts.blockchain;\r\n  this.start = this.start.bind(this);\r\n  this.stop = this.stop.bind(this);\r\n  this.getTrackingBlock = this.getTrackingBlock.bind(this);\r\n  this.awaitCurrentBlock = this.awaitCurrentBlock.bind(this);\r\n  this._setCurrentBlock = this._setCurrentBlock.bind(this);\r\n}\r\n\r\nGanacheBlockTracker.prototype = Object.create(EventEmitter.prototype);\r\nGanacheBlockTracker.prototype.constructor = GanacheBlockTracker;\r\n\r\nGanacheBlockTracker.prototype.getTrackingBlock = function() {\r\n  return this._currentBlock;\r\n};\r\n\r\nGanacheBlockTracker.prototype.getCurrentBlock = function() {\r\n  return this._currentBlock;\r\n};\r\n\r\nGanacheBlockTracker.prototype.awaitCurrentBlock = function() {\r\n  const self = this;\r\n  // return if available\r\n  if (this._currentBlock) {\r\n    return this._currentBlock;\r\n  }\r\n  // wait for \"sync\" event\r\n  return new Promise((resolve) => this.once(\"block\", resolve)).then(() => self._currentBlock);\r\n};\r\n\r\nGanacheBlockTracker.prototype.start = function(opts = {}) {\r\n  this._blockchain.on(\"block\", this._setCurrentBlock);\r\n  return Promise.resolve();\r\n};\r\n\r\nGanacheBlockTracker.prototype.stop = function() {\r\n  this._isRunning = false;\r\n  this._blockchain.removeListener(\"block\", this._setCurrentBlock);\r\n};\r\n\r\n//\r\n// private\r\n//\r\n\r\nGanacheBlockTracker.prototype._setCurrentBlock = function(newBlock) {\r\n  let block = blockHelper.toJSON(newBlock, true);\r\n  if (this._currentBlock && this._currentBlock.hash === block.hash) {\r\n    return;\r\n  }\r\n  const oldBlock = this._currentBlock;\r\n  this._currentBlock = block;\r\n  this.emit(\"latest\", block);\r\n  this.emit(\"sync\", { block, oldBlock });\r\n  this.emit(\"block\", block);\r\n};\r\n\r\nmodule.exports = GanacheBlockTracker;\r\n","// make sourcemaps work!\r\nrequire(\"source-map-support/register\");\r\n\r\nvar Provider = require(\"./provider\");\r\nvar webSocketServer = require(\"./webSocketServer\");\r\nvar httpServer = require(\"./httpServer\");\r\nvar _ = require(\"lodash\");\r\n\r\nmodule.exports = {\r\n  create: function(options) {\r\n    options = _applyDefaultOptions(options || {});\r\n\r\n    var logger = options.logger;\r\n    var provider = new Provider(options);\r\n\r\n    var server = httpServer(provider, logger);\r\n    server.keepAliveTimeout = options.keepAliveTimeout;\r\n\r\n    let connectionCounter = 0;\r\n    const connections = {};\r\n    server.on(\"connection\", (conn) => {\r\n      let key = connectionCounter++;\r\n      connections[key] = conn;\r\n      conn.on(\"close\", () => delete connections[key]);\r\n    });\r\n\r\n    var oldListen = server.listen;\r\n\r\n    server.listen = function() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n      var callback = function() {};\r\n      if (args.length > 0) {\r\n        var last = args[args.length - 1];\r\n        if (typeof last === \"function\") {\r\n          callback = args.pop();\r\n        }\r\n      }\r\n\r\n      var intermediary = function(err) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        server.provider.manager.waitForInitialization(callback);\r\n      };\r\n\r\n      args.push(intermediary);\r\n\r\n      oldListen.apply(server, args);\r\n    };\r\n\r\n    server.provider = provider;\r\n\r\n    if (options.ws) {\r\n      webSocketServer(server, provider, logger);\r\n    }\r\n\r\n    var oldClose = server.close;\r\n\r\n    server.close = function(callback) {\r\n      var args = Array.prototype.slice.call(arguments);\r\n      oldClose.apply(server, args);\r\n\r\n      server.provider.close(function(err) {\r\n        if (err) {\r\n          return callback(err);\r\n        }\r\n        Object.keys(connections).forEach((key) => {\r\n          try {\r\n            connections[key].destroy();\r\n          } catch (error) {}\r\n        });\r\n      });\r\n    };\r\n\r\n    return server;\r\n  }\r\n};\r\n\r\nconst defaultOptions = {\r\n  logger: {\r\n    log: function() {}\r\n  },\r\n  ws: true,\r\n  keepAliveTimeout: 5000\r\n};\r\n\r\nvar _applyDefaultOptions = function(options) {\r\n  return _.merge({}, defaultOptions, options);\r\n};\r\n","var WebSocketServer = require(\"websocket\").server;\r\n\r\nmodule.exports = function(httpServer, provider, logger) {\r\n  var connectionManager = new ConnectionManager(provider, logger);\r\n\r\n  var wsServer = new WebSocketServer({\r\n    httpServer: httpServer,\r\n    autoAcceptConnections: true\r\n  });\r\n\r\n  wsServer.on(\"connect\", connectionManager.manageConnection);\r\n\r\n  return wsServer;\r\n};\r\n\r\nfunction ConnectionManager(provider, logger) {\r\n  const self = this;\r\n  self.provider = provider;\r\n  self.logger = logger;\r\n  self.connectionsBySubscriptionId = {};\r\n  self.connections = {};\r\n  self.connectionCounter = 0;\r\n\r\n  self._updateSubscriptions = self._updateSubscriptions.bind(self);\r\n  self.manageConnection = self.manageConnection.bind(self);\r\n  self._logPayload = self._logPayload.bind(self);\r\n  self._handleRequest = self._handleRequest.bind(self);\r\n\r\n  provider.on(\"data\", function(err, notification) {\r\n    if (err) {\r\n      return;\r\n    }\r\n    self._updateSubscriptions(notification);\r\n  });\r\n}\r\n\r\nConnectionManager.prototype.manageConnection = function(connection) {\r\n  const self = this;\r\n  connection.id = ++self.connectionCounter;\r\n  self.connections[connection.id] = {\r\n    connection: connection,\r\n    subscriptions: {}\r\n  };\r\n\r\n  connection.on(\"message\", function(message) {\r\n    try {\r\n      var payload = JSON.parse(message.utf8Data);\r\n    } catch (e) {\r\n      connection.reject(400, \"Bad Request\");\r\n    }\r\n\r\n    self._logPayload(payload);\r\n    self._handleRequest(connection, payload);\r\n  });\r\n\r\n  connection.on(\"close\", function() {\r\n    // remove subscriptions\r\n    Object.keys(self.connections[connection.id].subscriptions).forEach((subscriptionId) => {\r\n      self.provider.send(\r\n        {\r\n          jsonrpc: \"2.0\",\r\n          method: \"eth_unsubscribe\",\r\n          params: [subscriptionId],\r\n          id: new Date().getTime()\r\n        },\r\n        function(err, result) {\r\n          if (err) {\r\n            return;\r\n          }\r\n          delete self.connectionsBySubscriptionId[subscriptionId];\r\n        }\r\n      );\r\n    });\r\n\r\n    delete self.connections[connection.id];\r\n  });\r\n};\r\n\r\nConnectionManager.prototype._handleRequest = function(connection, payload) {\r\n  const self = this;\r\n\r\n  // handle subscription requests, otherwise delegate to provider\r\n  switch (payload.method) {\r\n    case \"eth_subscribe\":\r\n      self.provider.send(payload, function(err, result) {\r\n        if (!err && result.result) {\r\n          self.connections[connection.id].subscriptions[result.result] = true;\r\n          self.connectionsBySubscriptionId[result.result] = self.connections[connection.id];\r\n        }\r\n        connection.send(JSON.stringify(result));\r\n      });\r\n      break;\r\n    case \"eth_unsubscribe\":\r\n      self.provider.send(payload, function(err, result) {\r\n        if (err || result.error) {\r\n          if (connection && connection.send) {\r\n            connection.send(JSON.stringify(result));\r\n          }\r\n          return;\r\n        }\r\n\r\n        delete self.connections[connection.id].subscriptions[payload.params[0]];\r\n        delete self.connectionsBySubscriptionId[payload.params[0]];\r\n\r\n        connection.send(JSON.stringify(result));\r\n      });\r\n      break;\r\n    default:\r\n      self.provider.send(payload, function(_, result) {\r\n        connection.send(JSON.stringify(result));\r\n      });\r\n  }\r\n};\r\n\r\n// Log messages that come into the TestRPC via http\r\nConnectionManager.prototype._logPayload = function(payload) {\r\n  const self = this;\r\n  if (payload instanceof Array) {\r\n    // Batch request\r\n    for (var i = 0; i < payload.length; i++) {\r\n      var item = payload[i];\r\n      self.logger.log(item.method);\r\n    }\r\n  } else {\r\n    self.logger.log(payload.method);\r\n  }\r\n};\r\n\r\nConnectionManager.prototype._updateSubscriptions = function(notification) {\r\n  this.connectionsBySubscriptionId[notification.params.subscription].connection.send(JSON.stringify(notification));\r\n};\r\n","var http = require(\"http\");\r\n\r\nmodule.exports = function(provider, logger) {\r\n  var server = http.createServer(function(request, response) {\r\n    var method = request.method;\r\n    var body = [];\r\n\r\n    request\r\n      .on(\"data\", function(chunk) {\r\n        body.push(chunk);\r\n      })\r\n      .on(\"end\", function() {\r\n        body = Buffer.concat(body).toString();\r\n        // At this point, we have the headers, method, url and body, and can now\r\n        // do whatever we need to in order to respond to this request.\r\n\r\n        var headers = {\r\n          \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept, User-Agent\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"*\"\r\n        };\r\n\r\n        switch (method) {\r\n          case \"OPTIONS\":\r\n            headers[\"Content-Type\"] = \"text/plain\";\r\n            response.writeHead(200, headers);\r\n            response.end(\"\");\r\n            break;\r\n          case \"POST\":\r\n            // console.log(\"Request coming in:\", body);\r\n\r\n            var payload;\r\n            try {\r\n              payload = JSON.parse(body);\r\n            } catch (e) {\r\n              headers[\"Content-Type\"] = \"text/plain\";\r\n              response.writeHead(400, headers);\r\n              response.end(\"400 Bad Request\");\r\n              return;\r\n            }\r\n\r\n            // Log messages that come into the TestRPC via http\r\n            if (payload instanceof Array) {\r\n              // Batch request\r\n              for (var i = 0; i < payload.length; i++) {\r\n                var item = payload[i];\r\n                logger.log(item.method);\r\n              }\r\n            } else {\r\n              logger.log(payload.method);\r\n            }\r\n\r\n            provider.send(payload, function(_, result) {\r\n              headers[\"Content-Type\"] = \"application/json\";\r\n              response.writeHead(200, headers);\r\n              response.end(JSON.stringify(result));\r\n            });\r\n\r\n            break;\r\n          default:\r\n            response.writeHead(400, {\r\n              \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept, User-Agent\",\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Access-Control-Allow-Methods\": \"*\",\r\n              \"Content-Type\": \"text/plain\"\r\n            });\r\n            response.end(\"400 Bad Request\");\r\n            break;\r\n        }\r\n      });\r\n  });\r\n\r\n  server.ganacheProvider = provider;\r\n  return server;\r\n};\r\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"Ganache\",[],e):\"object\"==typeof exports?exports.Ganache=e():t.Ganache=e()}(global,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=23)}([function(t,e,n){var r=n(1);t.exports={hex:function(t){if(\"string\"==typeof t){if(0===t.indexOf(\"0x\"))return t.trim();t=new r.BN(t)}return\"boolean\"==typeof t&&(t=t?1:0),\"number\"==typeof t&&(t=r.intToHex(t)),\"object\"==typeof t&&(t=t.toString(\"hex\")),r.addHexPrefix(t)},rpcQuantityHexString:function(t){return\"0x\"===(t=\"0x\"+(t=this.hex(t)).replace(\"0x\",\"\").replace(/^0+/,\"\"))&&(t=\"0x0\"),t},rpcDataHexString:function(t,e){if(\"number\"==typeof e)t=this.hex(t).replace(\"0x\",\"\"),t=new Array(e-t.length).fill(\"0\").join(\"\")+t;else{if(0===t.length)return\"0x\";(t=this.hex(t).replace(\"0x\",\"\")).length%2!=0&&(t=\"0\"+t)}return\"0x\"+t},nullableRpcDataHexString:function(t,e){const n=this.rpcDataHexString(t,e);return\"0x\"===n?null:n},hexWithZeroPadding:function(t){const e=(t=this.hex(t)).replace(\"0x\",\"\");return 1&e.length?\"0x0\"+e:t},number:function(t){if(\"number\"==typeof t)return t;if(\"string\"==typeof t&&0!==t.indexOf(\"0x\"))return parseInt(t,10);var e=r.toBuffer(t);return r.bufferToInt(e)}}},function(t,e){t.exports=require(\"ethereumjs-util\")},function(t,e){t.exports=require(\"util\")},function(t,e){t.exports=require(\"async\")},function(t,e){t.exports=require(\"web3-provider-engine/subproviders/subprovider.js\")},function(t,e){t.exports=require(\"lodash\")},function(t,e){t.exports=require(\"source-map-support/register\")},function(t,e){t.exports=require(\"ethereumjs-account\")},function(t,e,n){var r=n(2).inherits,o=n(0),i=n(31);function s(t,e){Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.results={},this.hashes=[],this.combine(t,e)}r(s,Error),s.prototype.combine=function(t,e){if(t instanceof s)for(var n=t,r=Object.keys(n.results),a=0;a<r.length;a++){var c=r[a];this.results[c]=n.results[c],Array.prototype.push.apply(this.hashes,n.hashes)}else{var u=e.results;for(a=0;a<t.length;a++){var l=t[a],h=u[a];if(1!==h.vm.exception){var p,f=o.hex(l.hash());this.hashes.push(f);var d=h.vm.return;d&&\"08c379a0\"===d.slice(0,4).toString(\"hex\")&&(p=i.rawDecode([\"string\"],d.slice(4))[0]),this.results[f]={error:h.vm.exceptionError.error||h.vm.exceptionError,program_counter:h.vm.runState.programCounter,return:o.hex(h.vm.return),reason:p}}}}if(1===this.hashes.length){var g=this.results[this.hashes[0]],m=\"VM Exception while processing transaction: \"+g.error;g.reason&&(m+=\" \"+g.reason),this.message=m}else{for(m=\"Multiple VM Exceptions while processing transactions: \\n\\n\",a=0;a<this.hashes.length;a++)m+=(f=this.hashes[a])+\": \"+(g=this.results[f]).error,g.reason&&(m+=\" \"+g.reason),m+=\"\\n\";this.message=m}},s.prototype.count=function(){return Object.keys(this.results).length},s.fromResults=function(t,e){var n=new s(t,e);return 0===n.count()?null:n},t.exports=s},function(t,e){t.exports=require(\"ethereumjs-tx/fake.js\")},function(t,e){t.exports=require(\"ethereumjs-block\")},function(t,e,n){var r=n(0);function o(t){var e=this;Object.keys(t).forEach(function(n){e[n]=t[n]})}o.prototype.toJSON=function(){return{logIndex:r.rpcQuantityHexString(this.logIndex),transactionIndex:r.rpcQuantityHexString(this.transactionIndex),transactionHash:r.rpcDataHexString(this.transactionHash),blockHash:r.rpcDataHexString(this.block.hash()),blockNumber:r.rpcQuantityHexString(this.block.header.number),address:r.rpcDataHexString(this.address),data:r.rpcDataHexString(this.data),topics:this.topics,type:\"mined\"}},t.exports=o},function(t,e,n){var r=n(0);function o(t,e,n,r,o,i,s,a){this.tx=t,this.block=e,this.logs=n,this.gasUsed=r,this.cumulativeGasUsed=o,this.contractAddress=i,this.status=s,this.logsBloom=a,this.transactionIndex=0;for(var c=0;c<e.transactions.length;c++){if(e.transactions[c].hash().equals(t.hash())){this.transactionIndex=c;break}}}o.prototype.toJSON=function(){return{transactionHash:r.rpcDataHexString(this.tx.hash()),transactionIndex:r.rpcQuantityHexString(this.transactionIndex),blockHash:r.rpcDataHexString(this.block.hash()),blockNumber:r.rpcQuantityHexString(this.block.header.number),gasUsed:r.rpcQuantityHexString(this.gasUsed),cumulativeGasUsed:r.rpcQuantityHexString(this.cumulativeGasUsed),contractAddress:null!=this.contractAddress?r.rpcDataHexString(this.contractAddress):null,logs:this.logs.map(function(t){return t.toJSON()}),status:r.rpcQuantityHexString(this.status),logsBloom:r.rpcDataHexString(this.logsBloom),v:r.rpcDataHexString(this.tx.v),r:r.rpcDataHexString(this.tx.r),s:r.rpcDataHexString(this.tx.s)}},t.exports=o},function(t,e){t.exports=require(\"events\")},function(t,e,n){\"use strict\";var r=n(60).version,o=n(61),i=n(62),s=n(63),a=n(64),c=n(65),u=n(66),l=n(67),h=function(){var t=this;o.packageInit(this,arguments),this.version=r,this.utils=l,this.eth=new i(this),this.shh=new c(this),this.bzz=new u(this);var e=this.setProvider;this.setProvider=function(n,r){return e.apply(t,arguments),this.eth.setProvider(n,r),this.shh.setProvider(n,r),this.bzz.setProvider(n),!0}};h.version=r,h.utils=l,h.modules={Eth:i,Net:s,Personal:a,Shh:c,Bzz:u},o.addProviders(h),t.exports=h},function(t,e,n){var r=n(0),o=n(9),i=n(1);t.exports={toJSON:function(t,e){for(var n=0,o=0;o<e.transactions.length;o++){if(e.transactions[o].hash().equals(t.hash())){n=o;break}}var i={hash:r.nullableRpcDataHexString(t.hash()),nonce:r.rpcQuantityHexString(t.nonce),blockHash:r.nullableRpcDataHexString(e.hash()),blockNumber:r.rpcQuantityHexString(e.header.number),transactionIndex:r.rpcQuantityHexString(n),from:r.nullableRpcDataHexString(t.from),to:r.nullableRpcDataHexString(t.to),value:r.rpcQuantityHexString(t.value),gas:r.rpcQuantityHexString(t.gasLimit),gasPrice:r.rpcQuantityHexString(t.gasPrice),input:r.nullableRpcDataHexString(t.data)};return t.v&&t.v.length>0&&t.r&&t.r.length>0&&t.s&&t.s.length>0&&(i.v=r.hex(t.v),i.r=r.hex(t.r),i.s=r.hex(t.s)),i},fromJSON:function(t){var e=new o({nonce:i.toBuffer(r.hex(t.nonce)),from:i.toBuffer(r.hex(t.from)),value:i.toBuffer(r.hex(t.value)),gasLimit:i.toBuffer(r.hex(t.gas)),gasPrice:i.toBuffer(r.hex(t.gasPrice)),data:i.toBuffer(r.hex(t.input))});if(t.v&&t.v.length>0&&t.r&&t.r.length>0&&t.s&&t.s.length>0&&(e.v=i.toBuffer(r.hex(t.v)),e.r=i.toBuffer(r.hex(t.r)),e.s=i.toBuffer(r.hex(t.s))),t.to){var n=i.toBuffer(r.hex(t.to));n.equals(i.toBuffer(\"0x0\"))||(e.to=i.setLengthLeft(n,20))}return e}}},function(t,e,n){n(6);let r=n(24),o=n(25),i=n(26),s=n(27),a=n(28),c=n(29),u=n(73),l=n(8),h=n(13),p=n(5);function f(t){const e=this;h.call(this),this.options=t=e._applyDefaultOptions(t||{});let n=new c(t,this);this.engine=new r({blockTracker:new u({blockchain:n.state.blockchain})});let l=new o;this.engine.manager=n,this.engine.addProvider(new i),this.engine.addProvider(new s),this.engine.addProvider(l),this.engine.addProvider(new a),this.engine.addProvider(n),this.engine.setMaxListeners(100),this.engine.start(),this.manager=n,this.sendAsync=this.send.bind(this),this.send=this.send.bind(this),this.close=this.close.bind(this),this._queueRequest=this._queueRequest.bind(this),this._processRequestQueue=this._processRequestQueue.bind(this),l.on(\"data\",function(t,n){e.emit(\"data\",t,n)})}const d={vmErrorsOnRPCResponse:!0,verbose:!1,asyncRequestProcessing:!1,logger:{log:function(){}}};f.prototype=Object.create(h.prototype),f.prototype.constructor=f,f.prototype._applyDefaultOptions=function(t){return p.merge({},d,t)},f.prototype.send=function(t,e){if(\"function\"!=typeof e)throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send is no longer synchronous and must be passed a callback as its final argument.\");let n=this,r=function(t){return p.cloneDeep(t)};t=Array.isArray(t)?t.map(r):r(t);let o=function(r,o){let i;if(o=p.cloneDeep(o),Array.isArray(o)){i=[];for(let e=0;e<o.length;e++)i.push(n.reportErrorInResponse(t[e],r,o[e]))}else i=n.reportErrorInResponse(t,r,o);n.options.verbose&&n.options.logger.log(\" <   \"+JSON.stringify(i,null,2).split(\"\\n\").join(\"\\n <   \")),e(i.error?r:null,i)};n.options.verbose&&n.options.logger.log(\"   > \"+JSON.stringify(t,null,2).split(\"\\n\").join(\"\\n   > \")),n.options.asyncRequestProcessing?n.engine.sendAsync(t,o):n._queueRequest(t,o)},f.prototype.close=function(t){this.manager.state.blockchain.close(t),this.engine.stop()},f.prototype._queueRequest=function(t,e){this._requestQueue||(this._requestQueue=[]),this._requestQueue.push({payload:t,callback:e}),setImmediate(this._processRequestQueue)},f.prototype._processRequestQueue=function(){const t=this;if(t._requestInProgress)return;t._requestInProgress=!0;let e=t._requestQueue.shift();e?t.engine.sendAsync(e.payload,(n,r)=>{t._requestQueue.length>0&&setImmediate(t._processRequestQueue),e.callback(n,r),t._requestInProgress=!1}):(t._requestInProgress=!1,t._requestQueue.length>0&&setImmediate(t._processRequestQueue))},f.prototype.cleanUpErrorObject=function(t,e){if(!t||!e.error)return e;let n={error:{data:{}}};return t.message?(n.error.message=t.message,n.error.data.stack=t.stack,n.error.data.name=t.name):e.error||(n.error={message:t.toString()}),p.merge(e,n)};let g=[\"eth_sendTransaction\",\"eth_sendRawTransaction\",\"personal_sendTransaction\"];f.prototype._isTransactionRequest=function(t){return-1!==g.indexOf(t.method)},f.prototype.reportErrorInResponse=function(t,e,n){const r=this;return e?(r._isTransactionRequest(t)&&e instanceof l&&(n.result=e.hashes[0],r.options.vmErrorsOnRPCResponse?(n.error.data||(n.error.data={}),n.error.data[e.hashes[0]]=e.results[e.hashes[0]]):delete n.error),\"eth_call\"===t.method&&e instanceof l&&(r.options.vmErrorsOnRPCResponse?(n.error.data||(n.error.data={}),n.error.data[e.hashes[0]]=e.results[e.hashes[0]]):(n.result=e.results[e.hashes[0]].return||\"0x\",delete n.error)),r.cleanUpErrorObject(e,n)):n},t.exports=f},function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},o=n(34).Buffer,i=n(1),s=n(35),a=n(36),c=n(37),u=n(38);function l(t,e){if(!t)throw new Error(e||\"Assertion failed\")}function h(t,e){return o.concat([t.update(e),t.final()])}var p=function(t,e){if(t&&e)throw new Error(\"Cannot supply both a private and a public key to the constructor\");if(t&&!i.isValidPrivate(t))throw new Error(\"Private key does not satisfy the curve requirements (ie. it is invalid)\");if(e&&!i.isValidPublic(e))throw new Error(\"Invalid public key\");this._privKey=t,this._pubKey=e};Object.defineProperty(p.prototype,\"privKey\",{get:function(){return l(this._privKey,\"This is a public key only wallet\"),this._privKey}}),Object.defineProperty(p.prototype,\"pubKey\",{get:function(){return this._pubKey||(this._pubKey=i.privateToPublic(this.privKey)),this._pubKey}}),p.generate=function(t){if(!t)return new p(s.randomBytes(32));for(var e=new i.BN(\"088f924eeceeda7fe92e1f5b0fffffffffffffff\",16);;){var n=s.randomBytes(32);if(new i.BN(i.privateToAddress(n)).lte(e))return new p(n)}},p.generateVanityAddress=function(t){for(\"object\"!==(void 0===t?\"undefined\":r(t))&&(t=new RegExp(t));;){var e=s.randomBytes(32),n=i.privateToAddress(e);if(t.test(n.toString(\"hex\")))return new p(e)}},p.prototype.getPrivateKey=function(){return this.privKey},p.prototype.getPrivateKeyString=function(){return i.bufferToHex(this.getPrivateKey())},p.prototype.getPublicKey=function(){return this.pubKey},p.prototype.getPublicKeyString=function(){return i.bufferToHex(this.getPublicKey())},p.prototype.getAddress=function(){return i.publicToAddress(this.pubKey)},p.prototype.getAddressString=function(){return i.bufferToHex(this.getAddress())},p.prototype.getChecksumAddressString=function(){return i.toChecksumAddress(this.getAddressString())},p.prototype.toV3=function(t,e){l(this._privKey,\"This is a public key only wallet\");var n,r=(e=e||{}).salt||s.randomBytes(32),u=e.iv||s.randomBytes(16),h=e.kdf||\"scrypt\",p={dklen:e.dklen||32,salt:r.toString(\"hex\")};if(\"pbkdf2\"===h)p.c=e.c||262144,p.prf=\"hmac-sha256\",n=s.pbkdf2Sync(o.from(t),r,p.c,p.dklen,\"sha256\");else{if(\"scrypt\"!==h)throw new Error(\"Unsupported kdf\");p.n=e.n||262144,p.r=e.r||8,p.p=e.p||1,n=a(o.from(t),r,p.n,p.r,p.p,p.dklen)}var f=s.createCipheriv(e.cipher||\"aes-128-ctr\",n.slice(0,16),u);if(!f)throw new Error(\"Unsupported cipher\");var d=o.concat([f.update(this.privKey),f.final()]),g=i.sha3(o.concat([n.slice(16,32),o.from(d,\"hex\")]));return{version:3,id:c({random:e.uuid||s.randomBytes(16)}),address:this.getAddress().toString(\"hex\"),crypto:{ciphertext:d.toString(\"hex\"),cipherparams:{iv:u.toString(\"hex\")},cipher:e.cipher||\"aes-128-ctr\",kdf:h,kdfparams:p,mac:g.toString(\"hex\")}}},p.prototype.getV3Filename=function(t){return[\"UTC--\",(t?new Date(t):new Date).toJSON().replace(/:/g,\"-\"),\"--\",this.getAddress().toString(\"hex\")].join(\"\")},p.prototype.toV3String=function(t,e){return JSON.stringify(this.toV3(t,e))},p.fromPublicKey=function(t,e){return e&&(t=i.importPublic(t)),new p(null,t)},p.fromExtendedPublicKey=function(t){return l(\"xpub\"===t.slice(0,4),\"Not an extended public key\"),t=u.decode(t).slice(45),p.fromPublicKey(t,!0)},p.fromPrivateKey=function(t){return new p(t)},p.fromExtendedPrivateKey=function(t){l(\"xprv\"===t.slice(0,4),\"Not an extended private key\");var e=u.decode(t);return l(0===e[45],\"Invalid extended private key\"),p.fromPrivateKey(e.slice(46))},p.fromV1=function(t,e){l(\"string\"==typeof e);var n=\"object\"===(void 0===t?\"undefined\":r(t))?t:JSON.parse(t);if(\"1\"!==n.Version)throw new Error(\"Not a V1 wallet\");if(\"scrypt\"!==n.Crypto.KeyHeader.Kdf)throw new Error(\"Unsupported key derivation scheme\");var c=n.Crypto.KeyHeader.KdfParams,u=a(o.from(e),o.from(n.Crypto.Salt,\"hex\"),c.N,c.R,c.P,c.DkLen),f=o.from(n.Crypto.CipherText,\"hex\");if(i.sha3(o.concat([u.slice(16,32),f])).toString(\"hex\")!==n.Crypto.MAC)throw new Error(\"Key derivation failed - possibly wrong passphrase\");var d=h(s.createDecipheriv(\"aes-128-cbc\",i.sha3(u.slice(0,16)).slice(0,16),o.from(n.Crypto.IV,\"hex\")),f);return new p(d)},p.fromV3=function(t,e,n){l(\"string\"==typeof e);var c,u,f=\"object\"===(void 0===t?\"undefined\":r(t))?t:JSON.parse(n?t.toLowerCase():t);if(3!==f.version)throw new Error(\"Not a V3 wallet\");if(\"scrypt\"===f.crypto.kdf)u=f.crypto.kdfparams,c=a(o.from(e),o.from(u.salt,\"hex\"),u.n,u.r,u.p,u.dklen);else{if(\"pbkdf2\"!==f.crypto.kdf)throw new Error(\"Unsupported key derivation scheme\");if(\"hmac-sha256\"!==(u=f.crypto.kdfparams).prf)throw new Error(\"Unsupported parameters to PBKDF2\");c=s.pbkdf2Sync(o.from(e),o.from(u.salt,\"hex\"),u.c,u.dklen,\"sha256\")}var d=o.from(f.crypto.ciphertext,\"hex\");if(i.sha3(o.concat([c.slice(16,32),d])).toString(\"hex\")!==f.crypto.mac)throw new Error(\"Key derivation failed - possibly wrong passphrase\");var g=h(s.createDecipheriv(f.crypto.cipher,c.slice(0,16),o.from(f.crypto.cipherparams.iv,\"hex\")),d);return new p(g)},p.fromEthSale=function(t,e){l(\"string\"==typeof e);var n=\"object\"===(void 0===t?\"undefined\":r(t))?t:JSON.parse(t),a=o.from(n.encseed,\"hex\"),c=s.pbkdf2Sync(e,e,2e3,32,\"sha256\").slice(0,16),u=h(s.createDecipheriv(\"aes-128-cbc\",c,a.slice(0,16)),a.slice(16)),f=new p(i.sha3(u));if(f.getAddress().toString(\"hex\")!==n.ethaddr)throw new Error(\"Decoded key mismatch - possibly wrong passphrase\");return f},t.exports=p},function(t,e,n){var r=n(0),o=n(7),i=n(10),s=n(11),a=n(12),c=n(41),u=n(8),l=n(19),h=n(1),p=n(3),f=n(42),d=n(43),g=n(13),m=n(5);function b(t){if(g.apply(this),this.options=t=this._applyDefaultOptions(t||{}),this.logger=t.logger||console,this.data=new d(t),null!=t.trie&&null!=t.db_path)throw new Error(\"Can't initialize a TestRPC with a db and a custom trie.\");this.pending_transactions=[],this.blockGasLimit=t.gasLimit,this.defaultTransactionGasLimit=t.defaultTransactionGasLimit,this.timeAdjustment=0}const y={gasLimit:\"0x6691b7\",defaultTransactionGasLimit:\"0x15f90\",time:null,debug:!1,allowUnlimitedContractSize:!1};b.prototype=Object.create(g.prototype),b.prototype.constructor=b,b.prototype._applyDefaultOptions=function(t){return m.merge(t,y,Object.assign({},t))},b.prototype.initialize=function(t,e){var n=this;this.data.initialize(function(o){if(o)return e(o);n.latestBlock(function(o,i){if(o)return e(o);var s=n.options,a=null;if(i&&(a=i.header.stateRoot),n.stateTrie=n.createStateTrie(n.data.trie_db,a),n.vm=s.vm||new c({state:n.stateTrie,blockchain:{getBlock:function(t,e){try{t=r.number(t)}catch(t){}n.getBlock(t,e)}},enableHomestead:!0,activatePrecompiles:!0,allowUnlimitedContractSize:s.allowUnlimitedContractSize}),!0===s.debug&&n.vm.on(\"step\",function(t){var e=t.opcode.name,o=t.opcode.in;if(o){var i=t.stack.slice(-o).map(t=>r.hex(t)).join(\" \");n.logger.log(`${e} ${i}`)}else n.logger.log(e)}),s.time&&n.setTime(s.time),i)return n.emit(\"block\",i),e();n.createGenesisBlock(function(r,o){if(r)return e(r);t=t||[],p.eachSeries(t,function(t,e){n.putAccount(t.account,t.address,e)},function(t){if(t)return e(t);n.putBlock(o,[],[],e)})})})})},b.prototype.createStateTrie=function(t,e){return new l(this.data.trie_db,e)},b.prototype.createGenesisBlock=function(t){this.createBlock(t)},b.prototype.latestBlock=function(t){this.data.blocks.last(function(e,n){if(e)return t(e);t(null,n)})},b.prototype.getEffectiveBlockNumber=function(t,e){return\"string\"!=typeof t&&(t=r.hex(t)),t.indexOf(\"0x\")>=0?e(null,r.number(t)):\"latest\"===t||\"pending\"===t?this.getHeight(e):\"earliest\"===t?e(null,0):void 0},b.prototype.getBlock=function(t,e){var n=this;if(\"string\"!=typeof t&&(t=r.hex(t)),t.indexOf(\"0x\")>=0){var o=t;if(!(o.length>40))return this.data.blocks.get(r.number(o),e);this.data.blockHashes.get(r.hex(o),function(t,r){return t?e(t):n.data.blocks.get(r,e)})}else{if(\"latest\"===t||\"pending\"===t)return this.latestBlock(e);if(\"earliest\"===t)return this.data.blocks.first(e)}},b.prototype.putBlock=function(t,e,n,o){var i=this;t.header.stateRoot=this.stateTrie.root,this.data.blocks.length(function(s,a){if(s)return o(s);var c=[i.data.blocks.push.bind(i.data.blocks,t),i.data.blockLogs.push.bind(i.data.blockLogs,e),i.data.blockHashes.set.bind(i.data.blockHashes,r.hex(t.hash()),a)];t.transactions.forEach(function(t,e){var o=r.hex(t.hash());c.push(i.data.transactions.set.bind(i.data.transactions,o,t),i.data.transactionReceipts.set.bind(i.data.transactionReceipts,o,n[e]))}),p.parallel(c,(e,n)=>{e||i.emit(\"block\",t),o(e,n)})})},b.prototype.popBlock=function(t){var e=this;this.data.blocks.last(function(n,o){if(n)return t(n);if(null==o)return t(null,null);var i=[],s=r.hex(o.hash());o.transactions.forEach(function(t){var n=r.hex(t.hash());i.push(e.data.transactions.del.bind(e.data.transactions,n),e.data.transactionReceipts.del.bind(e.data.transactionReceipts,n))}),i.push(e.data.blockLogs.pop.bind(e.data.blockLogs),e.data.blockHashes.del.bind(e.data.blockHashes,s),e.data.blocks.pop.bind(e.data.blocks)),p.series(i,function(n){if(n)return t(n);e.data.blocks.last(function(n,r){if(n)return t(n);e.stateTrie.root=r.header.stateRoot,t(null,o)})})})},b.prototype.clearPendingTransactions=function(){this.pending_transactions=[]},b.prototype.putAccount=function(t,e,n){var r=this;e=h.toBuffer(e),this.vm.stateManager.putAccount(e,t,function(t){if(t)return n(t);r.vm.stateManager.cache.flush(n)})},b.prototype.createBlock=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=null);var o=new i;!function(e){if(t)return e(null,t);n.latestBlock(e)}(function(t,i){if(t)return e(t);var s=null!=i?r.number(i.header.number):-1;o.header.gasLimit=n.blockGasLimit,o.header.number=r.hex(s+1),o.header.timestamp=r.hex(n.currentTime()),null!=i&&(o.header.parentHash=r.hex(i.hash())),e(null,o)})},b.prototype.getQueuedNonce=function(t,e){var n=null;if(this.pending_transactions.forEach(function(e){if(r.hex(e.from)===r.hex(t)){var o=r.number(e.nonce)||0;(null===n||o>n)&&(n=o)}}),null!=n)return e(null,Buffer.from([n+1]));this.stateTrie.get(t,function(t,n){if(t)return e(t);var r=new o(n);e(null,r.nonce)})},b.prototype.queueTransaction=function(t){this.pending_transactions.push(t)},b.prototype.sortByPriceAndNonce=function(){var t={};this.pending_transactions.forEach(e=>{const n=r.hex(e.from);t[n]?t[n].push(e):t[n]=[e]});var e=function(t,e){return parseInt(r.hex(t.nonce),16)-parseInt(r.hex(e.nonce),16)};Object.keys(t).forEach(n=>{t[n].sort(e)});var n=new f(function(t,e){return parseInt(r.hex(e.gasPrice),16)-parseInt(r.hex(t.gasPrice),16)});Object.keys(t).forEach(e=>{n.push(t[e].shift())});const o=[];for(;n.size()>0;){const e=n.pop();let i=r.hex(e.from);t[i].length>0&&n.push(t[i].shift()),o.push(e)}this.pending_transactions=o},b.prototype.processCall=function(t,e,n){var r,o=this,i=function(t,e,i){o.vm.stateManager.revert(function(s){i&&(o.stateTrie.root=r),n(t||s,e)})},s=function(t,e,s,a){if(s)return n(s);e&&(r=o.stateTrie.root,o.stateTrie.root=a.header.stateRoot),o.createBlock(a,function(r,s){if(r)return n(r);s.transactions.push(t),o.vm.stateManager.checkpoint();var a={tx:t,block:s,skipBalance:!0,skipNonce:!0};o.vm.runTx(a,function(n,r){if(n&&n instanceof Error==!1&&(n=new Error(\"VM error: \"+n)),n)return i(n);n=u.fromResults([t],{results:[r]}),i(n,r,e)})})};\"latest\"===e?o.latestBlock(s.bind(null,t,!1)):o.getBlock(e,s.bind(null,t,!0))},b.prototype.processBlock=function(t,e,n){var o=this;\"function\"==typeof e&&(n=e,e=!0),o.vm.stateManager.checkpoint();var i=function(t){o.vm.stateManager.revert(function(e){n(t||e)})};o.vm.runBlock({block:t,generate:!0},function(c,l){if(c&&c instanceof Error==!1&&(c=new Error(\"VM error: \"+c)),c)return i(c);c=u.fromResults(t.transactions,l);var p=[],f=[],d=0;l.results.forEach(function(t){d+=r.number(t.gasUsed)}),t.header.gasUsed=h.toBuffer(r.hex(d));for(var g=0;g<l.receipts.length;g++){var m=l.results[g],b=l.receipts[g],y=t.transactions[g],k=y.hash(),v=[];if(1===m.vm.exception)for(var x=0;x<b.logs.length;x++){for(var _=b.logs[x],w=r.hex(_[0]),B=[],T=0;T<_[1].length;T++)B.push(r.hex(_[1][T]));var S=r.hex(_[2]),C=new s({logIndex:r.hex(x),transactionIndex:r.hex(g),transactionHash:k,block:t,address:w,data:S,topics:B,type:\"mined\"});p.push(C),v.push(C)}let e=new a(y,t,v,m.gasUsed.toArrayLike(Buffer),b.gasUsed,m.createdAddress,b.status,r.hex(m.bloom.bitvector));f.push(e)}!function(n){!0===e?o.vm.stateManager.commit(function(e){if(e)return i(e);o.putBlock(t,p,f,n)}):o.vm.stateManager.revert(n)}(function(e){if(e)return n(e);n(c,t.transactions,l)})})},b.prototype.processNextBlock=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=void 0),n.sortByPriceAndNonce();for(var o=[],i=0,s=r.number(n.blockGasLimit);n.pending_transactions.length>0;){var a=n.pending_transactions[0],c=r.number(a.gasLimit);if(!(i+c<=s))break;i+=c,n.pending_transactions.shift(),o.push(a)}if(0===o.length&&n.pending_transactions.length>0){return e(\"Unexpected error condition: next transaction exceeds block gas limit\")}this.createBlock(function(i,s){if(i)return e(i);t&&(n.data.blocks.last(function(o,i){if(o)return e(o);i&&r.number(i.header.timestamp)>t&&n.logger.log(\"Waring: Setting the block timestamp (\"+t+\") that is earlier than the parent block one.\")}),s.header.timestamp=r.hex(t),n.setTime(new Date(1e3*t))),Array.prototype.push.apply(s.transactions,o),n.processBlock(s,!0,e)})},b.prototype.processTransactionTrace=function(t,e,n){var o=this,i=r.hex(t),s=\"\",a=null,c={currentDepth:-1,stack:[]},u={gas:0,returnValue:\"\",structLogs:[]};function l(t,n){var i=r.number(t.gasLeft),s=r.number(a.gasLimit)-i-u.gas;u.gas+=s;var l,h=null;if(!e.disableMemory&&(h=(h=Buffer.from(t.memory).toString(\"hex\")).match(/.{1,64}/g)||[]).length>0){var p=h[h.length-1];p.length<64&&(h[h.length-1]=p+new Array(64-p.length+1).join(\"0\"))}l=e.disableStack?null:t.stack.map(t=>r.rpcDataHexString(t,64).replace(\"0x\",\"\"));var f={depth:t.depth,error:\"\",gas:i,gasCost:s,memory:h,op:t.opcode.name,pc:t.pc,stack:l,storage:null};e.disableStorage?(u.structLogs.push(f),n()):f=o.processStorageTrace(f,c,t,function(t,e){if(t)return n(t);u.structLogs.push(e),n()})}function h(t){a=t,(s=r.hex(t.hash()))===i&&o.vm.on(\"step\",l)}function p(){s===i&&(o.vm.removeListener(\"step\",l),o.vm.removeListener(\"beforeTx\",h),o.vm.removeListener(\"afterTx\",p))}o.vm.on(\"beforeTx\",h),o.vm.on(\"afterTx\",p),this.getTransactionReceipt(i,function(t,e){if(t)return n(t);if(!e)return n(new Error(\"Unknown transaction \"+i));var s=e.block;o.getBlock(s.header.parentHash,function(t,e){if(t)return n(t);var a=o.stateTrie.root;o.stateTrie.root=e.header.stateRoot,o.createBlock(e,function(t,e){if(t)return n(t);for(var c=0;c<s.transactions.length;c++){var f=s.transactions[c];if(e.transactions.push(f),r.hex(f.hash())===i)break}o.processBlock(e,!1,function(t){t&&0===t.message.indexOf(\"VM Exception\")&&(t=null),o.stateTrie.root=a,o.vm.removeListener(\"beforeTx\",h),o.vm.removeListener(\"afterTx\",p),o.vm.removeListener(\"step\",l),n(t,u)})})})})},b.prototype.processStorageTrace=function(t,e,n,o){var i,s,a=n.opcode.name,c=n.opcode.in,u=n.stack.slice(-c).map(t=>r.hex(t));switch(e.currentDepth>n.depth&&e.stack.pop(),e.currentDepth<n.depth&&e.stack.push({}),e.currentDepth=n.depth,a){case\"SSTORE\":i=r.rpcDataHexString(u[1],64).replace(\"0x\",\"\"),s=r.rpcDataHexString(u[0],64).replace(\"0x\",\"\"),t.storage=Object.assign({},e.stack[e.currentDepth]),o(null,t),e.stack[e.currentDepth][i]=s;break;case\"SLOAD\":i=r.rpcDataHexString(u[0],64).replace(\"0x\",\"\"),this.vm.stateManager.getContractStorage(n.address,\"0x\"+i,function(n,a){if(n)return o(n);s=r.rpcDataHexString(a,64).replace(\"0x\",\"\"),e.stack[e.currentDepth][i]=s,t.storage=Object.assign({},e.stack[e.currentDepth]),o(null,t)});break;default:t.storage=Object.assign({},e.stack[e.currentDepth]),o(null,t)}},b.prototype.getAccount=function(t,e,n){var r=this;this.getBlock(e,function(e,i){if(e)return n(e);var s=r.stateTrie,a=s.root;r.stateTrie.root=i.header.stateRoot,s.get(h.toBuffer(t),function(t,e){if(s.root=a,t)return n(t);var r=new o(e);r.exists=!!e,n(null,r)})})},b.prototype.getNonce=function(t,e,n){this.getAccount(t,e,function(t,e){if(t)return n(t);n(null,e.nonce)})},b.prototype.getBalance=function(t,e,n){this.getAccount(t,e,function(t,e){if(t)return n(t);n(null,e.balance)})},b.prototype.getStorage=function(t,e,n,r){var i=this;this.getBlock(n,function(n,s){if(n)return r(n);var a=i.stateTrie,c=a.root;i.stateTrie.root=s.header.stateRoot,a.get(h.toBuffer(t),function(t,n){if(null!=t)return a.root=c,r(t);var i=new o(n);a.root=i.stateRoot,a.get(h.setLengthLeft(h.toBuffer(e),32),function(t,e){if(a.root=c,null!=t)return r(t);r(null,e)})})})},b.prototype.getCode=function(t,e,n){var r=this;this.getBlock(e,function(e,i){if(e)return n(e);var s=r.stateTrie,a=s.root;r.stateTrie.root=i.header.stateRoot,s.get(h.toBuffer(t),function(t,e){if(null!=t)return s.root=a,n(t);new o(e).getCode(s,function(t,e){if(s.root=a,t)return n(t);n(null,e)})})})},b.prototype.getTransaction=function(t,e){t=r.hex(t),this.data.transactions.get(t,function(t,n){if(t)return t.notFound?e(null,null):e(t);e(null,n)})},b.prototype.getTransactionReceipt=function(t,e){t=r.hex(t),this.data.transactionReceipts.get(t,function(t,n){if(t)return t.notFound?e(null,null):e(t);e(t,n)})},b.prototype.getBlockLogs=function(t,e){var n=this;this.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);n.data.blockLogs.get(r,e)})},b.prototype.getHeight=function(t){this.data.blocks.length(function(e,n){if(e)return t(e);t(null,n-1)})},b.prototype.currentTime=function(){return((new Date).getTime()/1e3|0)+this.timeAdjustment},b.prototype.increaseTime=function(t){return t<0&&(t=0),this.timeAdjustment+=t,this.timeAdjustment},b.prototype.setTime=function(t){var e=(new Date).getTime()/1e3|0,n=t.getTime()/1e3|0;this.timeAdjustment=n-e},b.prototype.close=function(t){this.data.close(t)},t.exports=b},function(t,e){t.exports=require(\"merkle-patricia-tree\")},function(t,e){t.exports=require(\"level-sublevel\")},function(t,e,n){var r=n(0),o=n(1),i=n(9);t.exports={encode:function(t,e){var n=t.toJSON(!0);n.from=r.hex(t.from),n.hash=r.hex(t.hash()),e(null,n)},decode:function(t,e){e(null,new i({nonce:o.toBuffer(t.nonce),value:o.toBuffer(t.value),to:o.toBuffer(t.to),from:o.toBuffer(t.from),gasLimit:o.toBuffer(t.gasLimit),gasPrice:o.toBuffer(t.gasPrice),data:o.toBuffer(t.data),v:o.toBuffer(t.v),r:o.toBuffer(t.r),s:o.toBuffer(t.s)}))}}},function(t,e,n){var r=n(0),o=n(15);t.exports={toJSON:function(t,e){return{number:r.rpcQuantityHexString(t.header.number),hash:r.hex(t.hash()),parentHash:r.hex(t.header.parentHash),mixHash:r.hex(t.header.mixHash),nonce:r.rpcDataHexString(r.hex(t.header.nonce),16),sha3Uncles:r.hex(t.header.uncleHash),logsBloom:r.hex(t.header.bloom),transactionsRoot:r.hex(t.header.transactionsTrie),stateRoot:r.hex(t.header.stateRoot),receiptsRoot:r.hex(t.header.receiptTrie),miner:r.hex(t.header.coinbase),difficulty:r.rpcQuantityHexString(t.header.difficulty),totalDifficulty:r.rpcQuantityHexString(t.header.difficulty),extraData:r.rpcDataHexString(t.header.extraData),size:r.hex(1e3),gasLimit:r.rpcQuantityHexString(t.header.gasLimit),gasUsed:r.rpcQuantityHexString(t.header.gasUsed),timestamp:r.rpcQuantityHexString(t.header.timestamp),transactions:t.transactions.map(function(n){return e?o.toJSON(n,t):r.hex(n.hash())}),uncles:[]}}}},function(t,e,n){n(6);const r=n(16),o=n(74);t.exports={server:function(t){return o.create(t)},provider:function(t){return new r(t)},_webpacked:!0}},function(t,e){t.exports=require(\"web3-provider-engine\")},function(t,e){t.exports=require(\"web3-provider-engine/subproviders/subscriptions\")},function(t,e,n){var r=n(4);function o(){this.methods={eth_call:!0,eth_getStorageAt:!0,eth_sendTransaction:!0,eth_sendRawTransaction:!0,eth_newBlockFilter:!0,eth_getFilterChanges:!0,eth_getFilterLogs:!0},this.queue=[],this.isWorking=!1}(0,n(2).inherits)(o,r),t.exports=o,o.prototype.handleRequest=function(t,e,n){if(!0!==t.external||!0!==this.methods[t.method])return e();this.queue.push([t,e]),!1===this.isWorking&&this.processNext()},o.prototype.processNext=function(){var t=this;0!==this.queue.length?(this.isWorking=!0,(0,this.queue.shift()[1])(function(e,n,r){if(e)return r(e);r(),t.processNext()})):this.isWorking=!1}},function(t,e,n){var r=n(4),o=n(2).inherits,i=n(3),s=n(0);function a(){this.watching={}}o(a,r),t.exports=a,a.prototype.handleRequest=function(t,e,n){return\"eth_newBlockFilter\"===t.method?this.handleNewBlockFilter(t,e,n):\"eth_getFilterChanges\"===t.method?this.handleGetFilterChanges(t,e,n):void e()},a.prototype.handleNewBlockFilter=function(t,e,n){var r=this;e(function(t,e,n){if(t)return n();r.watching[e]=!0,n()})},a.prototype.handleGetFilterChanges=function(t,e,n){var r=this,o=t.params[0];if(!this.watching[o])return e();e(function(t,e,n){if(t)return n();var a,c,u;i.series([function(t){0!==e.length?(a=e[0],t()):r.emitPayload({method:\"eth_blockNumber\"},function(e,n){if(e)return t(e);u=s.number(n.result),t()})},function(t){if(u)return t();r.emitPayload({method:\"eth_getBlockByHash\",params:[a,!1]},function(e,n){if(e)return t(e);u=s.number(n.result.number),t()})},function(t){if(0===(u=s.number(u)))return c=void 0,t();u-=1,r.emitPayload({method:\"eth_getBlockByNumber\",params:[u,!1]},function(e,n){if(e)return t(e);c=n.result.hash,t()})}],function(t){c&&(e[0]=c),delete r.watching[o],n()})})}},function(t,e,n){var r=n(4);function o(){}(0,n(2).inherits)(o,r),t.exports=o,o.prototype.handleRequest=function(t,e,n){if(\"eth_estimateGas\"!==t.method&&\"eth_call\"!==t.method)return e();var r=t.params[0];null==r.from?this.emitPayload({method:\"eth_coinbase\"},function(t,o){if(t)return n(t);var i=o.result;r.from=i,e()}):e()}},function(t,e,n){var r=n(1),o=n(2).inherits,i=n(30),s=n(0),a=n(15),c=n(22),u=n(72);function l(t,e){var n=this;this.state=t.state||new i(t,e),this.options=t,this.initialized=!1,this.initialization_error=null,this.post_initialization_callbacks=[],this.state.initialize(function(t){t&&(n.initialization_error=t),n.initialized=!0;var e=n.post_initialization_callbacks;n.post_initialization_callbacks=[],e.forEach(function(t){setImmediate(function(){t(n.initialization_error,n.state)})})})}o(l,n(4)),l.prototype.waitForInitialization=function(t){!1===this.initialized?this.post_initialization_callbacks.push(t):t(this.initialization_error,this.state)},l.prototype.handleRequest=function(t,e,n){if(null!=this.initialization_error)return n(this.initialization_error);if(!1!==this.initialized){var r=this[t.method];if(null==r)return n(new Error(\"Method \"+t.method+\" not supported.\"));var o=t.params||[],i=[].concat(o),s=!1;if(this.requiresDefaultBlockParameter(t.method)&&i.length<r.length-1&&(i.push(\"latest\"),s=!0),i.push(n),i.length>r.length||void 0!==r.minLength&&i.length<r.minLength||void 0===r.minLength&&i.length<r.length){var a=`Incorrect number of arguments. Method '${t.method}' requires `;return r.minLength?a+=`between ${r.minLength-1} and ${r.length-1} arguments. `:a+=`exactly ${r.length-1} arguments. `,a+=s?\"Including the implicit block argument, r\":\"R\",a+=`equest specified ${i.length-1} arguments: ${JSON.stringify(i)}.`,n(new Error(a))}r.apply(this,i)}else this.waitForInitialization(this.getDelayedHandler(t,e,n))},l.prototype.getDelayedHandler=function(t,e,n){var r=this;return function(o,i){o&&n(o),r.handleRequest(t,e,n)}},l.prototype.requiresDefaultBlockParameter=function(t){return!0==={eth_getBalance:!0,eth_getCode:!0,eth_getTransactionCount:!0,eth_getStorageAt:!0,eth_call:!0,eth_estimateGas:!0}[t]},l.prototype.eth_accounts=function(t){t(null,Object.keys(this.state.accounts))},l.prototype.eth_blockNumber=function(t){this.state.blockNumber(function(e,n){if(e)return t(e);t(null,s.hex(n))})},l.prototype.eth_coinbase=function(t){t(null,this.state.coinbase)},l.prototype.eth_mining=function(t){t(null,this.state.is_mining)},l.prototype.eth_hashrate=function(t){t(null,\"0x0\")},l.prototype.eth_gasPrice=function(t){t(null,r.addHexPrefix(this.state.gasPrice()))},l.prototype.eth_getBalance=function(t,e,n){this.state.getBalance(t,e,n)},l.prototype.eth_getCode=function(t,e,n){this.state.getCode(t,e,n)},l.prototype.eth_getBlockByNumber=function(t,e,n){this.state.blockchain.getBlock(t,function(t,r){if(t)return t.message&&t.message.indexOf(\"index out of range\")>=0?n(null,null):n(t);n(null,c.toJSON(r,e))})},l.prototype.eth_getBlockByHash=function(t,e,n){this.eth_getBlockByNumber.apply(this,arguments)},l.prototype.eth_getBlockTransactionCountByNumber=function(t,e){this.state.blockchain.getBlock(t,function(t,n){if(t)return t.message.indexOf(\"index out of range\")?e(null,0):e(t);e(null,n.transactions.length)})},l.prototype.eth_getBlockTransactionCountByHash=function(t,e){this.eth_getBlockTransactionCountByNumber.apply(this,arguments)},l.prototype.eth_getTransactionReceipt=function(t,e){this.state.getTransactionReceipt(t,function(t,n){if(t)return e(t);var r=null;n&&(r=n.toJSON()),e(null,r)})},l.prototype.eth_getTransactionByHash=function(t,e){this.state.getTransactionReceipt(t,function(t,n){if(t)return e(t);var r=null;n&&(r=a.toJSON(n.tx,n.block)),e(null,r)})},l.prototype.eth_getTransactionByBlockHashAndIndex=function(t,e,n){e=s.number(e),this.state.getBlock(t,function(t,r){if(t)return t.notFound?n(null,null):n(t);if(e>=r.transactions.length)return n(new Error(\"Transaction at index \"+s.hex(e)+\" does not exist in block.\"));var o=r.transactions[e],i=a.toJSON(o,r);n(null,i)})},l.prototype.eth_getTransactionByBlockNumberAndIndex=function(t,e,n){this.eth_getTransactionByBlockHashAndIndex(t,e,n)},l.prototype.eth_getTransactionCount=function(t,e,n){this.state.getTransactionCount(t,e,(t,e)=>(t&&t.message&&t.message.indexOf(\"index out of range\")>=0&&(t=new Error(\"Unknown block number\")),n(t,e)))},l.prototype.eth_sign=function(t,e,n){var r,o;try{r=this.state.sign(t,e)}catch(t){o=t}n(o,r)},l.prototype.eth_signTypedData=function(t,e,n){var r,o;try{r=this.state.signTypedData(t,e)}catch(t){o=t}n(o,r)},l.prototype.eth_sendTransaction=function(t,e){this.state.queueTransaction(\"eth_sendTransaction\",t,null,e)},l.prototype.eth_sendRawTransaction=function(t,e){this.state.queueRawTransaction(t,e)},l.prototype.eth_call=function(t,e,n){t.gas||(t.gas=this.state.blockchain.blockGasLimit),this.state.queueTransaction(\"eth_call\",t,e,n)},l.prototype.eth_estimateGas=function(t,e,n){t.gas||(t.gas=this.state.blockchain.blockGasLimit),this.state.queueTransaction(\"eth_estimateGas\",t,e,n)},l.prototype.eth_getStorageAt=function(t,e,n,r){this.state.queueStorage(t,e,n,r)},l.prototype.eth_newBlockFilter=function(t){var e=r.addHexPrefix(r.intToHex(this.state.latestFilterId));this.state.latestFilterId+=1,t(null,e)},l.prototype.eth_getFilterChanges=function(t,e){var n=this.state.latestBlock().hash().toString(\"hex\");this.state.mine(),e(null,[n])},l.prototype.eth_getLogs=function(t,e){this.state.getLogs(t,e)},l.prototype.eth_uninstallFilter=function(t,e){e(null,!0)},l.prototype.eth_protocolVersion=function(t){t(null,\"63\")},l.prototype.bzz_hive=function(t){t(null,[])},l.prototype.bzz_info=function(t){t(null,[])},l.prototype.shh_version=function(t){t(null,\"2\")},l.prototype.eth_getCompilers=function(t){t(null,[])},l.prototype.eth_syncing=function(t){t(null,!1)},l.prototype.net_listening=function(t){t(null,!0)},l.prototype.net_peerCount=function(t){t(null,0)},l.prototype.web3_clientVersion=function(t){t(null,\"EthereumJS TestRPC/v\"+u.version+\"/ethereum-js\")},l.prototype.web3_sha3=function(t,e){e(null,s.hex(r.sha3(t)))},l.prototype.net_version=function(t){t(null,this.state.net_version+\"\")},l.prototype.miner_start=function(t,e){e||\"function\"!=typeof t||(e=t,t=null),this.state.startMining(function(t){e(t,!0)})},l.prototype.miner_start.minLength=1,l.prototype.miner_stop=function(t){this.state.stopMining(function(e){t(e,!0)})},l.prototype.rpc_modules=function(t){t(null,{eth:\"1.0\",net:\"1.0\",rpc:\"1.0\",web3:\"1.0\",evm:\"1.0\",personal:\"1.0\"})},l.prototype.personal_listAccounts=function(t){t(null,Object.keys(this.state.personal_accounts))},l.prototype.personal_newAccount=function(t,e){var n=this.state.createAccount({generate:!0});this.state.accounts[n.address.toLowerCase()]=n,this.state.personal_accounts[n.address.toLowerCase()]=!0,this.state.account_passwords[n.address.toLowerCase()]=t,e(null,n.address)},l.prototype.personal_importRawKey=function(t,e,n){var r=this.state.createAccount({secretKey:t});this.state.accounts[r.address.toLowerCase()]=r,this.state.personal_accounts[r.address.toLowerCase()]=!0,this.state.account_passwords[r.address.toLowerCase()]=e,n(null,r.address)},l.prototype.personal_lockAccount=function(t,e){if(!0!==this.state.personal_accounts[t.toLowerCase()]){return e(\"Account not found\")}delete this.state.unlocked_accounts[t.toLowerCase()],e(null,!0)},l.prototype.personal_unlockAccount=function(t,e,n,r){if(!0!==this.state.personal_accounts[t.toLowerCase()]){return r(\"Account not found\")}var o=this.state.account_passwords[t.toLowerCase()];if(void 0!==o&&o!==e){return r(\"Invalid password\")}this.state.unlocked_accounts[t.toLowerCase()]=!0,r(null,!0)},l.prototype.personal_sendTransaction=function(t,e,n){if(null!=t.from){var o=r.addHexPrefix(t.from).toLowerCase(),i=this;i.personal_unlockAccount(o,e,null,function(e){if(e)return n(e);i.state.queueTransaction(\"eth_sendTransaction\",t,null,function(t,e){i.state.unlocked_accounts[o.toLowerCase()]=!1,n(t,e)})})}else{n(\"Sender not found\")}},l.prototype.evm_snapshot=function(t){this.state.snapshot(t)},l.prototype.evm_revert=function(t,e){this.state.revert(t,e)},l.prototype.evm_increaseTime=function(t,e){e(null,this.state.blockchain.increaseTime(t))},l.prototype.evm_setTime=function(t,e){e(null,this.state.blockchain.setTime(t))},l.prototype.evm_mine=function(t,e){\"function\"==typeof t&&(e=t,t=void 0),this.state.processBlock(t,function(t){if(t)return e(t);e(t,\"0x0\")})},l.prototype.evm_mine.minLength=1,l.prototype.debug_traceTransaction=function(t,e,n){\"function\"==typeof e&&(n=e,e=[]),this.state.queueTransactionTrace(t,e,n)},l.prototype.eth_getUncleCountByBlockHash=function(t,e){e(null,\"0x0\")},l.prototype.eth_getUncleCountByBlockNumber=function(t,e){e(null,\"0x0\")},l.prototype.eth_getUncleByBlockHashAndIndex=function(t,e,n){n(null,{})},l.prototype.eth_getUncleByBlockNumberAndIndex=function(t,e,n){n(null,{})},l.prototype.eth_newPendingTransactionFilter=function(t){t(null,\"0x00\")},l.prototype.eth_getFilterLogs=function(t,e){e(null,[])},l.prototype.eth_getWork=function(t,e){e(null,[])},l.prototype.eth_submitWork=function(t,e,n,r){r(null,!1)},l.prototype.eth_submitHashrate=function(t,e,n){n(null,!1)},l.prototype.db_putString=function(t,e,n,r){r(null,!1)},l.prototype.db_getString=function(t,e,n){n(null,\"\")},l.prototype.db_putHex=function(t,e,n,r){r(null,!1)},l.prototype.db_getHex=function(t,e,n){n(null,\"0x00\")},l.prototype.shh_post=function(t,e,n,r,o,i,s){s(null,!1)},l.prototype.shh_newIdentity=function(t){t(null,\"0x00\")},l.prototype.shh_hasIdentity=function(t,e){e(null,!1)},l.prototype.shh_newGroup=function(t){t(null,\"0x00\")},l.prototype.shh_addToGroup=function(t,e){e(null,!1)},l.prototype.shh_newFilter=function(t,e,n){n(null,!1)},l.prototype.shh_uninstallFilter=function(t,e){e(null,!1)},l.prototype.shh_getFilterChanges=function(t,e){e(null,[])},l.prototype.shh_getMessages=function(t,e){e(null,!1)},t.exports=l},function(t,e,n){var r=n(7),o=n(8),i=n(9),s=n(1),a=n(32),c=n(33),u=n(17),l=n(39),h=n(3),p=n(18),f=n(58),d=n(14),g=n(69),m=n(5),b=n(0),y=n(70),k=n(71);function v(t,e){this.options=t=this._applyDefaultOptions(t||{}),t.fork?this.blockchain=new f(t):this.blockchain=new p(t),this.vm=this.blockchain.vm,this.stateTrie=this.blockchain.stateTrie,this.accounts={},this.secure=!!t.secure,this.account_passwords={},this.personal_accounts={},this.total_accounts=t.total_accounts,this.coinbase=null,this.latest_filter_id=1,this.action_queue=[],this.action_processing=!1,this.snapshots=[],this.logger=t.logger,this.net_version=t.network_id,this.mnemonic=t.mnemonic,this.wallet=l.fromMasterSeed(c.mnemonicToSeed(this.mnemonic)),this.wallet_hdpath=t.hdPath,this.gasPriceVal=b.rpcQuantityHexString(t.gasPrice),this.is_mining=!0,this.blockTime=t.blockTime,this.is_mining_on_interval=!!t.blockTime,this.mining_interval_timeout=null,this._provider=e}const x={total_accounts:10,gasPrice:\"0x77359400\",default_balance_ether:100,unlocked_accounts:[],hdPath:\"m/44'/60'/0'/0/\"};v.prototype._applyDefaultOptions=function(t){if(t.seed||(t.seed=y.randomAlphaNumericString(10,a())),!t.mnemonic){let e=y.randomBytes(16,a(t.seed));t.mnemonic=c.entropyToMnemonic(e.toString(\"hex\"))}return t.fork||t.network_id||(t.network_id=(new Date).getTime()),m.merge(t,x,Object.assign({},t))},v.prototype.initialize=function(t){var e=this,n=[];let r=b.hex(d.utils.toWei(e.options.default_balance_ether.toString(),\"ether\"));if(e.options.accounts)n=e.options.accounts.map(e.createAccount.bind(e));else{if(!e.total_accounts)return t(new Error(\"Cannot initialize chain: either options.accounts or options.total_accounts must be specified\"));for(var o=0;o<e.total_accounts;o++)n.push(e.createAccount({index:o,balance:r}))}e.coinbase=b.hex(n[0].address),e.accounts={},n.forEach(function(t){e.accounts[t.address]=t,e.personal_accounts[t.address.toLowerCase()]=!0}),e.unlocked_accounts=e.options.unlocked_accounts.reduce(function(t,e){if(0!==(e+\"\").indexOf(\"0x\")){let t=parseInt(e),r=n[t];if(!r)throw new Error(`Account at index ${t} not found. Max index available is ${n.length-1}.`);e=r.address.toLowerCase()}return t[e.toLowerCase()]=!0,t},{}),e.secure||n.forEach(function(t){e.unlocked_accounts[t.address.toLowerCase()]=t}),e.blockchain.initialize(n,function(n){if(n)return t(n);e.net_version||(e.net_version=e.blockchain.fork_version),e.is_mining_on_interval&&e.mineOnInterval(),t()})},v.prototype.mineOnInterval=function(){var t=this;clearTimeout(t.mining_interval_timeout),t.mining_interval_timeout=null,t.mining_interval_timeout=setTimeout(function(){t._provider.send({method:\"evm_mine\"},t.mineOnInterval.bind(t))},1e3*this.blockTime),this.mining_interval_timeout&&this.mining_interval_timeout.unref&&this.mining_interval_timeout.unref()},v.prototype.createAccount=function(t,e){var n;if(t.generate)n=u.generate().getPrivateKey();else if(t.secretKey)n=s.toBuffer(b.hex(t.secretKey));else{var o=void 0===t.index?e:t.index;n=this.wallet.derivePath(this.wallet_hdpath+o).getWallet().getPrivateKey()}var i=s.privateToPublic(n),a=s.publicToAddress(i),c=new r;return c.balance=b.hex(t.balance),{secretKey:n,publicKey:i,address:b.hex(a).toLowerCase(),account:c}},v.prototype.blockNumber=function(t){return this.blockchain.getHeight(t)},v.prototype.gasPrice=function(){return this.gasPriceVal},v.prototype.getBalance=function(t,e,n){this.blockchain.getBalance(t,e,function(t,e){e&&(e=b.rpcQuantityHexString(e)),n(t,e)})},v.prototype.getTransactionCount=function(t,e,n){this.blockchain.getNonce(t,e,function(t,e){e&&(e=b.rpcQuantityHexString(e)),n(t,e)})},v.prototype.getCode=function(t,e,n){this.blockchain.getCode(t,e,function(t,e){e&&(e=b.hex(e)),n(t,e)})},v.prototype.queueRawTransaction=function(t,e){var n=Buffer.from(s.stripHexPrefix(t),\"hex\"),r=new i(n),o={from:r.from.toString(\"hex\"),to:r.to.toString(\"hex\"),gas:r.gasLimit.toString(\"hex\"),gasPrice:r.gasPrice.toString(\"hex\"),value:r.value.toString(\"hex\"),data:r.data.toString(\"hex\"),nonce:r.nonce.toString(\"hex\")};r.v&&r.v.length>0&&r.r&&r.r.length>0&&r.s&&r.s.length>0&&(o.v=r.v.toString(\"hex\"),o.r=r.r.toString(\"hex\"),o.s=r.s.toString(\"hex\")),this.queueTransaction(\"eth_sendRawTransaction\",o,null,e)},v.prototype.queueStorage=function(t,e,n,r){this.action_queue.push({method:\"eth_getStorageAt\",address:s.addHexPrefix(t),position:s.addHexPrefix(e),block:n,callback:r}),this.processNextAction()},v.prototype.queueTransaction=function(t,e,n,r){if(null!=e.from){if(e.from=s.addHexPrefix(e.from).toLowerCase(),\"eth_sendTransaction\"===t&&null==this.accounts[e.from]&&null==this.unlocked_accounts[e.from])return r(new k(\"sender account not recognized\"));if(\"eth_sendTransaction\"===t&&null==this.unlocked_accounts[e.from])return r(new k(\"signer account is locked\"));var o={gasPrice:\"0x1\",gasLimit:b.hex(this.blockchain.defaultTransactionGasLimit),value:\"0x0\"};if(null!=e.gas&&(o.gasLimit=s.addHexPrefix(e.gas)),null!=e.gasPrice?o.gasPrice=s.addHexPrefix(e.gasPrice):o.gasPrice=this.gasPriceVal,null!=e.to&&(o.to=s.addHexPrefix(e.to)),null!=e.value&&(o.value=s.addHexPrefix(e.value)),null!=e.data&&(o.data=s.addHexPrefix(e.data)),null!=e.nonce&&(o.nonce=s.addHexPrefix(e.nonce)),null!=e.v&&null!=e.s&&null!=e.v&&(o.v=s.addHexPrefix(e.v),o.r=s.addHexPrefix(e.r),o.s=s.addHexPrefix(e.s)),\"0x0\"!==o.to&&\"\"!==o.to||delete o.to,o.to&&\"string\"!=typeof o.to)return r(new k(\"Invalid to address\"));if(b.number(o.gasLimit)>b.number(this.blockchain.blockGasLimit))return r(new k(\"Exceeds block gas limit\"));var a=s.toBuffer(e.from);try{new i(o).from=a}catch(t){return r(t)}this.action_queue.push({method:t,from:e.from,tx:o,callback:r,blockNumber:n}),this.processNextAction()}else r(new k(\"from not found; is required\"))},v.prototype.queueTransactionTrace=function(t,e,n){this.action_queue.push({method:\"debug_traceTransaction\",hash:b.hex(t),params:e,callback:n}),this.processNextAction()},v.prototype.processNextAction=function(t){var e=this;if(!0===t||!0!==this.action_processing&&0!==this.action_queue.length){var n=this.action_queue.shift();this.action_processing=!0;var r=function(t,r){n.callback(t,r),e.action_queue.length>0?e.processNextAction(!0):e.action_processing=!1};if(\"function\"==typeof n.method){var o=n.method();return r(null,o)}\"eth_getStorageAt\"===n.method?this.blockchain.getStorage(n.address,n.position,n.block,function(t,e){if(t)return r(t);e&&(e=s.rlp.decode(e)),e=b.hex(e||0),r(null,e)}):\"debug_traceTransaction\"===n.method?this.blockchain.processTransactionTrace(n.hash,n.params,r):\"eth_sendTransaction\"===n.method||\"eth_sendRawTransaction\"===n.method?this.processTransaction(n.from,n.tx,r):\"eth_call\"===n.method?this.processCall(n.from,n.tx,n.blockNumber,r):\"eth_estimateGas\"===n.method&&this.processGasEstimate(n.from,n.tx,n.blockNumber,r)}},v.prototype.sign=function(t,e){var n=this.accounts[b.hex(t).toLowerCase()];if(!n)throw new Error(\"cannot sign data; no private key\");var r=n.secretKey,o=Buffer.from(e.replace(\"0x\",\"\"),\"hex\"),i=s.hashPersonalMessage(o),a=s.ecsign(i,Buffer.from(r));return s.toRpcSig(a.v,a.r,a.s)},v.prototype.signTypedData=function(t,e){var n=this.accounts[b.hex(t).toLowerCase()];if(!n)throw new Error(\"cannot sign data; no private key\");if(!e.types)throw new Error(\"cannot sign data; types missing\");if(!e.types.EIP712Domain)throw new Error(\"cannot sign data; EIP712Domain definition missing\");if(!e.domain)throw new Error(\"cannot sign data; domain missing\");if(!e.primaryType)throw new Error(\"cannot sign data; primaryType missing\");if(!e.message)throw new Error(\"cannot sign data; message missing\");return g.signTypedData(n.secretKey,{data:e})},v.prototype.printTransactionReceipt=function(t,e,n){var r=this;r.blockchain.getTransactionReceipt(t,function(o,i){if(o)return n(o);r.blockchain.latestBlock(function(o,s){if(o)return n(o);i=i.toJSON(),r.logger.log(\"\"),r.logger.log(\"  Transaction: \"+t),null!=i.contractAddress&&r.logger.log(\"  Contract created: \"+i.contractAddress),r.logger.log(\"  Gas usage: \"+parseInt(i.gasUsed,16)),r.logger.log(\"  Block Number: \"+parseInt(i.blockNumber,16)),r.logger.log(\"  Block Time: \"+new Date(1e3*b.number(s.header.timestamp)).toString()),e&&(r.logger.log(\"  Runtime Error: \"+e.error),e.reason&&r.logger.log(\"  Revert reason: \"+e.reason)),r.logger.log(\"\"),n(null,t)})})},v.prototype.processBlock=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=null),n.blockchain.processNextBlock(t,function(t,r,i){if(t&&t instanceof o==!1)return e(t,r,i);h.eachSeries(r,function(e,r){var o=b.hex(e.hash()),i=null==t?{results:{}}:t;n.printTransactionReceipt(o,i.results[o],r)},e(t,r,i))})},v.prototype.processBlocks=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=null);var r=null,i=0;h.whilst(function(){return null==t?n.blockchain.pending_transactions.length>0:i<t},function(t){n.processBlock(function(e,n,s){if(i+=1,e){if(e instanceof o==!1)return t(e);null==r?r=e:r.combine(e)}t()})},function(t){e(t||r)})},v.prototype.processCall=function(t,e,n,r){var o=this;o.createFakeTransactionWithCorrectNonce(e,t,function(t,e){if(t)return r(t);o.blockchain.processCall(e,n,function(t,e){if(t)return r(t);var n=\"0x\";return!e.error&&e.vm.return?n=b.hex(e.vm.return):e.error&&o.logger.log(`Error processing call: ${e.error}`),r(null,n)})})},v.prototype.processGasEstimate=function(t,e,n,r){var o=this;o.createFakeTransactionWithCorrectNonce(e,t,function(t,e){if(t)return r(t);o.blockchain.processCall(e,n,function(t,e){if(t)return r(t);var n=\"0x\";return e.error?o.logger.log(`Error calculating gas estimate: ${e.error}`):n=e.gasRefund?b.hex(e.gasUsed.add(e.gasRefund)):b.hex(e.gasUsed),r(null,n)})})},v.prototype.processTransaction=function(t,e,n){var r=this;r.createFakeTransactionWithCorrectNonce(e,t,function(t,e){if(t)return n(t);r.blockchain.queueTransaction(e);var o=b.hex(e.hash());if(!1===r.is_mining||r.is_mining_on_interval)return n(null,o);r.processBlocks(function(t){if(t)return n(t);n(null,o)})})},v.prototype.getTransactionReceipt=function(t,e){this.blockchain.getTransactionReceipt(t,function(t,n){if(t&&t.notFound)return e(null,null);e(t,n)})},v.prototype.getBlock=function(t,e){this.blockchain.getBlock(t,e)},v.prototype.getLogs=function(t,e){var n=this,r=t.address&&(Array.isArray(t.address)?t.address:[t.address]);r=r&&r.map(function(t){return t.toLowerCase()});var o=t.topics||[];h.parallel({fromBlock:this.blockchain.getEffectiveBlockNumber.bind(this.blockchain,t.fromBlock||\"latest\"),toBlock:this.blockchain.getEffectiveBlockNumber.bind(this.blockchain,t.toBlock||\"latest\"),latestBlock:this.blockchain.getEffectiveBlockNumber.bind(this.blockchain,\"latest\")},function(t,i){if(t)return e(t);var s=i.fromBlock,a=i.toBlock,c=i.latestBlock;a>c&&(a=c);var u=[],l=s;h.whilst(function(){return l<=a},function(t){n.blockchain.getBlockLogs(l,function(e,n){if(e)return t(e);var i=r?n.filter(function(t){return r.indexOf(t.address.toLowerCase())>-1}):n;i=i.filter(function(t){for(var e=!0,n=0;n<o.length;n++){var r=o[n],i=t.topics[n];if(null!=r){var s=Array.isArray(r)?r.includes(i):r===i;if(n>=t.topics.length||!s){e=!1;break}}}return e}),u.push.apply(u,i),l+=1,t()})},function(t){if(t)return e(t);u=u.map(function(t){return t.toJSON()}),e(t,u)})})},v.prototype.snapshot=function(t){var e=this;this.blockchain.getHeight(function(n,r){if(n)return t(n);e.snapshots.push({blockNumber:r,timeAdjustment:e.blockchain.timeAdjustment}),e.logger.log(\"Saved snapshot #\"+e.snapshots.length),t(null,b.hex(e.snapshots.length))})},v.prototype.revert=function(t,e){var n=this;if(t=s.bufferToInt(t),this.logger.log(\"Reverting to snapshot #\"+t),t>this.snapshots.length)return!1;t-=1;var r=this.snapshots[t].timeAdjustment;h.whilst(function(){return n.snapshots.length>t},function(t){var e=n.snapshots.pop();h.during(function(t){n.blockchain.getHeight(function(n,r){if(n)return t(n);t(null,r>e.blockNumber)})},function(t){n.blockchain.popBlock(function(e){if(e)return t(e);t()})},t)},function(t){if(t)return e(t);n.blockchain.clearPendingTransactions(),n.blockchain.timeAdjustment=r,e(null,!0)})},v.prototype.hasContractCode=function(t,e){this.vm.stateManager.getContractCode(t,function(t,n){null!=t?e(t,!1):e(null,!0)})},v.prototype.startMining=function(t){this.is_mining=!0,this.is_mining_on_interval?(this.mineOnInterval(),t()):this.processBlocks(t)},v.prototype.stopMining=function(t){this.is_mining=!1,clearTimeout(this.mining_interval_timeout),this.mining_interval_timeout=null,t()},v.prototype.isUnlocked=function(t){return null!=this.unlocked_accounts[t.toLowerCase()]},v.prototype.createFakeTransactionWithCorrectNonce=function(t,e,n){this.blockchain.getQueuedNonce(e,(r,o)=>{if(r)return n(r);var s=new i(t);if(s.from=e,null==t.nonce)s.nonce=b.hex(o);else if(!s.nonce.equals(o)){const t=b.number(o),e=b.number(s.nonce);return n(new k(`the tx doesn't have the correct nonce. account has nonce of: ${t} tx has nonce of: ${e}`))}n(null,s)})},t.exports=v},function(t,e){t.exports=require(\"ethereumjs-abi\")},function(t,e){t.exports=require(\"seedrandom\")},function(t,e){t.exports=require(\"bip39\")},function(t,e){t.exports=require(\"safe-buffer\")},function(t,e){t.exports=require(\"crypto\")},function(t,e){t.exports=require(\"scrypt.js\")},function(t,e){t.exports=require(\"uuid/v4\")},function(t,e){t.exports=require(\"bs58check\")},function(t,e,n){\"use strict\";var r=n(40),o=n(17);function i(){}function s(t){var e=new i;return e._hdkey=t,e}i.fromMasterSeed=function(t){return s(r.fromMasterSeed(t))},i.fromExtendedKey=function(t){return s(r.fromExtendedKey(t))},i.prototype.privateExtendedKey=function(){if(!this._hdkey.privateExtendedKey)throw new Error(\"This is a public key only wallet\");return this._hdkey.privateExtendedKey},i.prototype.publicExtendedKey=function(){return this._hdkey.publicExtendedKey},i.prototype.derivePath=function(t){return s(this._hdkey.derive(t))},i.prototype.deriveChild=function(t){return s(this._hdkey.deriveChild(t))},i.prototype.getWallet=function(){return this._hdkey._privateKey?o.fromPrivateKey(this._hdkey._privateKey):o.fromPublicKey(this._hdkey._publicKey,!0)},t.exports=i},function(t,e){t.exports=require(\"hdkey\")},function(t,e){t.exports=require(\"ethereumjs-vm\")},function(t,e){t.exports=require(\"heap\")},function(t,e,n){var r=n(44),o=n(45),i=n(46),s=n(47),a=n(48),c=n(52),u=n(21),l=n(53),h=n(54),p=n(55),f=n(56),d=n(57);function g(t){this.options=t}g.prototype.initialize=function(t){var e=this;function n(n,i){if(n)return t(n);e.db=i,e.blocks=new r(\"blocks\",e.db,l),e.blockLogs=new r(\"blockLogs\",e.db,new p(e)),e.blockHashes=new o(\"blockHashes\",e.db),e.transactions=new o(\"transactions\",e.db,u),e.transactionReceipts=new o(\"transactionReceipts\",e.db,new f(e)),e.trie_db=new o(\"trie_db\",e.db,h,h),t()}!function(t){e.options.db_path?t(null,e.options.db_path):d.dir(t)}(function(r,o){if(r)return t(r);i(e.options.db||s(c(o,a).maxSize(100)),{valueEncoding:\"json\"},n)})},g.prototype.close=function(t){t()},t.exports=g},function(t,e,n){var r=n(20);function o(t,e,n){this.db=r(e),this.db=this.db.sublevel(t),this.name=t,this.serializer=n||{encode:function(t,e){e(null,t)},decode:function(t,e){e(null,t)}}}o.prototype.length=function(t){this.db.get(\"length\",function(e,n){if(e)return e.notFound?t(null,0):t(e);t(null,n)})},o.prototype._get=function(t,e){var n=this;this.db.get(t,function(t,r){if(t)return e(t);n.serializer.decode(r,e)})},o.prototype._put=function(t,e,n){var r=this;this.serializer.encode(e,function(e,o){if(e)return n(e);r.db.put(t,o,n)})},o.prototype.get=function(t,e){var n=this;this.length(function(r,o){return r?e(r):t>=o?e(new Error(\"LevelUpArrayAdapter named '\"+n.name+\"' index out of range: index \"+t+\"; length: \"+o)):void n._get(t,e)})},o.prototype.push=function(t,e){var n=this;this.length(function(r,o){if(r)return e(r);n._put(o+\"\",t,function(t){if(t)return e(t);n.db.put(\"length\",o+1,e)})})},o.prototype.pop=function(t){var e=this;this.length(function(n,r){if(n)return t(n);var o=r-1;e._get(o+\"\",function(n,r){if(n)return t(n);e.db.del(o+\"\",function(n){if(n)return t(n);e.db.put(\"length\",o,function(e){if(e)return t(e);t(null,r)})})})})},o.prototype.last=function(t){var e=this;this.length(function(n,r){return n?t(n):0===r?t(null,null):void e._get(r-1+\"\",t)})},o.prototype.first=function(t){this._get(\"0\",t)},t.exports=o},function(t,e,n){var r=n(20),o=n(3);function i(t,e,n,o,i){this.db=r(e,i),this.db=this.db.sublevel(t),this.name=t,this.valueserializer=n||{encode:function(t,e){e(null,t)},decode:function(t,e){e(null,t)}},this.keyserializer=o||{encode:function(t,e){e(null,t)},decode:function(t,e){e(null,t)}}}i.prototype.get=function(t,e,n){var r=this;\"function\"==typeof e&&(n=e,e={}),this.keyserializer.encode(t,function(t,e){if(t)return n(t);r.db.get(e,function(t,e){if(t)return n(t);r.valueserializer.decode(e,function(t,e){if(t)return n(t);n(null,e)})})})},i.prototype.put=function(t,e,n,r){var o=this;\"function\"==typeof n&&(r=n,n={}),this.keyserializer.encode(t,function(t,n){if(t)return r(t);o.valueserializer.encode(e,function(t,e){if(t)return r(t);o.db.put(n,e,r)})})},i.prototype.set=i.prototype.put,i.prototype.del=function(t,e){var n=this;this.keyserializer.encode(t,function(t,r){if(t)return e(t);n.db.del(r,e)})},i.prototype.batch=function(t,e,n){var r=this;o.each(t,function(t,n){\"put\"===t.type?r.put(t.key,t.value,e,n):\"del\"===t.type?r.del(t.key,n):n(new Error(\"Unknown batch type\",t.type))},function(t){if(t)return n(t);n()})},i.prototype.isOpen=function(){return!0},t.exports=i},function(t,e){t.exports=require(\"levelup\")},function(t,e){t.exports=require(\"encoding-down\")},function(t,e,n){var r=n(2),o=n(49).AbstractLevelDOWN,i=n(3),s=n(50),a=n(51);function c(t){this.location=t,o.call(this,t)}r.inherits(c,o),c.prototype._open=function(t,e){e(null,this)},c.prototype._put=function(t,e,n,r){s.writeFile(a.join(this.location,t),e,\"utf8\",r)},c.prototype._get=function(t,e,n){s.readFile(a.join(this.location,t),\"utf8\",function(t,e){if(t)return n(new Error(\"NotFound\"));n(null,e)})},c.prototype._del=function(t,e,n){s.unlink(a.join(this.location,t),function(t){if(t)return t.message.indexOf(\"ENOENT\")>=0?n():n(t);n()})},c.prototype._batch=function(t,e,n){var r=this;i.each(t,function(t,n){\"put\"===t.type?r.put(t.key,t.value,e,n):\"del\"===t.type?r.del(t.key,e,n):n(new Error(\"Unknown batch type\",t.type))},function(t){if(t)return n(t);n()})},t.exports=function(t){return new c(t)}},function(t,e){t.exports=require(\"abstract-leveldown\")},function(t,e){t.exports=require(\"fs\")},function(t,e){t.exports=require(\"path\")},function(t,e){t.exports=require(\"cachedown\")},function(t,e,n){var r=n(21),o=n(3),i=n(10);t.exports={encode:function(t,e){var n=t.toJSON(!0);o.map(t.transactions,function(t,e){r.encode(t,e)},function(t,r){if(t)return e(t);n.transactions=r,e(null,n)})},decode:function(t,e){var n=t.transactions;t.transactions=[];var s=new i(t);o.eachSeries(n,function(t,e){r.decode(t,function(t,n){if(t)return e(t);s.transactions.push(n),e()})},function(t){if(t)return e(t);e(null,s)})}}},function(t,e,n){var r=n(1),o=n(0);t.exports={encode:function(t,e){e(null,o.hex(t))},decode:function(t,e){e(null,r.toBuffer(t))}}},function(t,e,n){var r=n(11),o=n(3);function i(t){this.database=t}i.prototype.encode=function(t,e){e(null,t=t.map(function(t){return t.toJSON()}))},i.prototype.decode=function(t,e){var n=this;if(0===t.length)return e(null,[]);this.database.blockHashes.get(t[0].blockHash,function(i,s){if(i)return e(i);n.database.blocks.get(s,function(n,i){if(n)return e(n);o.map(t,function(t,e){e(null,new r({block:i,logIndex:t.logIndex,transactionIndex:t.transactionIndex,transactionHash:t.transactionHash,address:t.address,data:t.data,topics:t.topics,type:t.type}))},function(t,n){if(t)return e(t);e(null,n)})})})},t.exports=i},function(t,e,n){var r=n(12),o=n(3);function i(t){this.database=t}i.prototype.encode=function(t,e){e(null,t.toJSON())},i.prototype.decode=function(t,e){var n=this;this.database.transactions.get(t.transactionHash,function(i,s){if(i)return e(i);n.database.blockHashes.get(t.blockHash,function(i,a){if(i)return e(i);o.parallel({block:n.database.blocks.get.bind(n.database.blocks,a),logs:n.database.blockLogs.get.bind(n.database.blockLogs,a)},function(n,o){if(n)return e(n);e(null,new r(s,o.block,o.logs,t.gasUsed,t.cumulativeGasUsed,t.contractAddress,t.status,t.logsBloom))})})})},t.exports=i},function(t,e){t.exports=require(\"tmp\")},function(t,e,n){var r=n(18),o=n(7),i=n(10),s=n(11),a=n(12),c=n(1),u=n(59),l=n(14),h=n(0),p=n(3),f=n(15),d=n(68);function g(t){if(this.options=t||{},null==t.fork)throw new Error(\"ForkedBlockchain must be passed a fork parameter.\");if(this.fork=t.fork,this.forkBlockNumber=t.forkBlockNumber,this.forkVersion=null,\"string\"==typeof this.fork){if(this.fork.indexOf(\"@\")>=0){var e=this.fork.split(\"@\");this.fork=e[0],this.forkBlockNumber=parseInt(e[1])}this.fork=new l.providers.HttpProvider(this.fork)}this.time=t.time,this.storageTrieCache={},r.call(this,t),this.web3=new l(this.fork)}(0,n(2).inherits)(g,r),g.prototype.initialize=function(t,e){var n=this;this.web3.eth.net.getId(function(o,i){if(o)return e(o);n.forkVersion=i,r.prototype.initialize.call(n,t,function(t){if(t)return e(t);n.vm.stateManager._lookupStorageTrie=n.lookupStorageTrie.bind(n),n.vm.stateManager.cache._lookupAccount=n.getAccount.bind(n),n.vm.stateManager.getContractCode=n.getCode.bind(n),n.vm.stateManager.putContractCode=n.putCode.bind(n),e()})})},g.prototype.createStateTrie=function(t,e){return new u(t,e,{fork:this.fork,forkBlockNumber:this.forkBlockNumber,blockchain:this})},g.prototype.createGenesisBlock=function(t){var e=this,n=this.forkBlockNumber||\"latest\";e.web3.eth.getBlock(n,function(r,o){if(r)return t(r);!e.time&&e.forkBlockNumber&&(e.time=e.options.time=new Date(1e3*h.number(o.timestamp)),e.setTime(e.time)),n=h.hex(o.number),e.forkBlockNumber=e.options.forkBlockNumber=n,e.stateTrie.forkBlockNumber=n,e.createBlock(function(e,n){if(e)return t(e);n.header.number=c.toBuffer(h.number(o.number)+1),n.header.parentHash=c.toBuffer(o.hash),t(null,n)})})},g.prototype.createForkedStorageTrie=function(t){t=h.hex(t);var e=new u(this.data.trie_db,null,{address:t,stateTrie:this.stateTrie,blockchain:this,fork:this.fork,forkBlockNumber:this.forkBlockNumber});return this.storageTrieCache[t]=e,e},g.prototype.lookupStorageTrie=function(t,e){if(t=h.hex(t),null!=this.storageTrieCache[t])return e(null,this.storageTrieCache[t]);e(null,this.createForkedStorageTrie(t))},g.prototype.isFallbackBlock=function(t,e){var n=this;n.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);e(null,r<=h.number(n.forkBlockNumber))})},g.prototype.isBlockHash=function(t){return\"string\"==typeof t&&0===t.indexOf(\"0x\")&&t.length>42},g.prototype.isFallbackBlockHash=function(t,e){if(!this.isBlockHash(t))return e(null,!1);this.data.blockHashes.get(t,function(t,n){if(t)return t.notFound?e(null,!0):e(t);e(null,!1)})},g.prototype.getFallbackBlock=function(t,e){\"string\"==typeof t&&t.length<66&&(t=this.web3.utils.toBN(t)),this.web3.eth.getBlock(t,!0,function(t,n){if(t)return e(t);if(null==n)return e();var r=new i;r.header.parentHash=c.toBuffer(n.parentHash),r.header.uncleHash=c.toBuffer(n.sha3Uncles),r.header.coinbase=c.toBuffer(n.miner),r.header.stateRoot=c.toBuffer(n.stateRoot),r.header.transactionTrie=c.toBuffer(n.transactionsRoot),r.header.receiptTrie=c.toBuffer(n.receiptsRoot),r.header.bloom=c.toBuffer(n.logsBloom),r.header.difficulty=c.toBuffer(\"0x\"+n.totalDifficulty.toString(16)),r.header.number=c.toBuffer(n.number),r.header.gasLimit=c.toBuffer(n.gasLimit),r.header.gasUsed=c.toBuffer(n.gasUsed),r.header.timestamp=c.toBuffer(n.timestamp),r.header.extraData=c.toBuffer(n.extraData),(n.transactions||[]).forEach(function(t,e){r.transactions.push(f.fromJSON(t))}),r.hash=function(){return c.toBuffer(n.hash)},e(null,r)})},g.prototype.getBlock=function(t,e){var n=this;this.isFallbackBlockHash(t,function(o,i){return o?e(o):i?n.getFallbackBlock(t,e):void n.isFallbackBlock(t,function(o,i){if(o)return e(o);if(i)return n.getFallbackBlock(t,e);!function(t,e){n.isBlockHash(t)?e(null,t):n.getRelativeBlockNumber(t,e)}(t,function(t,o){if(t)return e(t);r.prototype.getBlock.call(n,o,e)})})})},g.prototype.getStorage=function(t,e,n,r){this.lookupStorageTrie(t,function(t,n){if(t)return r(t);n.get(e,r)})},g.prototype.getCode=function(t,e,n){var o=this;\"function\"==typeof e&&(n=e,e=\"latest\"),e||(e=\"latest\"),this.getEffectiveBlockNumber(e,function(i,s){if(i)return n(i);e=s,o.stateTrie.keyExists(t,function(i,s){if(i)return n(i);s&&e>h.number(o.forkBlockNumber)?r.prototype.getCode.call(o,t,e,n):(e>h.number(o.forkBlockNumber)&&(e=\"latest\"),o.fetchCodeFromFallback(t,e,function(t,e){e&&(e=c.toBuffer(e)),n(t,e)}))})})},g.prototype.putCode=function(t,e,n){var r=this;r.vm.stateManager.cache.flush(()=>{t=c.toBuffer(t),this.stateTrie.get(t,function(i,s){if(i)return n(i);var a=new o(s);a.setCode(r.stateTrie,e,function(e,o){if(e)return n(e);r.stateTrie.put(t,a.serialize(),function(e){if(e)return n(e);r.vm.stateManager.putAccount(t,a,n)})})})})},g.prototype.getAccount=function(t,e,n){var o=this;\"function\"==typeof e&&(n=e,e=\"latest\"),this.getEffectiveBlockNumber(e,function(i,s){if(i)return n(i);e=s,o.stateTrie.keyExists(t,function(i,s){if(i)return n(i);s&&e>h.number(o.forkBlockNumber)?r.prototype.getAccount.call(o,t,e,function(t,e){if(t)return n(t);n(null,e)}):o.fetchAccountFromFallback(t,e,n)})})},g.prototype.getTransaction=function(t,e){var n=this;r.prototype.getTransaction.call(this,t,function(r,o){return r?e(r):null!=o?e(null,o):void n.web3.eth.getTransaction(t,function(t,n){if(t)return e(t);n&&(n=f.fromJSON(n)),e(null,n)})})},g.prototype.getTransactionReceipt=function(t,e){var n=this;r.prototype.getTransactionReceipt.call(this,t,function(r,o){return r?e(r):o?e(null,o):void n.web3.eth.getTransactionReceipt(t,function(r,o){return r?e(r):o?void p.parallel({tx:n.getTransaction.bind(n,t),block:n.getBlock.bind(n,o.blockNumber)},function(t,n){if(t)return e(t);var r=o.logs.map(function(t){return new s(t)}),i=new a(n.tx,n.block,r,o.gasUsed,o.cumulativeGasUsed,o.contractAddress,o.status,h.hex(o.logsBloom));e(null,i)}):e()})})},g.prototype.fetchAccountFromFallback=function(t,e,n){var r=this;t=h.hex(t),p.parallel({code:this.fetchCodeFromFallback.bind(this,t,e),balance:this.fetchBalanceFromFallback.bind(this,t,e),nonce:this.fetchNonceFromFallback.bind(this,t,e)},function(t,e){if(t)return n(t);var i=e.code,s=e.balance,a=e.nonce,u=new o({nonce:a,balance:s});u.exists=\"0x\"!==i||\"0x0\"!==s||\"0x0\"!==a,u.setCode(r.stateTrie,c.toBuffer(i),function(t){if(t)return n(t);n(null,u)})})},g.prototype.fetchCodeFromFallback=function(t,e,n){var r=this;t=h.hex(t),\"function\"==typeof e&&(n=e,e=this.forkBlockNumber),this.getSafeFallbackBlockNumber(e,function(e,o){if(e)return n(e);r.web3.eth.getCode(t,o,function(t,e){if(t)return n(t);e=\"0x\"+c.toBuffer(e).toString(\"hex\"),n(null,e)})})},g.prototype.fetchBalanceFromFallback=function(t,e,n){var r=this;t=h.hex(t),\"function\"==typeof e&&(n=e,e=this.forkBlockNumber),this.getSafeFallbackBlockNumber(e,function(e,o){if(e)return n(e);r.web3.eth.getBalance(t,o,function(t,e){if(t)return n(t);e=\"0x\"+new d(e).toString(16),n(null,e)})})},g.prototype.fetchNonceFromFallback=function(t,e,n){var r=this;t=h.hex(t),\"function\"==typeof e&&(n=e,e=this.forkBlockNumber),this.getSafeFallbackBlockNumber(e,function(e,o){if(e)return n(e);r.web3.eth.getTransactionCount(t,o,function(t,e){if(t)return n(t);e=\"0x\"+r.web3.utils.toBN(e).toString(16),n(null,e)})})},g.prototype.getHeight=function(t){this.latestBlock(function(e,n){if(e)return t(e);t(null,h.number(n.header.number))})},g.prototype.getRelativeBlockNumber=function(t,e){var n=this;this.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);e(null,r-h.number(n.forkBlockNumber)-1)})},g.prototype.getSafeFallbackBlockNumber=function(t,e){var n=h.number(this.forkBlockNumber);if(null==t)return e(null,n);this.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);r>n&&(r=n),e(null,r)})},g.prototype.getBlockLogs=function(t,e){var n=this;this.getEffectiveBlockNumber(t,function(o,i){if(o)return e(o);n.getRelativeBlockNumber(i,function(o,i){if(o)return e(o);i<0?n.getBlock(t,function(r,o){if(r)return e(r);n.web3.currentProvider.send({jsonrpc:\"2.0\",method:\"eth_getLogs\",params:[{fromBlock:h.hex(t),toBlock:h.hex(t)}],id:(new Date).getTime()},function(t,n){if(t)return e(t);var r=n.result.map(function(t){return t.block=o,new s(t)});e(null,r)})}):r.prototype.getBlockLogs.call(n,i,e)})})},g.prototype._checkpointTrie=function(){var t=this;r.prototype._checkpointTrie.call(this),Object.keys(this.storageTrieCache).forEach(function(e){t.storageTrieCache[e].customCheckpoint()})},g.prototype._revertTrie=function(){var t=this;r.prototype._revertTrie.call(this),Object.keys(this.storageTrieCache).forEach(function(e){var n=t.storageTrieCache[e];0===n.checkpoints.length?delete t.storageTrieCache[e]:n.customRevert()})},t.exports=g},function(t,e,n){var r=n(19),o=n(1),i=n(2).inherits,s=n(14),a=n(0);function c(t,e,n){r.call(this,t,e),this.address=n.address,this.fork=n.fork,this.forkBlockNumber=n.forkBlockNumber,this.blockchain=n.blockchain,this.web3=new s,this.web3.setProvider(this.fork),this.checkpoints=[]}i(c,r),c.prototype.keyExists=function(t,e){t=o.toBuffer(t),this.findPath(t,function(t,n,r,o){var i=!1;n&&0===r.length&&(i=!0),e(t,i)})},c.prototype.get=function(t,e,n){var i=this;\"function\"==typeof e&&(n=e,e=i.forkBlockNumber),e=a.rpcQuantityHexString(e),t=o.toBuffer(t),this.keyExists(t,function(s,c){if(s)return n(s);c?r.prototype.get.call(i,t,function(t,e){n(t,e)}):null==i.address?i.blockchain.fetchAccountFromFallback(t,e,function(t,e){if(t)return n(t);n(null,e.serialize())}):i.web3.eth.getStorageAt(a.hex(i.address),a.hex(t),e,function(t,e){if(t)return n(t);e=o.toBuffer(e),e=o.rlp.encode(e),n(null,e)})})},c.prototype.customCheckpoint=function(){this.checkpoints.push(this.root)},c.prototype.customRevert=function(){this.root=this.checkpoints.pop()},t.exports=c},function(t){t.exports={_args:[[\"web3@1.0.0-beta.35\",\"C:\\\\Users\\\\David\\\\Desktop\\\\Code\\\\ganache-core\"]],_development:!0,_from:\"web3@1.0.0-beta.35\",_id:\"web3@1.0.0-beta.35\",_inBundle:!1,_integrity:\"sha512-xwDmUhvTcHQvvNnOPcPZZgCxKUsI2e+GbHy7JkTK3/Rmnutazy8x7fsAXT9myw7V1qpi3GgLoZ3fkglSUbg1Mg==\",_location:\"/web3\",_optional:!0,_phantomChildren:{},_requested:{type:\"version\",registry:!0,raw:\"web3@1.0.0-beta.35\",name:\"web3\",escapedName:\"web3\",rawSpec:\"1.0.0-beta.35\",saveSpec:null,fetchSpec:\"1.0.0-beta.35\"},_requiredBy:[\"/\"],_resolved:\"https://registry.npmjs.org/web3/-/web3-1.0.0-beta.35.tgz\",_spec:\"1.0.0-beta.35\",_where:\"C:\\\\Users\\\\David\\\\Desktop\\\\Code\\\\ganache-core\",author:{name:\"ethereum.org\"},authors:[{name:\"Fabian Vogelsteller\",email:\"fabian@ethereum.org\",homepage:\"http://frozeman.de\"},{name:\"Marek Kotewicz\",email:\"marek@parity.io\",url:\"https://github.com/debris\"},{name:\"Marian Oancea\",url:\"https://github.com/cubedro\"},{name:\"Gav Wood\",email:\"g@parity.io\",homepage:\"http://gavwood.com\"},{name:\"Jeffery Wilcke\",email:\"jeffrey.wilcke@ethereum.org\",url:\"https://github.com/obscuren\"}],bugs:{url:\"https://github.com/ethereum/web3.js/issues\"},dependencies:{\"web3-bzz\":\"1.0.0-beta.35\",\"web3-core\":\"1.0.0-beta.35\",\"web3-eth\":\"1.0.0-beta.35\",\"web3-eth-personal\":\"1.0.0-beta.35\",\"web3-net\":\"1.0.0-beta.35\",\"web3-shh\":\"1.0.0-beta.35\",\"web3-utils\":\"1.0.0-beta.35\"},description:\"Ethereum JavaScript API\",keywords:[\"Ethereum\",\"JavaScript\",\"API\"],license:\"LGPL-3.0\",main:\"src/index.js\",name:\"web3\",namespace:\"ethereum\",repository:{type:\"git\",url:\"https://github.com/ethereum/web3.js/tree/master/packages/web3\"},types:\"index.d.ts\",version:\"1.0.0-beta.35\"}},function(t,e){t.exports=require(\"web3-core\")},function(t,e){t.exports=require(\"web3-eth\")},function(t,e){t.exports=require(\"web3-net\")},function(t,e){t.exports=require(\"web3-eth-personal\")},function(t,e){t.exports=require(\"web3-shh\")},function(t,e){t.exports=require(\"web3-bzz\")},function(t,e){t.exports=require(\"web3-utils\")},function(t,e){t.exports=require(\"bn.js\")},function(t,e){t.exports=require(\"eth-sig-util\")},function(t,e){t.exports={randomBytes:function(t,e){for(var n=[],r=0;r<t;r++)n.push(255*e());return Buffer.from(n)},randomAlphaNumericString:function(t,e){const n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";let r=\"\";for(var o=0;o<t;o++)r+=n.charAt(Math.floor((e||Math.random)()*n.length));return r}}},function(t,e,n){function r(t){Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.message=t}(0,n(2).inherits)(r,Error),t.exports=r},function(t){t.exports={name:\"ganache-core\",version:\"2.2.1\",main:\"./index.js\",engines:{node:\">=8.9.0\"},directories:{lib:\"./lib\"},prettier:{printWidth:120,arrowParens:\"always\"},scripts:{_mocha:\"mocha --check-leaks --recursive --globals _scratch,sanitizedData\",_lint:\"eslint --ignore-path .gitignore .\",build:\"webpack-cli --config ./webpack/node/core.webpack.config.js\",\"build-web\":\"webpack-cli --config ./webpack/web-experimental/core.webpack.config.js\",format:'prettier --write \"{lib,perf,test}/**/*.js\" && eslint --fix --ignore-path .gitignore .',prepublishOnly:\"npm run test && npm run build && npm run test-build\",test:\"npm run _lint && npm run _mocha\",\"test-build\":\"cross-env TEST_BUILD=node npm run _mocha\",\"test-web-experimental\":\"cross-env TEST_BUILD=web-experimental npm run _mocha\"},dependencies:{\"abstract-leveldown\":\"3.0.0\",async:\"2.6.1\",bip39:\"2.5.0\",\"bn.js\":\"4.11.8\",cachedown:\"1.0.0\",clone:\"2.1.2\",debug:\"3.1.0\",\"encoding-down\":\"5.0.4\",\"eth-sig-util\":\"2.0.2\",\"ethereumjs-abi\":\"0.6.5\",\"ethereumjs-account\":\"2.0.5\",\"ethereumjs-block\":\"1.2.2\",\"ethereumjs-tx\":\"1.3.4\",\"ethereumjs-util\":\"5.2.0\",\"ethereumjs-vm\":\"2.4.0\",heap:\"0.2.6\",\"intercept-require\":\"^1.1.0\",\"level-sublevel\":\"6.6.4\",levelup:\"3.1.1\",lodash:\"4.17.10\",\"merkle-patricia-tree\":\"2.3.1\",seedrandom:\"2.4.4\",tmp:\"0.0.33\",\"web3-provider-engine\":\"^14.0.6\",websocket:\"1.0.26\"},devDependencies:{\"assert-match\":\"^1.1.1\",eslint:\"5.7.0\",\"eslint-config-standard\":\"12.0.0\",\"eslint-plugin-import\":\"2.14.0\",\"eslint-plugin-node\":\"7.0.1\",\"eslint-plugin-promise\":\"4.0.1\",\"eslint-plugin-standard\":\"4.0.0\",memdown:\"^1.3.1\",mocha:\"5.2.0\",prettier:\"^1.14.3\",browserfs:\"1.4.3\",\"cross-env\":\"5.2.0\",\"ethereumjs-wallet\":\"0.6.2\",pify:\"4.0.0\",portfinder:\"^1.0.18\",request:\"^2.88.0\",solc:\"0.4.24\",\"source-map-support\":\"^0.5.9\",temp:\"0.8.3\",web3:\"1.0.0-beta.35\",webpack:\"4.17.1\",\"webpack-bundle-size-analyzer\":\"2.7.0\",\"webpack-cli\":\"3.1.0\"},optionalDependencies:{\"ethereumjs-wallet\":\"0.6.2\",web3:\"1.0.0-beta.35\"},repository:{type:\"git\",url:\"https://github.com/trufflesuite/ganache-core\"},license:\"MIT\"}},function(t,e,n){const r=n(13);var o=n(22);function i(t){if(t=t||{},r.apply(this),!t.blockchain)throw new Error(\"RpcBlockTracker - no blockchain specified.\");if(!t.blockchain.on)throw new Error(\"RpcBlockTracker - blockchain is not an EventEmitter.\");this._blockchain=t.blockchain,this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.getTrackingBlock=this.getTrackingBlock.bind(this),this.awaitCurrentBlock=this.awaitCurrentBlock.bind(this),this._setCurrentBlock=this._setCurrentBlock.bind(this)}i.prototype=Object.create(r.prototype),i.prototype.constructor=i,i.prototype.getTrackingBlock=function(){return this._currentBlock},i.prototype.getCurrentBlock=function(){return this._currentBlock},i.prototype.awaitCurrentBlock=function(){const t=this;return this._currentBlock?this._currentBlock:new Promise(t=>this.once(\"block\",t)).then(()=>t._currentBlock)},i.prototype.start=function(t={}){return this._blockchain.on(\"block\",this._setCurrentBlock),Promise.resolve()},i.prototype.stop=function(){this._isRunning=!1,this._blockchain.removeListener(\"block\",this._setCurrentBlock)},i.prototype._setCurrentBlock=function(t){let e=o.toJSON(t,!0);if(this._currentBlock&&this._currentBlock.hash===e.hash)return;const n=this._currentBlock;this._currentBlock=e,this.emit(\"latest\",e),this.emit(\"sync\",{block:e,oldBlock:n}),this.emit(\"block\",e)},t.exports=i},function(t,e,n){n(6);var r=n(16),o=n(75),i=n(77),s=n(5);t.exports={create:function(t){var e=(t=c(t||{})).logger,n=new r(t),s=i(n,e);s.keepAliveTimeout=t.keepAliveTimeout;let a=0;const u={};s.on(\"connection\",t=>{let e=a++;u[e]=t,t.on(\"close\",()=>delete u[e])});var l=s.listen;s.listen=function(){var t=Array.prototype.slice.call(arguments),e=function(){};t.length>0&&(\"function\"==typeof t[t.length-1]&&(e=t.pop()));t.push(function(t){if(t)return e(t);s.provider.manager.waitForInitialization(e)}),l.apply(s,t)},s.provider=n,t.ws&&o(s,n,e);var h=s.close;return s.close=function(t){var e=Array.prototype.slice.call(arguments);h.apply(s,e),s.provider.close(function(e){if(e)return t(e);Object.keys(u).forEach(t=>{try{u[t].destroy()}catch(t){}})})},s}};const a={logger:{log:function(){}},ws:!0,keepAliveTimeout:5e3};var c=function(t){return s.merge({},a,t)}},function(t,e,n){var r=n(76).server;function o(t,e){const n=this;n.provider=t,n.logger=e,n.connectionsBySubscriptionId={},n.connections={},n.connectionCounter=0,n._updateSubscriptions=n._updateSubscriptions.bind(n),n.manageConnection=n.manageConnection.bind(n),n._logPayload=n._logPayload.bind(n),n._handleRequest=n._handleRequest.bind(n),t.on(\"data\",function(t,e){t||n._updateSubscriptions(e)})}t.exports=function(t,e,n){var i=new o(e,n),s=new r({httpServer:t,autoAcceptConnections:!0});return s.on(\"connect\",i.manageConnection),s},o.prototype.manageConnection=function(t){const e=this;t.id=++e.connectionCounter,e.connections[t.id]={connection:t,subscriptions:{}},t.on(\"message\",function(n){try{var r=JSON.parse(n.utf8Data)}catch(e){t.reject(400,\"Bad Request\")}e._logPayload(r),e._handleRequest(t,r)}),t.on(\"close\",function(){Object.keys(e.connections[t.id].subscriptions).forEach(t=>{e.provider.send({jsonrpc:\"2.0\",method:\"eth_unsubscribe\",params:[t],id:(new Date).getTime()},function(n,r){n||delete e.connectionsBySubscriptionId[t]})}),delete e.connections[t.id]})},o.prototype._handleRequest=function(t,e){const n=this;switch(e.method){case\"eth_subscribe\":n.provider.send(e,function(e,r){!e&&r.result&&(n.connections[t.id].subscriptions[r.result]=!0,n.connectionsBySubscriptionId[r.result]=n.connections[t.id]),t.send(JSON.stringify(r))});break;case\"eth_unsubscribe\":n.provider.send(e,function(r,o){r||o.error?t&&t.send&&t.send(JSON.stringify(o)):(delete n.connections[t.id].subscriptions[e.params[0]],delete n.connectionsBySubscriptionId[e.params[0]],t.send(JSON.stringify(o)))});break;default:n.provider.send(e,function(e,n){t.send(JSON.stringify(n))})}},o.prototype._logPayload=function(t){const e=this;if(t instanceof Array)for(var n=0;n<t.length;n++){var r=t[n];e.logger.log(r.method)}else e.logger.log(t.method)},o.prototype._updateSubscriptions=function(t){this.connectionsBySubscriptionId[t.params.subscription].connection.send(JSON.stringify(t))}},function(t,e){t.exports=require(\"websocket\")},function(t,e,n){var r=n(78);t.exports=function(t,e){var n=r.createServer(function(n,r){var o=n.method,i=[];n.on(\"data\",function(t){i.push(t)}).on(\"end\",function(){i=Buffer.concat(i).toString();var n={\"Access-Control-Allow-Headers\":\"Origin, X-Requested-With, Content-Type, Accept, User-Agent\",\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Methods\":\"*\"};switch(o){case\"OPTIONS\":n[\"Content-Type\"]=\"text/plain\",r.writeHead(200,n),r.end(\"\");break;case\"POST\":var s;try{s=JSON.parse(i)}catch(t){return n[\"Content-Type\"]=\"text/plain\",r.writeHead(400,n),void r.end(\"400 Bad Request\")}if(s instanceof Array)for(var a=0;a<s.length;a++){var c=s[a];e.log(c.method)}else e.log(s.method);t.send(s,function(t,e){n[\"Content-Type\"]=\"application/json\",r.writeHead(200,n),r.end(JSON.stringify(e))});break;default:r.writeHead(400,{\"Access-Control-Allow-Headers\":\"Origin, X-Requested-With, Content-Type, Accept, User-Agent\",\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Methods\":\"*\",\"Content-Type\":\"text/plain\"}),r.end(\"400 Bad Request\")}})});return n.ganacheProvider=t,n}},function(t,e){t.exports=require(\"http\")}])});\n//# sourceMappingURL=ganache.core.node.js.map"],"sourceRoot":""}